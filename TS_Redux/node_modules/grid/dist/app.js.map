{"version":3,"sources":["webpack://grid/webpack/universalModuleDefinition","webpack://grid/webpack/bootstrap","webpack://grid/./modules/util/index.ts","webpack://grid/./modules/dirty-clean/index.ts","webpack://grid/./modules/event-loop/index.ts","webpack://grid/../node_modules/key/lib/ref.js","webpack://grid/./modules/dirty-props/index.ts","webpack://grid/./modules/position-range/index.ts","webpack://grid/./modules/debounce/index.ts","webpack://grid/./modules/space/converter.ts","webpack://grid/./modules/space/dimensional-converter.ts","webpack://grid/./modules/abstract-row-col-model/index.ts","webpack://grid/./modules/data-model/index.ts","webpack://grid/./modules/range-util/index.ts","webpack://grid/./modules/cell-classes/index.ts","webpack://grid/./modules/cell-keyboard-model/index.ts","webpack://grid/./modules/cell-mouse-model/index.ts","webpack://grid/./modules/custom-event/index.ts","webpack://grid/./modules/cell-scroll-model/index.ts","webpack://grid/./modules/col-model/index.ts","webpack://grid/./modules/col-reorder/index.ts","webpack://grid/./modules/ctrl-or-cmd/index.ts","webpack://grid/../node_modules/element-class/index.js","webpack://grid/./modules/col-resize/index.ts","webpack://grid/./modules/copy-paste/index.ts","webpack://grid/./modules/decorators/index.ts","webpack://grid/./modules/edit-model/index.ts","webpack://grid/../node_modules/key/lib/key.js","webpack://grid/./modules/fps/index.ts","webpack://grid/./modules/navigation-model/index.ts","webpack://grid/./modules/pixel-scroll-model/index.ts","webpack://grid/./modules/row-model/index.ts","webpack://grid/./modules/show-hidden-cols/index.ts","webpack://grid/./modules/space/data-space-converter.ts","webpack://grid/./modules/space/view-space-converter.ts","webpack://grid/./modules/space/virtual-space-converter.ts","webpack://grid/./modules/view-layer/index.ts","webpack://grid/./modules/view-port/index.ts","webpack://grid/./modules/virtual-pixel-cell-model/index.ts","webpack://grid/./modules/core/index.ts","webpack://grid/../node_modules/es6-object-assign/index.js","webpack://grid/./modules/listeners/index.ts","webpack://grid/./modules/mousewheel/index.ts","webpack://grid/./modules/pass-through/index.ts","webpack://grid/./modules/header-decorators/index.ts","webpack://grid/./modules/tsv/index.ts","webpack://grid/../node_modules/inner-text-shim/index.js","webpack://grid/../node_modules/key/lib/code/special.js","webpack://grid/../node_modules/key/lib/code/arrow.js","webpack://grid/../node_modules/key/lib/code/punctuation.js","webpack://grid/../node_modules/key/lib/code/alnum.js","webpack://grid/../node_modules/key/lib/code/brand.js","webpack://grid/../node_modules/click-off/src/index.js","webpack://grid/../node_modules/time-now/index.js","webpack://grid/../node_modules/escape-stack/src/index.js","webpack://grid/./app/index.ts","webpack://grid/./modules/simple-grid/index.ts","webpack://grid/./modules/simple-data-model/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","num","min","max","returnNaN","NaN","rowCol","isNaN","node","style","nodeName","thing","undefined","Array","isArray","elem","b","h","w","top","left","bottom","right","height","width","position","x","y","transform","grid","dirty","unbindDrawHandler","dirtyCleanInstance","isDirty","isClean","setDirty","requestDraw","setClean","disable","enable","eventLoop","EVENTS","GRID_EVENTS","GridCustomMouseEvents","isAnnotatedGridCustomMouseEvent","e","type","ANNOTATED_MOUSE_EVENTS","click","dblclick","mousedown","mousemove","mouseup","ANNOTATED_MOUSE_EVENTS_MAP","isAnnotatedMouseEvent","isAnnotatedMouseEventOfType","ANNOTATED_KEY_EVENTS","keydown","keypress","keyup","ANNOTATED_KEY_EVENTS_MAP","isAnnotatedKeyEvent","isAnnotatedMouseOrKeyEvent","unbindAll","handlersByName","domUnbindFns","interceptors","exitListeners","eloop","isRunning","destroyed","setContainer","container","unbindMouseWheelFn","mainLoop","forEach","bindToDomElement","slice","unbind","keys","args","arguments","filter","arg","handler","getHandlerFromArgs","Error","util","isElement","document","listener","loopWith","isElementWithStyle","pointerEvents","_eventLoopIdx","getHandlers","push","_eventLoopUnbound","handlers","scheduleHandlerCleanUp","bindOnce","splice","indexOf","apply","this","fire","event","addInterceptor","addListener","addExitListener","stopBubbling","gridStopBubbling","addEventListener","unbindFn","removeEventListener","fn","bodyFn","logTargets","console","log","target","currentTarget","isOuterLoopRunning","notify","loop","some","isAnnotatedEvent","Reference","assertRef","isRef","ref","code","add","obj","props","dirtyCleans","prop","val","initialVal","set","newVal","oldVal","isChanged","preDirty","dirtyClean","dirtyProp","onDirty","isDirtyPropWithOn","WATCHED_PROP_NAMES","toStandardSpace","space","mixin","range","parentDirtyClean","propOpts","rangeResult","assign","units","_positionRangeDirtyClean","watchedProperties","map","propName","rowPositionRangeDimension","getPosition","getSize","setPosition","setSize","colPositionRangeDimension","debouncedFnProps","cancel","debounce","delay","f","timeout","clearTimeout","canceled","setTimeout","up","row","prev","down","next","col","iterate","getArgs","rowFn","cellFn","rowloop","rowResult","colloop","result","AbstractSpaceConverter","gridDimension","clamp","idx","count","coord","iterateWhileHidden","rowColModel","toVirtual","indexes","opts","from","to","length","Math","reverse","step","start","hidden","AbstractDimensionalSpaceConverter","lengthName","defaultSize","descriptors","_numFixed","_numHeaders","_selected","builderDirtyClean","areBuildersDirty","ROW_COL_EVENT_TYPE","fireSelectionChange","_toAdd","toAdd","toArray","descriptor","header","fixed","updateDescriptorIndices","setDescriptorsDirty","action","addHeaders","headerDescriptor","index","dataSpace","includeHeaders","subtract","remove","dontUpdateIndex","clear","removed","move","_fromIndexes","after","fromIndexes","toValue","sort","a","fromIndex","concat","numHeaders","numFixed","excludeHeaders","dataIndex","toData","virtualIndex","select","_indexes","dontFire","hasDescriptor","warn","selected","selectable","addDragReadyClass","deselect","selectedMap","reduce","selectedIndex","changes","removeDragReadyClass","array","selectedKey","toggleSelect","clearSelected","getSelected","allSelected","builder","expandedClass","expanded","isBuiltActionable","_fixed","exp","children","Infinity","cellClasses","setExpanded","dataModel","createBuilder","render","update","sizeOf","eventBody","oldSelected","dragReadyClass","compactAndSort","rangeStates","newRangeStates","rs","last","pop","end","AbstractRowColModel","nullResult","formatted","loadingResult","loadRows","getData","vR","vC","cachedRow","getCachedRow","cols","converters","virtual","rowDescriptor","rowModel","data","maybeLoadRows","extras","visibles","numVisibleRows","viewPort","rows","currentTopRow","cellScrollModel","currentBottomRow","toFetchSet","Set","toFetch","handleCachedDataChange","dataRow","dataCol","getHeader","virtualRow","virtualCol","rowOrData","datum","replace","split","change","rowData","range1","range2","range2Start","range1Start","range1End","range2End","resultStart","r1","c1","r2","c2","cachedClassMatrix","api","addOrRemoveCachedClass","_cellClassDirtyClean","getAll","getCachedClasses","vRow","vCol","className","thisDirtyClean","classPreDirty","classOnDirty","class","regnerateCache","isRemove","colModel","spaceKey","_annotateEventInternal","realRow","toView","realCol","_annotateEventFromDataCoords","navigationModel","focus","annotateEvent","_annotateEvent","PROPS_TO_COPY_FROM_MOUSE_EVENTS","scrollInterval","lastMoveRow","lastMoveCol","model","rowInfo","view","gridPx","gridY","layerPx","layerY","colInfo","gridX","layerX","_annotateEventFromViewCoords","viewRow","viewCol","toGridY","clientY","toGridX","clientX","toViewFromPx","calculateColScrollDiff","colDiff","getBoundingClientRect","innerWidth","virtualPixelCellModel","fixedWidth","calculateRowScrollDiff","rowDiff","innerHeight","fixedHeight","createCustomEventFromMouseEvent","originalEvent","createAndFireCustomMouseEvent","drag","dispatchEvent","downEvent","unbindAutoScrollDrag","lastDragRow","lastDragCol","dragStarted","lastX","lastY","unbindMove","mousemoveEvent","which","dragStart","enableAutoScroll","gridDragEvent","newRowDiff","clearInterval","interval","scrollTo","handleMouseUp","unbindUp","dragEnd","setupDragEventForMouseDown","bubbles","cancelable","detail","createEvent","initCustomEvent","makeDimension","getScrollToRowOrCol","virtualCoord","currentScroll","cellScrollDimension","isInView","targetScroll","convertVirtualToScroll","lengthToCell","virtualPixelCell","size","maxPosition","lastPosition","notifyListeners","getPixelScroll","getScrollIntoViewCell","dataCell","dontNotifyPixelModel","rowScrollChange","colScrollChange","scrollIntoView","newRow","newCol","pixelScrollModel","ColModel","elementClass","wasSelectedAtMousedown","_dragRects","_onMousedown","isTargetingColHeader","colDescriptor","_onDragStart","startCol","_targetCol","decorators","postRender","div","setAttribute","_renderedElem","error","dragRect","colOffset","getColLeft","getColWidth","_unbindKeyDown","escapeStack","removeDecoratorsAndUnbind","_unbindDrag","moveAfter","_unbindDragEnd","targetDataCol","toVirtualCol","removedDecs","navigator","userAgent","match","ctrlKey","metaKey","ElementClass","nodeType","el","body","querySelector","classes","join","has","annotateDecorator","headerDecorator","_dragLine","minX","getDecoratorLeft","dragLeft","dataIdx","webkitTransform","removeProperty","innerText","getCopyPasteRange","selectionRange","selection","makePasteDataChange","paste","focused","copyTable","createElement","tableBody","appendChild","tsvData","gotNull","td","JSON","stringify","textContent","innerHTML","clipboardData","setData","tsv","outerHTML","preventDefault","textarea","tsvPasteData","parse","pasteHtml","tempDiv","opacity","table","pasteData","whiteSpace","querySelectorAll","tr","tds","text","dataResult","trim","gridData","getAttribute","removeChild","singlePasteValue","dataChanges","ranges","otherSelections","pasteValue","newSelection","clearSelection","setSelection","maybeSelectText","editModel","editing","_e","_maybeSelectText","aliveDecorators","deadDecorators","_decorators","decorator","_decoratorDirtyClean","getAlive","popAllDead","oldDead","u","decoratorBase","Trigger","clickOff","_defaultDecorator","_hydrateOpts","optsCreator","isActionMode","getEditor","headers","editTriggers","Click","Space","Enter","Dblclick","Typing","saveTriggers","Tab","Clickoff","cancelTriggers","Escape","save","closePromise","_interceptor","getOptsForCol","optsHasSaveTrigger","is","special","tab","saveEdit","then","handleTabEvent","enter","shiftKey","setFocus","optsHasEditTrigger","eventIsOnCells","editCell","backspace","deleteSelection","altKey","getAllSelectedRanges","isTyping","savePromise","editor","setEditing","renderedElem","Promise","resolve","currentEditor","typedText","removeEscapeStackHandler","optsHasCancelTrigger","cancelEdit","removeClickOffHandler","listen","boundingBox","isInMe","_closeEditor","viewLayer","draw","maybeSetPromise","hasTrigger","trigger","triggers","editOptions","prevEditing","element","zIndex","iterator","__indexOf","item","__hasProp","arrow","punctuation","alnum","brand","pressed","context","out","timeNow","lastLoopTime","filteredAverage","requestId","frames","totalTime","totalFrames","totalWindowTime","filteredFrameTime","belowThresholdCount","numCalcs","cancelAnimationFrame","fps","threshold","windowSize","slowCount","logging","allAverages","markFrameTime","nowTime","frameLength","frame","shift","addFrameToWindow","getMovingAverage","getAllTimeAverage","getLast","getFilteredAverage","intervalId","setInterval","percentBelowThreshold","toFixed","fpsMeasure","requestAnimationFrame","mainSelection","createAndAddSelectionDecorator","checkboxModeFor","_selectionDecorator","focusDecorator","_rowSelectionClasses","_colSelectionClasses","getAllSelections","selections","inputRow","inputCol","dontClearSelection","dontSetSelection","changed","focusClass","clearOtherSelections","setSelectionToFocus","_navFrom","navFrom","selectionIsFocus","syncSelectionToHeaders","seekNextEdge","newIndex","startedDefined","isForwardEdge","isBackwardEdge","goForward","isEdgeToSeek","isLeftwardEdge","isRightwardEdge","isUpwardEdge","isDownwardEdge","isNavableMouseEvent","button","selectFromFocusToCell","fromRow","fromCol","toRow","toCol","ctrlOrCmdPressed","wasSelected","isCheckboxMode","rangeUtil","createFromPoints","prevSelections","findFullRowOrColSelections","prevSelection","removeFullRowOrColFromSelection","setSelectionFromPoints","colSelectable","addOrSetSelection","addSelection","rowOrCol","newSelections","bottomRow","selectionToRemove","equal","lastSelection","removeSelection","intersect","handleRowColSelectionChange","decoratorsField","rowColModelField","selectionDecorator","defaultRender","maybeSelectHeaderFromSelection","dontClearOthers","clearSelectionFromModelChange","newRowCol","newFocus","isCheckboxModeForRowCol","focusRow","focusCol","headerSelectionRange","createHeaderSelectionRange","selectAll","startRow","unbindDrag","gridCellDrag","fixedRows","fixedCols","unbindDragEnd","pixelDirtyClean","offsetDirtyClean","gridCrossDimension","getViewScrollSize","fixedSize","getRealScrollBarPosition","scroll","pixelScrollDimension","maxScroll","getScrollRatioFromVirtualScrollCoords","getMaxScrollBarCoord","getMaxScroll","maxIsAllTheWay","scrollSize","scrollLength","viewScrollSize","firstScrollableCell","positionRange","scrollBar","offset","px","dontNotify","positionScrollBar","updatePixelOffset","modPixels","snapToCell","cell","toCellFromPx","startCell","endCell","viewPortClampFn","clampPx","scrollBarElem","scrollBarOffset","cellMouse","scrollCoord","scrollBarRealClickCoord","getScrollPositionFromReal","stopPropagation","makeScrollBarDecorator","calcCellScrollPosition","sizeScrollBar","scrollableViewSize","scrollBarSize","totalSize","cacheMaxScroll","cacheScrollSize","_getMaxScroll","dimensions","maxIsAllTheWayFor","isOffsetDirty","setScrollSize","heightOrWidth","checkAngle","side1","side2","abs","atan","sizeScrollBars","updatePixelOffsets","stopParent","excludeStaticParent","overflowRegex","scrollParent","computedStyle","getComputedStyle","test","overflow","overflowY","overflowX","parentElement","ownerDocument","getScrollElementFromTarget","deltaY","deltaX","RowModel","setColShowing","doWhileHidden","inc","maybeRemoveDecorator","decCol","showingCol","rightSide","createDecorator","DimensionalDataSpaceConverter","DataSpaceConverter","DimensionalViewSpaceConverter","ViewSpaceConverter","DimensionalVirtualSpaceConverter","VirtualSpaceConverter","toReal","cellContainerTL","cellContainerTR","cellContainerBL","cellContainerBR","decoratorContainerTL","decoratorContainerTR","decoratorContainerBL","decoratorContainerBR","borderWidth","hoveredFixedRow","hoveredRow","cells","drawRequestedId","nonFixed","builtCols","builtRows","build","cleanup","makeCellContainer","makeDecoratorContainer","targetIsElement","classList","contains","renderedColElement","renderedRowElement","isTargetInElem","setTextContent","firstChild","nodeValue","getBorderWidth","_drawCells","jsGridCell","oldClass","borderWidthProp","getPropertyValue","parseInt","measureBorderWidth","lastVirtualCol","lastVirtualRow","bWidth","headerRows","headerCols","totalVisibleCellWidth","widths","lefts","virtualCols","positionRow","display","iterateCells","cellChild","toVirtualRow","hasRowBuilder","builtElem","notSameElem","getRowHeight","getRowTop","GRID_CELL_CONTAINER_BASE_CLASS","doToAllCellContainers","cellContainer","_buildCells","clearCellContainer","buildRow","boxSizing","buildDivCell","fixedRow","fixedCol","getCellContainer","_buildCols","buildDimension","previousElement","_buildRows","_drawDecorators","cellsPositionOrSizeChanged","hasBeenRendered","decElement","positionDecorator","positionCellDecoratorFromViewCellRange","createRangeForDescriptor","realCellRange","parent","scrollHorz","scrollVert","removeDecorators","_drawCellClasses","rowHeaderClasses","colHeaderClasses","fixedColClasses","fixedRowClasses","decoratorContainer","rebuilt","builtColsDirty","builtRowsDirty","modTopPixels","modLeftPixels","drawingDecorators","offsetTop","offsetLeft","position3D","decoratorTopOffset","decoratorLeftOffset","marginTop","marginLeft","destroyRenderedElems","oldElems","oldElem","destroyEvent","dimension","crossDimension","previouslyBuiltElems","getRenderContext","builtElems","realI","bounding","realPxRange","toPx","renderedElement","destroyPreviouslyBuilt","built","gridViewRoots","getLengthBetweenViewCoords","startCoord","endCoord","inclusive","viewDimension","lengthFn","clampFn","clampCell","pos","isInNonfixedArea","isInFixedArea","exclusiveOffset","getRowOrColFromPosition","returnVirtual","viewMax","summedLength","pixelScroll","newSum","clientPx","clientRect","getClientRects","toGrid","viewCoord","virtualRowCol","cellScroll","maxViewPortIndex","toVirtualFromPx","intersection","fixedRange","virtualRange","fixedIntersection","scrollRange","scrollIntersection","resultRange","union","updateSize","newSize","oldSize","totalLength","lengthMethod","windowLength","maxSize","fixedLength","windowStartIndex","maxLength","lengthOfIindex","calculateMaxLengths","_getLengthBetweenCoords","_onResize","_resize","shortDebouncedResize","sizeToContainer","isHeightChange","offsetHeight","isWidthChange","offsetWidth","isSizeChange","maxRow","maxCol","rowIsInView","colIsInView","toRealRow","toRealCol","clampRow","clampCol","clampY","clampX","getVirtualRowByTop","getVirtualColByLeft","getRowByTop","getColByLeft","sumLength","maxRowCol","isNumber","getRow","getCol","totalHeight","totalWidth","sizeChangeListener","polyfill","userSuppliedEscapeStack","lazyGetterMap","lazyGetter","getFn","drawRequested","timeouts","intervals","gridCore","maxWidth","maxHeight","background","color","border","boxShadow","resize","cursor","v","id","widthResetTimeout","tabIndex","setupTextareaForContainer","scrollTop","scrollLeft","makeDirtyClean","destroy","cellMouseModel","cellKeyboardModel","disableReorder","colReorder","allowEdit","showHiddenCols","disableResize","colResize","copyPaste","firstSource","TypeError","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","configurable","writable","listeners","EVENT_NAMES","getDelta","xaxis","wheelDelta","delta","wheelDeltaY","wheelDeltaX","oldFFWheelEvent","axis","normalizedListener","normalizeWheelEvent","normalize","newEvent","defaultPrevented","makeDecorator","firstRect","ensureDecoratorPerCol","isNeeded","stringResult","stringData","strData","strDelimiter","objPattern","RegExp","arrData","arrMatches","exec","strMatchedDelimiter","strMatchedValue","DSVToArray","getSelection","rangeCount","getRangeAt","removeAllRanges","selectAllChildren","toString","addRange","ctrl","alt","caps","esc","colon","comma","hyphen","period","tilde","apostrophe","slash","forward","backward","brace","square","open","close","semicolon","plus","lessthan","underscore","greaterthan","question","backtick","pipe","quote","curly","g","j","k","q","z","apple","windows","menu","onClickOff","parsedOpts","lastMouseDownWasOutside","eventListenerElement","mousedownHandler","mouseupHandler","perf","performance","now","Date","getTime","globalStack","makeStack","stack","keyCode","removeEscapeHandler","global","getElementsByClassName","floor","random","subRow","dataLayer","ctx","headerRow","numRows","numCols","varyHeights","varyWidths","preSetupFn","setHeader","_grid","sortedCol","cellData","headerData","ascending","internalSet","_isCopy","toggleSort","retVal","dataRow1","dataRow2","val1","val2"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grid\"] = factory();\n\telse\n\t\troot[\"grid\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 53);\n","export type RowCol = 'row' | 'col';\n\nexport function clamp(num: number, min: number, max: number, returnNaN?: boolean) {\n    if (num > max) {\n        return returnNaN ? NaN : max;\n    }\n    if (num < min) {\n        return returnNaN ? NaN : min;\n    }\n    return num;\n}\n\nexport function isRow(rowCol: RowCol) {\n    return rowCol === 'row';\n}\n\nexport function isCol(rowCol: RowCol) {\n    return rowCol === 'col';\n}\n\nexport function isNumber(num: any): num is number {\n    return typeof num === 'number' && !isNaN(num);\n}\n\nexport function isElementWithStyle(node?: any): node is HTMLElement {\n    return !!node.style;\n}\n\nexport function isElement(node?: any): node is HTMLElement {\n    return !!(node &&\n        node.nodeName); // we are a direct element\n}\nexport function toArray<T>(thing?: T | T[]): T[] {\n    return thing != undefined && (!Array.isArray(thing) ? [thing] : thing) || [];\n}\n\nexport function position(elem: HTMLElement, t?: number, l?: number, b?: number, r?: number, h?: number, w?: number) {\n    if (t != null) {\n        elem.style.top = t + 'px';\n    }\n    if (l != null) {\n        elem.style.left = l + 'px';\n    }\n    if (b != null) {\n        elem.style.bottom = b + 'px';\n    }\n    if (r != null) {\n        elem.style.right = r + 'px';\n    }\n    if (h != null) {\n        elem.style.height = h + 'px';\n    }\n    if (w != null) {\n        elem.style.width = w + 'px';\n    }\n    elem.style.position = 'absolute';\n}\n\nexport function position3D(elem: HTMLElement, t?: number, l?: number) {\n    let x = '0';\n    let y = '0';\n    if (l != null) {\n        x = l + 'px';\n    }\n    if (t != null) {\n        y = t + 'px';\n    }\n    elem.style.transform = 'translate3d(' + x + ',' + y + ',0)';\n}\n","import { Grid } from '../core';\n\nexport interface IDirtyClean {\n    isDirty(): boolean;\n    isClean(): boolean;\n    setDirty(): void;\n    setClean(): void;\n    disable(): void;\n    enable(): void;\n}\n\nexport function create(grid: Grid) {\n    let dirty = true;\n\n    let unbindDrawHandler: (() => void) | null = null;\n\n    function listenForDraw() {\n        if (!unbindDrawHandler) {\n            unbindDrawHandler = grid.eventLoop.bind('grid-draw', () => {\n                dirtyCleanInstance.setClean();\n            });\n        }\n    }\n\n    const dirtyCleanInstance: IDirtyClean = {\n        isDirty() {\n            return dirty;\n        },\n        isClean() {\n            return !dirty;\n        },\n        setDirty() {\n            dirty = true;\n            // when things are initalizing sometimes this doesn't exist yet\n            // we have to hope that at the end of initialization the grid will call request draw itself\n            if (grid.requestDraw) {\n                grid.requestDraw();\n            }\n        },\n        setClean() {\n            dirty = false;\n        },\n        disable() {\n            if (unbindDrawHandler) {\n                unbindDrawHandler();\n                unbindDrawHandler = null;\n            }\n        },\n        enable() {\n            listenForDraw();\n        }\n    };\n\n    dirtyCleanInstance.enable();\n\n    return dirtyCleanInstance;\n}\n\nexport default create;","import { IRowColEvent } from '../abstract-row-col-model';\nimport debounce from '../debounce';\nimport listeners from '../listeners';\nimport mousewheel from '../mousewheel';\nimport * as util from '../util';\n\nexport const EVENTS: Array<keyof HTMLElementEventMap> =\n    ['click', 'mousedown', 'mouseup', 'mousemove', 'dblclick', 'keydown', 'keypress', 'keyup', 'copy', 'paste'];\n\nexport const GRID_EVENTS = ['grid-drag-start', 'grid-drag', 'grid-cell-drag', 'grid-drag-end', 'grid-cell-mouse-move'];\n\nexport interface IAnnotatedEvent {\n    realRow: number;\n    realCol: number;\n    virtualRow: number;\n    virtualCol: number;\n    row: number;\n    col: number;\n}\n\nexport interface IAnnotatedMouseEvent extends IAnnotatedEvent {\n    gridX: number;\n    gridY: number;\n}\n\nexport interface IGridCustomMouseEvent extends CustomEvent, IAnnotatedMouseEvent {\n    clientX: number;\n    clientY: number;\n    layerX: number;\n    layerY: number;\n    originalEvent: AnnotatedMouseEventUnion;\n}\n\nexport interface IGridDragStartEvent extends IGridCustomMouseEvent {\n    enableAutoScroll(): void;\n}\n\n// tslint:disable-next-line:interface-over-type-literal\nexport type GridCustomMouseEventMap = {\n    'grid-drag': IGridCustomMouseEvent,\n    'grid-cell-drag': IGridCustomMouseEvent,\n    'grid-drag-start': IGridDragStartEvent,\n    'grid-drag-end': IGridCustomMouseEvent,\n    'grid-cell-mouse-move': IGridCustomMouseEvent,\n};\n\nconst GridCustomMouseEvents: { [key: string]: boolean | undefined } = {\n    'grid-drag': true,\n    'grid-cell-drag': true,\n    'grid-drag-start': true,\n    'grid-drag-end': true,\n    'grid-cell-mouse-move': true,\n};\n\nexport type GridCustomMouseEventTypes = keyof GridCustomMouseEventMap;\n\n// tslint:disable-next-line:interface-over-type-literal\nexport type GridCustomEventMap = GridCustomMouseEventMap & {\n    'grid-row-change': IRowColEvent,\n    'grid-col-change': IRowColEvent,\n};\n\nexport const isAnnotatedGridCustomMouseEvent = (e: EventUnion): e is AnnotatedGridCustomMouseEventUnion => !!GridCustomMouseEvents[e.type];\n\nexport const ANNOTATED_MOUSE_EVENTS = {\n    click: true,\n    dblclick: true,\n    mousedown: true,\n    mousemove: true,\n    mouseup: true,\n};\nexport const ANNOTATED_MOUSE_EVENTS_MAP: { readonly [key: string]: boolean | undefined; } = ANNOTATED_MOUSE_EVENTS;\nexport const isAnnotatedMouseEvent = (e: EventUnion): e is AnnotatedMouseEventUnion => !!ANNOTATED_MOUSE_EVENTS_MAP[e.type];\nexport const isAnnotatedMouseEventOfType =\n    <T extends keyof typeof ANNOTATED_MOUSE_EVENTS>(e: EventUnion, type: T): e is AnnotatedHTMLElementMouseEventMap[T] =>\n        type === e.type;\n\nexport const ANNOTATED_KEY_EVENTS = {\n    keydown: true,\n    keypress: true,\n    keyup: true,\n};\nexport const ANNOTATED_KEY_EVENTS_MAP: { readonly [key: string]: boolean | undefined; } = ANNOTATED_KEY_EVENTS;\nexport const isAnnotatedKeyEvent = (e: EventUnion): e is AnnotatedKeyEventUnion => !!ANNOTATED_KEY_EVENTS_MAP[e.type];\n\nexport const isAnnotatedMouseOrKeyEvent = (e: EventUnion): e is AnnotatedMouseOrKeyEventUnion =>\n    isAnnotatedKeyEvent(e) ||\n    isAnnotatedMouseEvent(e);\nexport const isAnnotatedEvent = (e: EventUnion): e is AnnotatedEventUnion =>\n    isAnnotatedMouseOrKeyEvent(e) ||\n    isAnnotatedGridCustomMouseEvent(e);\n\nexport type AnnotatedHTMLElementKeyEventMap = {\n    [K in keyof typeof ANNOTATED_KEY_EVENTS]: IAnnotatedEvent & HTMLElementEventMap[K];\n};\n\nexport type AnnotatedHTMLElementMouseEventMap = {\n    [K in keyof typeof ANNOTATED_MOUSE_EVENTS]: IAnnotatedMouseEvent & HTMLElementEventMap[K];\n};\n\nexport type AnnotatedHTMLElementEventMap = AnnotatedHTMLElementKeyEventMap & AnnotatedHTMLElementMouseEventMap;\nexport type AnnotatedGridCustomMouseEventUnion = GridCustomMouseEventMap[keyof GridCustomMouseEventMap];\nexport type AnnotatedMouseEventUnion = AnnotatedHTMLElementMouseEventMap[keyof AnnotatedHTMLElementMouseEventMap];\nexport type AnnotatedKeyEventUnion = AnnotatedHTMLElementKeyEventMap[keyof AnnotatedHTMLElementKeyEventMap];\nexport type AnnotatedMouseOrKeyEventUnion = AnnotatedMouseEventUnion | AnnotatedKeyEventUnion;\nexport type AnnotatedEventUnion = AnnotatedMouseOrKeyEventUnion | AnnotatedGridCustomMouseEventUnion;\n\nexport type AnnotatedWindowKeyEventMap = {\n    [K in keyof typeof ANNOTATED_KEY_EVENTS]: IAnnotatedEvent & WindowEventMap[K];\n};\n\nexport type AnnotatedWindowMouseEventMap = {\n    [K in keyof typeof ANNOTATED_MOUSE_EVENTS]: IAnnotatedMouseEvent & WindowEventMap[K];\n};\n\nexport type AnnotatedWindowEventMap = AnnotatedWindowKeyEventMap & AnnotatedWindowMouseEventMap;\n\nexport type AnnotatedDocumentKeyEventMap = {\n    [K in keyof typeof ANNOTATED_KEY_EVENTS]: IAnnotatedEvent & DocumentEventMap[K];\n};\n\nexport type AnnotatedDocumentMouseEventMap = {\n    [K in keyof typeof ANNOTATED_MOUSE_EVENTS]: IAnnotatedMouseEvent & DocumentEventMap[K];\n};\n\nexport type AnnotatedDocumentEventMap = AnnotatedDocumentKeyEventMap & AnnotatedDocumentMouseEventMap;\n\nexport type AllEventMap = AnnotatedHTMLElementEventMap & HTMLElementEventMap & WindowEventMap & DocumentEventMap & GridCustomEventMap;\nexport type EventUnion = AllEventMap[keyof AllEventMap] | (ILoopEvent & { target?: undefined; });\n\nexport type WindowEventHandler<K extends keyof WindowEventMap> = (ev: WindowEventMap[K]) => any;\nexport type DocumentEventHandler<K extends keyof DocumentEventMap> = (ev: DocumentEventMap[K]) => any;\nexport type HTMLElementEventHandler<K extends keyof HTMLElementEventMap> = (ev: HTMLElementEventMap[K]) => any;\nexport type AnnotatedWindowEventHandler<K extends keyof AnnotatedWindowEventMap> = (ev: AnnotatedWindowEventMap[K]) => any;\nexport type AnnotatedDocumentEventHandler<K extends keyof AnnotatedDocumentEventMap> = (ev: AnnotatedDocumentEventMap[K]) => any;\nexport type AnnotatedHTMLElementEventHandler<K extends keyof AnnotatedHTMLElementEventMap> = (ev: AnnotatedHTMLElementEventMap[K]) => any;\nexport type GridCustomEventHandler<K extends keyof GridCustomEventMap> = (ev: GridCustomEventMap[K]) => any;\nexport type LoopEventHandler = (ev: ILoopEvent) => any;\nexport type EventUnionHandler = (ev: EventUnion) => any;\n\nexport interface ILoopEvent {\n    type: string;\n    gridStopBubbling?: boolean;\n}\n\nexport interface IEventHandler extends LoopEventHandler {\n    _eventLoopIdx?: number;\n    _eventLoopUnbound?: boolean;\n}\n\nexport type EventHandlerUnbinder = () => void;\nexport type BindTarget = HTMLElement | Window | Document;\n\nexport interface IBind {\n    bind<K extends keyof AnnotatedWindowEventMap>(\n        elem: Window,\n        name: K,\n        handler: AnnotatedWindowEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof AnnotatedDocumentEventMap>(\n        elem: Document,\n        name: K,\n        handler: AnnotatedDocumentEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof AnnotatedHTMLElementEventMap>(\n        elem: HTMLElement,\n        name: K,\n        handler: AnnotatedHTMLElementEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof AnnotatedHTMLElementEventMap>(\n        name: K,\n        handler: AnnotatedHTMLElementEventHandler<K>\n    ): EventHandlerUnbinder;\n\n    bind<K extends keyof GridCustomEventMap>(\n        elem: BindTarget,\n        name: K,\n        handler: GridCustomEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof GridCustomEventMap>(\n        name: K,\n        handler: GridCustomEventHandler<K>\n    ): EventHandlerUnbinder;\n\n    bind<K extends keyof WindowEventMap>(\n        elem: Window,\n        name: K,\n        handler: WindowEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof DocumentEventMap>(\n        elem: Document,\n        name: K,\n        handler: DocumentEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof HTMLElementEventMap>(\n        elem: HTMLElement,\n        name: K,\n        handler: HTMLElementEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof HTMLElementEventMap>(\n        name: K,\n        handler: HTMLElementEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind(name: string, handler: IEventHandler): EventHandlerUnbinder;\n}\n\n// tslint:disable-next-line:interface-over-type-literal\nexport type BindOnce<T> = {\n    bindOnce: T[keyof T];\n};\n\nexport interface IEventLoop extends IBind {\n    isRunning: boolean;\n    destroyed: boolean;\n    logTargets?: boolean;\n    setContainer(c: HTMLElement): void;\n    fire(event: string | ILoopEvent): void;\n    addInterceptor(h: EventUnionHandler): EventHandlerUnbinder;\n    addExitListener(h: EventUnionHandler): EventHandlerUnbinder;\n    stopBubbling(e: ILoopEvent): ILoopEvent;\n}\nexport type EventLoop = IEventLoop & BindOnce<IBind>;\n\nexport function create() {\n    const handlersByName: { [key: string]: Array<IEventHandler | null> | undefined } = {};\n    const domUnbindFns: EventHandlerUnbinder[] = [];\n    const interceptors = listeners();\n    const exitListeners = listeners();\n\n    let unbindAll: () => void;\n\n    const eloop: EventLoop = {\n        isRunning: false,\n        destroyed: false,\n        setContainer(container: HTMLElement) {\n            const unbindMouseWheelFn = mousewheel.bind(container, mainLoop);\n\n            EVENTS.forEach((name) => {\n                bindToDomElement(container, name, mainLoop);\n            });\n\n            GRID_EVENTS.forEach((name) => {\n                bindToDomElement(window, name, mainLoop);\n            });\n\n            unbindAll = () => {\n                unbindMouseWheelFn();\n\n                // have to copy the array since the unbind will actually remove itself from the array which modifies it mid iteration\n                domUnbindFns.slice(0).forEach((unbind) => {\n                    unbind();\n                });\n\n                Object.keys(handlersByName).forEach((key) => {\n                    handlersByName[key] = [];\n                });\n            };\n        },\n        // tslint:disable-next-line:only-arrow-functions object-literal-shorthand\n        bind: function () {\n            const args: any[] = Array.prototype.slice.call(arguments, 0);\n            const name: string = args.filter((arg) => {\n                return typeof arg === 'string';\n            })[0];\n            const handler = getHandlerFromArgs(args);\n            if (!handler || !name) {\n                throw new Error('cannot bind without at least name and function');\n            }\n\n            const elem: BindTarget = args.filter((arg) => {\n                return util.isElement(arg) || arg === window || arg === document;\n            })[0];\n\n            if (!elem) {\n\n                handler._eventLoopIdx = getHandlers(name).push(handler) - 1;\n                handler._eventLoopUnbound = false;\n                return () => {\n                    if (handler._eventLoopUnbound) {\n                        return;\n                    }\n                    handler._eventLoopUnbound = true;\n                    const handlers = getHandlers(name);\n                    if (handler._eventLoopIdx != undefined) {\n                        handlers[handler._eventLoopIdx] = null;\n                    }\n                    // release the memory but do the expensive work later all at once\n                    scheduleHandlerCleanUp();\n                };\n            } else {\n                const listener = loopWith(handler);\n                // make sure the elem can receive events\n                if (util.isElementWithStyle(elem)) {\n                    elem.style.pointerEvents = 'auto';\n                }\n                return bindToDomElement(elem, name, listener);\n            }\n        },\n        // tslint:disable-next-line:only-arrow-functions object-literal-shorthand\n        bindOnce: function (this: any) {\n            const args = Array.prototype.slice.call(arguments, 0);\n            const handler = getHandlerFromArgs(args);\n            args.splice(args.indexOf(handler), 1, function bindOnceHandler(e: ILoopEvent) {\n                unbind();\n                handler(e);\n            });\n            const unbind = eloop.bind.apply(this, args);\n            return unbind;\n        },\n        fire: (event) => {\n            event = typeof event === 'string' ? {\n                type: event\n            } : event;\n            mainLoop(event);\n        },\n        addInterceptor: interceptors.addListener,\n        addExitListener: exitListeners.addListener,\n        stopBubbling(e: ILoopEvent) {\n            e.gridStopBubbling = true;\n            return e;\n        }\n    };\n\n    function getHandlers(name: string) {\n        let handlers = handlersByName[name];\n        if (!handlers) {\n            handlers = handlersByName[name] = [];\n        }\n        return handlers;\n    }\n\n    function bindToDomElement(elem: BindTarget, name: string, listener: EventListener) {\n        elem.addEventListener(name, listener);\n        const unbindFn = () => {\n            elem.removeEventListener(name, listener);\n            domUnbindFns.splice(domUnbindFns.indexOf(unbindFn), 1);\n        };\n        domUnbindFns.push(unbindFn);\n        return unbindFn;\n    }\n\n    function getHandlerFromArgs(args: any[]) {\n        const handler: IEventHandler = args.filter((arg) => {\n            return typeof arg === 'function';\n        })[0];\n        return handler;\n    }\n\n    function loopWith(fn: (e: ILoopEvent) => void) {\n        return (e: ILoopEvent) => {\n            loop(e, fn);\n        };\n    }\n\n    const scheduleHandlerCleanUp = debounce(() => {\n        Object.keys(handlersByName).forEach((type) => {\n            let i = 0;\n            const handlers = handlersByName[type];\n            if (!handlers) {\n                return;\n            }\n            handlersByName[type] = handlers.filter((handler) => {\n                if (!!handler) {\n                    handler._eventLoopIdx = i;\n                    i++;\n                }\n                return !!handler;\n            });\n        });\n    }, 1);\n\n    const mainLoop = loopWith((e) => {\n        // have to copy the array because handlers can unbind themselves which modifies the array\n        // we use some so that we can break out of the loop if need be\n        getHandlers(e.type).slice(0).some((handler) => {\n            if (!handler) {\n                return false;\n            }\n            handler(e);\n            if (e.gridStopBubbling) {\n                return true;\n            }\n            return false;\n        });\n    });\n\n    function loop(e: ILoopEvent, bodyFn: (e: ILoopEvent) => void) {\n        if (eloop.logTargets) {\n            console.log('target', (e as any).target, 'currentTarget', (e as any).currentTarget);\n        }\n        const isOuterLoopRunning = eloop.isRunning;\n        eloop.isRunning = true;\n        interceptors.notify(e);\n        if (!e.gridStopBubbling) {\n            bodyFn(e);\n        }\n\n        if (!isOuterLoopRunning) {\n            eloop.isRunning = false;\n            exitListeners.notify(e);\n        }\n    }\n\n    eloop.bind('grid-destroy', () => {\n        unbindAll();\n        eloop.destroyed = true;\n    });\n\n    return eloop;\n}\n\nexport default create;","// Generated by CoffeeScript 1.3.3\n(function() {\n  'use strict';\n\n  var Reference, assertRef, isRef, ref;\n\n  Reference = (function() {\n\n    function Reference(name, code) {\n      this.name = name;\n      this.code = code;\n    }\n\n    return Reference;\n\n  })();\n\n  ref = function(name, code) {\n    return new Reference(name, code);\n  };\n\n  isRef = function(ref) {\n    return ref instanceof Reference;\n  };\n\n  assertRef = function(ref) {\n    if (!isRef(ref)) {\n      throw new Error('Invalid reference');\n    }\n    return ref;\n  };\n\n  module.exports = {\n    ref: ref,\n    isRef: isRef,\n    assertRef: assertRef\n  };\n\n}).call(this);\n","import { IDirtyClean } from '../dirty-clean';\n\nexport interface IHasPreDirty {\n    preDirty(): void;\n}\n\nexport interface IHasOnDirty {\n    onDirty<T>(newVal: T, oldVal: T): void;\n}\n\nexport interface IDirtyProp extends Partial<IHasPreDirty>, Partial<IHasOnDirty> {\n    name: string;\n}\n\nexport type DirtyProp = string | IDirtyProp;\n\nconst isDirtyPropWithPre =\n    (dirtyProp: any): dirtyProp is IHasPreDirty =>\n        !!(dirtyProp as IDirtyProp).preDirty;\nconst isDirtyPropWithOn =\n    (dirtyProp: any): dirtyProp is IHasOnDirty =>\n        !!(dirtyProp as IDirtyProp).onDirty;\n\nexport function add<T>(obj: T, props: DirtyProp[], dirtyCleans: IDirtyClean[]) {\n    props.forEach((prop) => {\n        let val: any;\n        const name = (prop as IDirtyProp).name || prop as string;\n        // store the value if it was already there\n        const initialVal = (obj as any)[name];\n        Object.defineProperty(obj, name, {\n            enumerable: true,\n            get() {\n                return val;\n            },\n            set(newVal: any) {\n                const oldVal = val;\n                const isChanged = newVal !== oldVal;\n                if (isChanged && isDirtyPropWithPre(prop)) {\n                    prop.preDirty();\n                }\n                val = newVal;\n\n                if (isChanged) {\n                    dirtyCleans.forEach((dirtyClean) => {\n                        dirtyClean.setDirty();\n                    });\n                    if (isDirtyPropWithOn(prop)) {\n                        prop.onDirty(newVal, oldVal);\n                    }\n                }\n            }\n        });\n        // reset the initial value both to keep it and to trigger the dirty logic\n        (obj as any)[name] = initialVal;\n    });\n    return obj;\n}\n\nexport default add;","import { IDirtyClean } from '../dirty-clean';\nimport addDirtyProps, { DirtyProp, IDirtyProp } from '../dirty-props';\n\nexport type IDirtyPropOpts = Pick<IDirtyProp, 'preDirty' | 'onDirty'>;\nconst WATCHED_PROP_NAMES = ['top', 'left', 'height', 'width', 'units', 'space'];\n\nexport type PositionUnit = 'cell' | 'px';\nexport type PositionSpace = 'data' | 'virtual' | 'real';\n\nexport const toStandardSpace = (space: PositionSpace) => {\n  if (space === 'real') {\n    return 'view';\n  }\n  return space;\n};\n\nexport interface IRawPositionRange {\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n}\n\nexport type RawPositionRange = IRawPositionRange;\nexport type PartialRawPositionRange = Partial<IRawPositionRange>;\nexport type RawPositionRangeUnion = RawPositionRange | PartialRawPositionRange;\n\nexport interface IPartialPositionRange extends PartialRawPositionRange {\n  units: PositionUnit;\n  space: PositionSpace;\n  isDirty(): boolean;\n}\n\n// not the sexiest but we get the position type assuming top / left width / height are the same type\nexport type PositionType<T extends RawPositionRangeUnion> = T['top'];\nexport type SizeType<T extends RawPositionRangeUnion> = T['height'];\nexport type PositionGet = <T extends RawPositionRangeUnion>(r: T) => PositionType<T>;\nexport type PositionSet = <T extends RawPositionRangeUnion>(r: T, p: PositionType<T>) => T;\nexport type SizeGet = <T extends RawPositionRangeUnion>(r: T) => SizeType<T>;\nexport type SizeSet = <T extends RawPositionRangeUnion>(r: T, p: SizeType<T>) => T;\n\nexport interface IPositionRangeDimension {\n  getPosition: PositionGet;\n  setPosition: PositionSet;\n  getSize: SizeGet;\n  setSize: SizeSet;\n}\n\nconst getTop = <T extends RawPositionRangeUnion>(range: T) => {\n  return range.top;\n};\n\nconst setTop = <T extends RawPositionRangeUnion>(range: T, p: number) => {\n  range.top = p;\n  return range;\n};\n\nconst getHeight = <T extends RawPositionRangeUnion>(range: T) => {\n  return range.height;\n};\n\nconst setHeight = <T extends RawPositionRangeUnion>(range: T, s: number) => {\n  range.height = s;\n  return range;\n};\n\nconst getLeft = <T extends RawPositionRangeUnion>(range: T) => {\n  return range.left;\n};\nconst setLeft = <T extends RawPositionRangeUnion>(range: T, p: number) => {\n  range.left = p;\n  return range;\n};\n\nconst getWidth = <T extends RawPositionRangeUnion>(range: T) => {\n  return range.width;\n};\n\nconst setWidth = <T extends RawPositionRangeUnion>(range: T, s: number) => {\n  range.width = s;\n  return range;\n};\n\nexport const rowPositionRangeDimension: IPositionRangeDimension = {\n  getPosition: getTop,\n  getSize: getHeight,\n  setPosition: setTop,\n  setSize: setHeight,\n};\n\nexport const colPositionRangeDimension: IPositionRangeDimension = {\n  getPosition: getLeft,\n  getSize: getWidth,\n  setPosition: setLeft,\n  setSize: setWidth,\n};\n\nexport function mixin<T extends object>(\n  range: T,\n  dirtyClean: IDirtyClean,\n  parentDirtyClean?: IDirtyClean,\n  propOpts?: IDirtyPropOpts\n) {\n  range = range || {}; // allow mixin functionality\n  // tslint:disable-next-line:prefer-object-spread\n  const rangeResult: IPartialPositionRange & T = Object.assign(range, {\n    isDirty: dirtyClean.isDirty,\n    // defaults\n    units: 'cell' as 'cell',\n    space: 'data' as 'data',\n  });\n\n  (rangeResult as any)._positionRangeDirtyClean = dirtyClean;\n\n  let watchedProperties: DirtyProp[] = WATCHED_PROP_NAMES;\n  if (propOpts) {\n    watchedProperties = WATCHED_PROP_NAMES.map((propName) => {\n      return {\n        name: propName,\n        onDirty: propOpts.onDirty,\n        preDirty: propOpts.preDirty\n      };\n    });\n  }\n  const dirtyCleans = [dirtyClean];\n  if (parentDirtyClean) {\n    dirtyCleans.push(parentDirtyClean);\n  }\n\n  addDirtyProps(rangeResult, watchedProperties, dirtyCleans);\n\n  return rangeResult;\n}\n\nexport default mixin;\n","export interface IDebounceFunction {\n    (): void;\n    timeout?: number;\n    canceled?: boolean;\n    cancel(): void;\n}\n\n// up here to avoid creating a new object just for assignment every time\nconst debouncedFnProps = { cancel: () => { /* noop */ } };\n\nexport function debounce(fn: (...args: any[]) => void, delay: number) {\n    // tslint:disable-next-line:prefer-object-spread\n    const f: IDebounceFunction = Object.assign(function debounced() {\n        if (f.timeout) {\n            clearTimeout(f.timeout);\n            f.timeout = undefined;\n        }\n        if (!f.canceled) {\n            f.timeout = window.setTimeout(fn, delay);\n        }\n        f.cancel = () => {\n            if (f.timeout != undefined) {\n                clearTimeout(f.timeout);\n            }\n            f.timeout = undefined;\n            f.canceled = true;\n        };\n    }, debouncedFnProps);\n    return f;\n}\n\nexport default debounce;","import { IColDescriptor, IRowDescriptor } from '../abstract-row-col-model';\nimport { Grid } from '../core';\nimport { RawPositionRange } from '../position-range';\nimport { CellFn, getArgs, RowFn } from '../range-util';\n\nimport { AbstractDimensionalSpaceConverter } from './dimensional-converter';\n\nexport abstract class AbstractSpaceConverter {\n  abstract row: AbstractDimensionalSpaceConverter<IRowDescriptor>;\n  abstract col: AbstractDimensionalSpaceConverter<IColDescriptor>;\n  up: (coord: number) => number | undefined;\n  down: (coord: number) => number | undefined;\n  left: (coord: number) => number | undefined;\n  right: (coord: number) => number | undefined;\n  grid: Grid;\n  constructor(grid: Grid) {\n    this.grid = grid;\n    this.up = (i) => this.row.prev(i);\n    this.down = (i) => this.row.next(i);\n    this.left = (i) => this.col.prev(i);\n    this.right = (i) => this.col.next(i);\n  }\n\n  iterate(range: RawPositionRange, cellFn: CellFn<undefined>): void;\n  iterate<T>(range: RawPositionRange, rowFn: RowFn<T>, cellFn: CellFn<T>): void;\n  iterate<T>() {\n    // expects to be called with the space as its this\n    const args = getArgs<T>(arguments);\n    const range = args.range;\n    const rowFn = args.rowFn;\n    const cellFn = args.cellFn;\n\n    rowloop: for (let r: number | undefined = range.top; r !== undefined && r < range.top + range.height; r = this.row.next(r)) {\n      let rowResult;\n      if (rowFn) {\n        rowResult = rowFn(r);\n      }\n      colloop: for (let c: number | undefined = range.left; c !== undefined && c < range.left + range.width; c = this.col.next(c)) {\n        if (cellFn) {\n          const result = cellFn(r, c, rowResult);\n          if (result === false) {\n            break rowloop;\n          } else if (result === true) {\n            break colloop;\n          }\n        }\n      }\n    }\n  }\n}","import { IColDescriptor, IRowDescriptor } from '../abstract-row-col-model';\nimport { IGridDimension } from '../core';\nimport * as  util from '../util';\n\nexport type DimensionalSpaceCoordConverter = (spaceCoord: number) => number;\n\nexport interface IIndexOpts {\n  from?: number;\n  to?: number;\n  length?: number;\n  reverse?: boolean;\n}\n\nexport abstract class AbstractDimensionalSpaceConverter<T extends IColDescriptor | IRowDescriptor> {\n  gridDimension: IGridDimension;\n  constructor(gridDimension: IGridDimension) {\n    this.gridDimension = gridDimension;\n  }\n  abstract toVirtual(spaceCoord: number): number;\n  abstract toView(spaceCoord: number): number;\n  abstract toData(spaceCoord: number): number;\n  abstract count(): number;\n  clamp(idx: number): number {\n    return util.clamp(idx, 0, this.count() - 1);\n  }\n  prev(coord: number) {\n    return this.iterateWhileHidden(-1, coord);\n  }\n  next(coord: number) {\n    return this.iterateWhileHidden(1, coord);\n  }\n  get(coord: number): T {\n    return this.gridDimension.rowColModel.get(this.toVirtual(coord)) as T;\n  }\n\n  indexes(opts: IIndexOpts = {}) {\n    opts.from = opts.from || 0;\n    const count = this.count();\n    opts.to = (opts.to && opts.to + 1) ||\n      (opts.length && opts.length + opts.from) ||\n      count;\n    const indexes = [];\n    for (let idx: number | undefined = Math.max(opts.from, 0);\n      idx != undefined && idx < Math.min(opts.to, count);\n      idx = opts.reverse ? this.prev(idx) : this.next(idx)) {\n      indexes.push(idx);\n    }\n    return indexes;\n  }\n  iterate(opts: IIndexOpts, fn: (idx: number) => boolean | undefined): void;\n  iterate(fn: (idx: number) => boolean | undefined): void;\n  iterate() {\n    let opts: IIndexOpts | undefined;\n    let fn: (idx: number) => boolean | undefined;\n    if (arguments.length === 2) {\n      opts = arguments[0];\n      fn = arguments[1];\n    } else {\n      fn = arguments[0];\n    }\n    this.indexes(opts).some((idx: number) => {\n      return !!fn(idx);\n    });\n  }\n  private iterateWhileHidden(step: number = 1, start: number) {\n    for (let i = start + step; i < this.count() && i >= 0; i += step) {\n      if (!this.get(i).hidden) {\n        return i;\n      }\n    }\n    return undefined;\n  }\n}","import { Grid } from '../core';\nimport { IGridDataChangeBody, IGridDataResult } from '../data-model';\nimport debounce from '../debounce';\nimport makeDirtyClean, { IDirtyClean } from '../dirty-clean';\nimport addDirtyProps from '../dirty-props';\nimport { IEditOptions } from '../edit-model';\nimport passThrough from '../pass-through';\nimport * as util from '../util';\n\nexport interface IAbstractRowColModel {\n  defaultSize: number;\n  areBuildersDirty: () => boolean;\n  isDirty: () => boolean;\n  get(i: number): IRowColDescriptor;\n  toVirtual(i: number): number;\n  toData(i: number): number;\n  length(includeHeaders?: boolean): number;\n  header(index: number): IRowColDescriptor;\n  add(d?: IRowColDescriptor | IRowColDescriptor[]): void;\n  addHeaders(d?: IRowColDescriptor | IRowColDescriptor[]): void;\n  remove(descriptor: IRowColDescriptor, dontUpdateIndex?: boolean): void;\n  clear(includeHeaders?: boolean): void;\n  move(fromIndexes: number | number[], target: number, after?: boolean): void;\n  numHeaders(): number;\n  numFixed(excludeHeaders?: boolean): number;\n  sizeOf(index: number): number;\n  select(indexes: number | number[], dontFire?: boolean): void;\n  deselect(indexes: number | number[], dontFire?: boolean): void;\n  toggleSelect(index: number): void;\n  clearSelected(): void;\n  getSelected(): number[];\n  allSelected(): boolean;\n  create(builder?: IRowColBuilder): IRowColDescriptor;\n  createBuilder(render: BuilderRenderer, update?: BuilderUpdater): IRowColBuilder;\n}\n\nexport interface IRowColDescriptor {\n  expanded: boolean;\n  isBuiltActionable: boolean;\n  hidden?: boolean;\n  index?: number;\n  selected?: boolean;\n  selectable?: boolean;\n  header?: boolean;\n  fixed?: boolean;\n  dragReadyClass?: any; // a class descriptor\n  builder?: IRowColBuilder;\n  children?: IRowColDescriptor[];\n  editOptions?: IEditOptions;\n  data?: Array<IGridDataChangeBody<any>>;\n}\n\nexport interface IRowDescriptor extends IRowColDescriptor {\n  height?: number;\n  children?: IRowDescriptor[];\n}\nexport interface IColDescriptor extends IRowColDescriptor {\n  width?: number;\n  children?: IColDescriptor[];\n}\n\nexport interface IBuilderUpdateContext {\n  virtualCol: number;\n  virtualRow: number;\n  data: IGridDataResult<any>;\n}\nexport interface IBuilderRenderContext {\n  viewRow: number;\n  viewCol: number;\n  previousElement: HTMLElement | undefined;\n}\n\nexport type BuilderRenderer = (context: IBuilderRenderContext) => HTMLElement | undefined;\nexport type BuilderUpdater = (builtElem: HTMLElement | undefined, context: IBuilderUpdateContext) => HTMLElement | void;\n\nexport interface IRowColBuilder {\n  render: BuilderRenderer;\n  update: BuilderUpdater;\n  includeHeaders: boolean;\n}\n\nexport interface IRowColEventBody {\n  action: 'add' | 'remove' | 'move' | 'hide' | 'size';\n  descriptors: IRowColDescriptor[];\n  target?: undefined;\n}\n\nexport interface IRowColEvent extends IRowColEventBody {\n  type: string;\n}\n\nexport class AbstractRowColModel {\n  grid: Grid;\n  defaultSize: number;\n  areBuildersDirty: () => boolean;\n  isDirty: () => boolean;\n  private name: string;\n  rangeStates: any[];\n  private descriptors: IRowColDescriptor[] = [];\n  private _numFixed: number = 0;\n  private _numHeaders: number = 0;\n  private dirtyClean: IDirtyClean;\n  private builderDirtyClean: IDirtyClean;\n  private _selected: number[] = [];\n  private ROW_COL_EVENT_TYPE: string;\n  private lengthName: string;\n  private fireSelectionChange: () => void;\n  constructor(\n    grid: Grid,\n    name: string,\n    lengthName: string,\n    defaultSize: number\n  ) {\n    this.grid = grid;\n    this.name = name;\n    this.dirtyClean = makeDirtyClean(grid);\n    this.builderDirtyClean = makeDirtyClean(grid);\n    this.areBuildersDirty = this.builderDirtyClean.isDirty;\n    this.isDirty = this.dirtyClean.isDirty;\n    this.ROW_COL_EVENT_TYPE = 'grid-' + name + '-change';\n    this.defaultSize = defaultSize;\n    this.lengthName = lengthName;\n    this.fireSelectionChange = debounce(() => {\n      grid.eventLoop.fire('grid-' + name + '-selection-change');\n    }, 1);\n  }\n\n  add(_toAdd?: IRowColDescriptor | IRowColDescriptor[]) {\n    if (!_toAdd) {\n      return;\n    }\n    const toAdd = util.toArray(_toAdd);\n    toAdd.forEach((descriptor) => {\n      if (descriptor.header) {\n        this.descriptors.splice(this._numHeaders, 0, descriptor);\n        this._numFixed++;\n        this._numHeaders++;\n      } else {\n        // if the column is fixed and the last one added is fixed (we only allow fixed at the beginning for now)\n        if (descriptor.fixed) {\n          if (!this.descriptors.length || this.descriptors[this.descriptors.length - 1].fixed) {\n            this._numFixed++;\n          } else {\n            throw new Error('Cannot add a fixed column after an unfixed one');\n          }\n        }\n        this.descriptors.push(descriptor);\n      }\n    });\n    this.updateDescriptorIndices();\n    this.setDescriptorsDirty({\n      action: 'add',\n      descriptors: toAdd\n    });\n  }\n  addHeaders(_toAdd?: IRowColDescriptor | IRowColDescriptor[]) {\n    if (!_toAdd) {\n      return;\n    }\n    const toAdd = util.toArray(_toAdd);\n    toAdd.forEach((headerDescriptor) => {\n      headerDescriptor.header = true;\n    });\n    this.add(toAdd);\n  }\n  header(index: number) {\n    return this.descriptors[index];\n  }\n  get(index: number, dataSpace?: boolean) {\n    if (dataSpace) {\n      index += this._numHeaders;\n    }\n    return this.descriptors[index];\n  }\n  length(includeHeaders?: boolean) {\n    const subtract = includeHeaders ? 0 : this._numHeaders;\n    return this.descriptors.length - subtract;\n  }\n  remove(descriptor: IRowColDescriptor, dontUpdateIndex?: boolean) {\n    const index = this.descriptors.indexOf(descriptor);\n    if (index !== -1) {\n      this.descriptors.splice(index, 1);\n      if (descriptor.header) {\n        this._numFixed--;\n        this._numHeaders--;\n      } else if (descriptor.fixed) {\n        this._numFixed--;\n      }\n    }\n    if (!dontUpdateIndex) {\n      this.updateDescriptorIndices();\n      this.setDescriptorsDirty({\n        action: 'remove',\n        descriptors: [descriptor]\n      });\n    }\n  }\n  clear(includeHeaders?: boolean) {\n    let removed;\n    if (includeHeaders) {\n      removed = this.descriptors;\n      this.descriptors = [];\n      this._numFixed = 0;\n      this._numHeaders = 0;\n    } else {\n      removed = this.descriptors.slice(this._numHeaders);\n      this.descriptors = this.descriptors.slice(0, this._numHeaders);\n      this._numFixed = this._numHeaders;\n    }\n    this.updateDescriptorIndices();\n    if (removed && removed.length) {\n      this.setDescriptorsDirty({\n        action: 'remove',\n        descriptors: removed\n      });\n    }\n  }\n  move(_fromIndexes: number | number[], target: number, after?: boolean) {\n    const fromIndexes = util.toArray(_fromIndexes);\n\n    if (fromIndexes.length === 1) {\n      // the single move case is easier and doesn't require the after hint\n      const from = fromIndexes[0];\n      this.descriptors.splice(target, 0, this.descriptors.splice(from, 1)[0]);\n      this.setDescriptorsDirty({\n        action: 'move',\n        descriptors: [this.get(from), this.get(target)]\n      });\n    } else {\n      while (fromIndexes.indexOf(target) !== -1 && target !== -1) {\n        target--;\n        after = true;\n      }\n\n      const toValue = this.descriptors[target];\n      const removed = fromIndexes\n        .sort((a, b) => b - a)\n        .map((fromIndex) => {\n          const removedDescriptors = this.descriptors.splice(fromIndex, 1);\n          return removedDescriptors[0];\n\n        });\n      removed.reverse();\n      this.descriptors.splice(this.descriptors.indexOf(toValue) + (after ? 1 : 0), 0, ...removed);\n      this.updateDescriptorIndices();\n      this.setDescriptorsDirty({\n        action: 'move',\n        descriptors: removed.concat(toValue)\n      });\n    }\n  }\n  numHeaders() {\n    return this._numHeaders;\n  }\n  numFixed(excludeHeaders?: boolean) {\n    return this._numFixed - (excludeHeaders ? this._numHeaders : 0);\n  }\n  toVirtual(dataIndex: number) {\n    return dataIndex + this.numHeaders();\n  }\n  toData(virtualIndex: number) {\n    return virtualIndex - this.numHeaders();\n  }\n\n  select(_indexes: number | number[], dontFire?: boolean) {\n    const indexes = util.toArray(_indexes);\n    const changes = indexes\n      .filter((idx) => {\n        const hasDescriptor = !!this.get(idx, true);\n        if (!hasDescriptor) {\n          console.warn('Tried to select index that had no descriptor', idx);\n        }\n        return hasDescriptor;\n      })\n      .map((idx) => {\n        const descriptor = this.get(idx, true);\n        if (!descriptor.selected && descriptor.selectable !== false) {\n          this.addDragReadyClass(descriptor, idx);\n          descriptor.selected = true;\n          this._selected.push(idx);\n          return idx;\n        }\n        return undefined;\n      })\n      .filter((c) => c != undefined) as number[];\n    if (changes.length && !dontFire) {\n      this.fireSelectionChange();\n    }\n  }\n  deselect(_indexes: number | number[], dontFire?: boolean) {\n    const indexes = util.toArray(_indexes);\n    const selectedMap = this._selected.reduce<{ [key: string]: number | false }>((map, selectedIndex) => {\n      map[selectedIndex] = selectedIndex;\n      return map;\n    }, {});\n    const changes = indexes\n      .filter((idx) => {\n        const hasDescriptor = !!this.get(idx, true);\n        if (!hasDescriptor) {\n          console.warn('Tried to deselect index that had no descriptor', idx);\n        }\n        return hasDescriptor;\n      })\n      .map((idx) => {\n        const descriptor = this.get(idx, true);\n        this.removeDragReadyClass(descriptor);\n        if (descriptor.selected) {\n          descriptor.selected = false;\n          selectedMap[idx] = false;\n          return idx;\n        }\n        return undefined;\n      })\n      .filter((c) => c != undefined) as number[];\n\n    this._selected =\n      Object.keys(selectedMap)\n        .reduce<number[]>((array, selectedKey) => {\n          const idx = selectedMap[selectedKey];\n          if (idx !== false) {\n            array.push(idx);\n          }\n          return array;\n        }, []);\n\n    if (changes.length && !dontFire) {\n      this.fireSelectionChange();\n    }\n  }\n  toggleSelect(index: number) {\n    const descriptor = this.get(index, true);\n    if (descriptor.selected) {\n      this.deselect(index);\n    } else {\n      this.select(index);\n    }\n  }\n  clearSelected() {\n    // have to make a copy or we are iterating the same array we're removing from yikes.\n    return this.deselect(this.getSelected().slice(0));\n  }\n  getSelected() {\n    return this._selected;\n  }\n  allSelected() {\n    return this.getSelected().length === this.length();\n  }\n  create(builder?: IRowColBuilder) {\n    let fixed: boolean | undefined = false;\n    let expanded = false;\n    let expandedClass: any; // TODO: cell class descriptor type\n    const setExpanded = (exp: boolean) => {\n      if (!descriptor.children || descriptor.index == undefined) {\n        return;\n      }\n      expanded = exp;\n      // we never look for changes to the children, if you need to change it, remove and add the row again\n      if (expanded) {\n        this.descriptors.splice(descriptor.index + 1, 0, ...descriptor.children);\n        this.updateDescriptorIndices();\n        this.setDescriptorsDirty({\n          action: 'add',\n          descriptors: descriptor.children\n        });\n        const top = this.name === 'row' ? descriptor.index : 0;\n        const left = this.name === 'col' ? descriptor.index : 0;\n        const height = this.name === 'row' ? 1 : Infinity;\n        const width = this.name === 'col' ? 1 : Infinity;\n        expandedClass = this.grid.cellClasses.create(top, left, 'grid-expanded', height, width, 'virtual');\n        this.grid.cellClasses.add(expandedClass);\n\n      } else {\n        this.descriptors.splice(descriptor.index + 1, descriptor.children.length);\n        this.updateDescriptorIndices();\n        this.setDescriptorsDirty({\n          action: 'remove',\n          descriptors: [...descriptor.children]\n        });\n        if (expandedClass) {\n          this.grid.cellClasses.remove(expandedClass);\n        }\n      }\n    };\n    const descriptor: IRowColDescriptor = {\n      isBuiltActionable: true,\n      get fixed() {\n        return descriptor.header || !!fixed;\n      },\n      set fixed(_fixed: boolean | undefined) {\n        fixed = _fixed;\n      },\n      get expanded() {\n        return expanded;\n      },\n      set expanded(exp: boolean) {\n        setExpanded(exp);\n      }\n    };\n\n    addDirtyProps(descriptor, ['builder'], [this.builderDirtyClean]);\n    addDirtyProps(descriptor, [{\n      name: 'data', onDirty: () => {\n        this.grid.dataModel.setDirty();\n      }\n    }], []);\n    descriptor.builder = builder;\n\n    return addDirtyProps(descriptor, [{\n      name: this.lengthName,\n      onDirty: () => {\n        this.setDescriptorsDirty({\n          action: 'size',\n          descriptors: [descriptor]\n        });\n      }\n    }, {\n      name: 'hidden',\n      onDirty: () => {\n        this.setDescriptorsDirty({\n          action: 'hide',\n          descriptors: [descriptor]\n        });\n      }\n    }], [this.dirtyClean]);\n  }\n  createBuilder(render: BuilderRenderer, update: BuilderUpdater = passThrough, includeHeaders: boolean = false) {\n    return {\n      render,\n      update,\n      includeHeaders\n    };\n  }\n\n  sizeOf(index: number) {\n    const descriptor = this.get(index);\n    if (!descriptor) {\n      return NaN;\n    }\n\n    if (descriptor.hidden) {\n      return 0;\n    }\n\n    const size: number | undefined = (descriptor as any)[this.lengthName];\n    return size || this.defaultSize;\n  }\n\n  private setDescriptorsDirty(eventBody: IRowColEventBody) {\n    // tslint:disable-next-line:prefer-object-spread\n    const event: IRowColEvent = Object.assign(eventBody, {\n      type: this.ROW_COL_EVENT_TYPE\n    });\n    this.grid.eventLoop.fire(event);\n    this.dirtyClean.setDirty();\n    this.builderDirtyClean.setDirty();\n  }\n\n  private updateDescriptorIndices() {\n    const oldSelected = this._selected;\n    this._selected = [];\n    this.descriptors.forEach((descriptor, i) => {\n      descriptor.index = i;\n      if (descriptor.selected) {\n        this._selected.push(i);\n      }\n    });\n    if (this._selected.length !== oldSelected.length) {\n      this.fireSelectionChange();\n      return;\n    }\n    this._selected.sort();\n    oldSelected.sort();\n    const change = oldSelected.some((idx, i) => {\n      return idx !== this._selected[i];\n    });\n    if (change) {\n      this.fireSelectionChange();\n    }\n  }\n\n  private addDragReadyClass(descriptor: IRowColDescriptor, index: number) {\n    if (!descriptor || !(index >= 0)) {\n      return;\n    }\n    const top = this.name === 'row' ? index : -1;\n    const left = this.name === 'row' ? -1 : index;\n    const dragReadyClass = this.grid.cellClasses.create(top, left, 'grid-col-drag-ready');\n    this.grid.cellClasses.add(dragReadyClass);\n    descriptor.dragReadyClass = dragReadyClass;\n  }\n\n  private removeDragReadyClass(descriptor: IRowColDescriptor) {\n    if (!descriptor || !descriptor.dragReadyClass) {\n      return;\n    }\n    this.grid.cellClasses.remove(descriptor.dragReadyClass);\n    descriptor.dragReadyClass = undefined;\n  }\n\n  private compactAndSort() {\n    this.rangeStates = this.rangeStates\n      .slice()\n      .sort((a, b) => a.start - b.start)\n      .reduce((newRangeStates, rs) => {\n        const last = newRangeStates.pop();\n\n        if (!last) {\n          return [...newRangeStates, rs];\n        }\n\n        if (last.end < rs.start) {\n          return [...newRangeStates, last, rs];\n        }\n\n        if (last.end > rs.end) {\n          return [...newRangeStates, last];\n        }\n\n        // overlapping ranges\n        return [\n          ...newRangeStates,\n          {\n            start: last.start,\n            end: rs.end,\n          }\n        ];\n      }, []);\n  }\n}\n\nexport function create(\n  grid: Grid,\n  name: string,\n  lengthName: string,\n  defaultSize: number\n): IAbstractRowColModel {\n  return new AbstractRowColModel(grid, name, lengthName, defaultSize);\n}\n\nexport default create;","import { Grid } from '../core';\nimport makeDirtyClean from '../dirty-clean';\n\nexport interface IGridDataResult<T> {\n  value: T;\n  formatted: string;\n}\n\nexport interface IGridDataChangeBody<T> {\n  value: T;\n  formatted?: string;\n}\n\nexport interface IGridDataChange<T> extends IGridDataChangeBody<T> {\n  row: number;\n  col: number;\n  paste?: boolean;\n}\n\nexport interface IDataModel {\n  isDirty(): boolean;\n  setDirty(): void;\n  handleCachedDataChange(): void;\n  get(dataRow: number, dataCol: number, isCopy?: boolean): IGridDataResult<any>;\n  getHeader(virtualRow: number, virtualCol: number): IGridDataResult<any>;\n  set(dataRow: number, dataCol: number, value: any): void;\n  set(changes: Array<IGridDataChange<any>>): void;\n  toggleSort?(c: number): void;\n}\n\nexport type RowLoader = (dataRow: number[]) => void;\n\n// untested basic data model impl\nconst nullResult = { value: null, formatted: '' };\nconst loadingResult = { value: null, formatted: 'Loading...' };\n\nexport function create(grid: Grid, loadRows?: RowLoader): IDataModel {\n  const dirtyClean = makeDirtyClean(grid);\n\n  const getData = (vR: number, vC: number) => {\n    const cachedRow = getCachedRow(vR);\n    if (cachedRow) {\n      return {\n        formatted: '',\n        ...cachedRow[vC]\n      };\n    }\n    if (loadRows) {\n      return grid.cols.converters.virtual.toData(vC) === 0 ?\n        loadingResult :\n        nullResult;\n    }\n    return nullResult;\n  };\n\n  const getCachedRow = (vR: number) => {\n    const rowDescriptor = grid.rowModel.get(vR);\n    return rowDescriptor && rowDescriptor.data;\n  };\n\n  async function maybeLoadRows() {\n    if (!loadRows) {\n      return;\n    }\n    const extras: number[] = [];\n    const visibles = [];\n    const numVisibleRows = grid.viewPort.rows;\n\n    const currentTopRow = grid.cellScrollModel.row;\n    const currentBottomRow = currentTopRow + numVisibleRows;\n    for (let row = Math.max(0, currentTopRow - numVisibleRows);\n      row < Math.min(currentBottomRow + 1 + numVisibleRows, grid.rows.converters.data.count());\n      row++) {\n      if (getCachedRow(grid.rows.converters.data.toVirtual(row))) {\n        // already have it cached\n        continue;\n      }\n      if (row >= currentBottomRow) {\n        extras.push(row);\n      } else {\n        visibles.push(row);\n      }\n    }\n\n    if (!extras.length && !visibles.length) {\n      // everything has previously been fetched\n      return;\n    }\n\n    // fetch if any visibles, or if extras > numVisibleRows / 2\n    if (!visibles.length && extras.length < (numVisibleRows / 2)) {\n      return;\n    }\n    const toFetchSet = new Set<number>(visibles);\n    extras.forEach((r) => toFetchSet.add(r));\n    const toFetch = Array.from(toFetchSet);\n    if (!toFetch.length) {\n      return;\n    }\n    loadRows(toFetch);\n  }\n\n  grid.eventLoop.bind('grid-cell-scroll', () => {\n    maybeLoadRows();\n  });\n\n  grid.eventLoop.bind('grid-viewport-change', () => {\n    maybeLoadRows();\n  });\n\n  return {\n    isDirty: dirtyClean.isDirty,\n    setDirty: dirtyClean.setDirty,\n    handleCachedDataChange() {\n      dirtyClean.setDirty();\n      // new data could include clearing rows that are in view\n      maybeLoadRows();\n    },\n    get(dataRow: number, dataCol: number) {\n      return getData(grid.rows.converters.data.toVirtual(dataRow), grid.cols.converters.data.toVirtual(dataCol));\n    },\n    getHeader(virtualRow: number, virtualCol: number) {\n      return getData(virtualRow, virtualCol);\n    },\n    set(rowOrData: number | Array<IGridDataChange<any>>, c?: number, datum?: string | string[]) {\n      let data: Array<IGridDataChange<any>>;\n      if (!Array.isArray(rowOrData)) {\n        if (typeof datum === 'string') {\n          datum = datum.replace('[rR]', '').replace('[cC]', '').split(' ');\n        }\n        data = [{\n          row: rowOrData,\n          col: c as number,\n          value: datum\n\n        }];\n      } else {\n        data = rowOrData;\n      }\n      data.forEach((change) => {\n        const rowDescriptor = grid.rowModel.get(grid.rows.converters.data.toVirtual(change.row));\n        let rowData = rowDescriptor.data;\n        if (!rowData) {\n          rowData = rowDescriptor.data = [];\n        }\n        rowData[grid.cols.converters.data.toVirtual(change.col)] = {\n          value: change.value,\n          formatted: change.formatted != undefined ? change.formatted : change.value,\n        };\n      });\n    }\n  };\n}\n\nexport default create;","import { IRawPositionRange } from '../position-range';\n\n// takes a point and a length as the ranges in array form\nexport function intersect(range1: number[], range2: number[]) {\n    const range2Start = range2[0];\n    const range1Start = range1[0];\n    const range1End = range1Start + range1[1] - 1;\n    const range2End = range2Start + range2[1] - 1;\n    if (range2Start > range1End || range2End < range1Start) {\n        return null;\n    }\n    const resultStart = (range1Start > range2Start ? range1Start : range2Start);\n    const resultEnd = (range1End < range2End ? range1End : range2End);\n    return [\n        resultStart,\n        resultEnd - resultStart + 1\n    ];\n}\n// takes a point and a length as the ranges in array form\nexport function union(range1: number[] | null, range2: number[] | null) {\n    if (!range1) {\n        return range2;\n    }\n    if (!range2) {\n        return range1;\n    }\n    const range2Start = range2[0];\n    const range2End = range2Start + range2[1] - 1;\n    const range1Start = range1[0];\n    const range1End = range1Start + range1[1] - 1;\n    const resultStart = (range1Start < range2Start ? range1Start : range2Start);\n    return [\n        resultStart, (range1End > range2End ? range1End : range2End) - resultStart + 1\n    ];\n}\n\n// takes two row, col points and creates a normal position range\nexport function createFromPoints(r1: number, c1: number, r2: number, c2: number) {\n    const range: IRawPositionRange = {} as any;\n    if (r1 < r2) {\n        range.top = r1;\n        range.height = r2 - r1 + 1;\n    } else {\n        range.top = r2;\n        range.height = r1 - r2 + 1;\n    }\n\n    if (c1 < c2) {\n        range.left = c1;\n        range.width = c2 - c1 + 1;\n    } else {\n        range.left = c2;\n        range.width = c1 - c2 + 1;\n    }\n    return range;\n}\nexport function iterate(this: { getArgs: typeof getArgs }) {\n    const args = this.getArgs(arguments);\n    const range = args.range;\n    const cellFn = args.cellFn;\n    const rowFn = args.rowFn;\n    for (let r = range.top; r < range.top + range.height; r++) {\n        let rowResult;\n        if (rowFn) {\n            rowResult = rowFn(r);\n        }\n        for (let c = range.left; c < range.left + range.width; c++) {\n            if (cellFn) {\n                cellFn(r, c, rowResult);\n            }\n        }\n    }\n}\n\nexport type CellFn<T> = (r: number, c: number, result?: T) => (boolean | void);\nexport type RowFn<T> = (r: number) => T;\nexport function getArgs<T>(args: IArguments) {\n    const range: IRawPositionRange = args[0];\n    let cellFn: CellFn<T> = args[1];\n    let rowFn: RowFn<T> | undefined;\n    if (args.length === 3) {\n        cellFn = args[2];\n        rowFn = args[1];\n    }\n    return {\n        range,\n        cellFn,\n        rowFn\n    };\n}\nexport function equal(r1: IRawPositionRange, r2: IRawPositionRange) {\n    return r1.top === r2.top &&\n        r1.left === r2.left &&\n        r1.width === r2.width &&\n        r1.height === r2.height;\n}","import { Grid } from '../core';\nimport makeDirtyClean, { IDirtyClean } from '../dirty-clean';\nimport addDirtyProps from '../dirty-props';\nimport mixinPositionRange, { IPartialPositionRange, PositionSpace, toStandardSpace } from '../position-range';\n\nexport interface ICellClassDescriptor extends IPartialPositionRange {\n    _cellClassDirtyClean: IDirtyClean;\n    class?: string;\n}\n\nexport interface ICellClasses {\n    add(descriptor: ICellClassDescriptor): void;\n    remove(descriptor: ICellClassDescriptor): void;\n    getAll(): ICellClassDescriptor[];\n    getCachedClasses(vRow: number, vCol: number): string[];\n    create(\n        top?: number,\n        left?: number,\n        className?: string,\n        height?: number,\n        width?: number,\n        space?: PositionSpace\n    ): ICellClassDescriptor;\n    isDirty(): boolean;\n}\n\nexport function create(grid: Grid) {\n    const dirtyClean = makeDirtyClean(grid);\n    const descriptors: ICellClassDescriptor[] = [];\n    let cachedClassMatrix: string[][][] = [];\n\n    const api: ICellClasses = {\n        add(descriptor: ICellClassDescriptor) {\n            descriptors.push(descriptor);\n            addOrRemoveCachedClass(descriptor);\n            if (descriptor._cellClassDirtyClean) {\n                descriptor._cellClassDirtyClean.enable();\n            }\n            dirtyClean.setDirty();\n        },\n        remove(descriptor: ICellClassDescriptor) {\n            const index = descriptors.indexOf(descriptor);\n            if (index !== -1) {\n                descriptors.splice(index, 1);\n                addOrRemoveCachedClass(descriptor, true);\n                if (descriptor._cellClassDirtyClean) {\n                    descriptor._cellClassDirtyClean.disable();\n                }\n                dirtyClean.setDirty();\n            }\n        },\n        getAll(): ICellClassDescriptor[] {\n            return descriptors.slice(0);\n        },\n        getCachedClasses(vRow: number, vCol: number): string[] {\n            return cachedClassMatrix[vRow] && cachedClassMatrix[vRow][vCol] || [];\n        },\n        create(\n            top?: number,\n            left?: number,\n            className?: string,\n            height?: number,\n            width?: number,\n            space?: PositionSpace\n        ): ICellClassDescriptor {\n            const thisDirtyClean = makeDirtyClean(grid);\n            const descriptor: ICellClassDescriptor = mixinPositionRange({\n                _cellClassDirtyClean: thisDirtyClean\n            }, thisDirtyClean, dirtyClean, {\n                    preDirty: classPreDirty,\n                    onDirty: classOnDirty\n                });\n            // mixins\n\n            function classPreDirty() {\n                // check for descriptor definition because this will actually get called during position range mixin before it's defined\n                if (descriptor) {\n                    addOrRemoveCachedClass(descriptor, true);\n                }\n            }\n\n            function classOnDirty() {\n                // check for descriptor definition because this will actually get called during position range mixin before it's defined\n                if (descriptor) {\n                    addOrRemoveCachedClass(descriptor);\n                }\n            }\n\n            addDirtyProps(descriptor, [{\n                name: 'class',\n                preDirty: classPreDirty,\n                onDirty: classOnDirty\n            }], [thisDirtyClean, dirtyClean]);\n\n            // all of these are optional\n            descriptor.space = space || descriptor.space;\n            descriptor.top = top;\n            descriptor.left = left;\n            // default to single cell ranges\n            descriptor.height = height || 1;\n            descriptor.width = width || 1;\n            descriptor.class = className;\n            return descriptor;\n        },\n        isDirty: dirtyClean.isDirty\n    };\n\n    function regnerateCache() {\n        cachedClassMatrix = [];\n        api.getAll().forEach((descriptor) => {\n            addOrRemoveCachedClass(descriptor);\n        });\n    }\n\n    grid.eventLoop.bind('grid-row-change', regnerateCache);\n    grid.eventLoop.bind('grid-col-change', regnerateCache);\n\n    function addOrRemoveCachedClass(descriptor: ICellClassDescriptor, isRemove?: boolean) {\n        const { top, left, height, width, space } = descriptor;\n        const className = descriptor.class;\n        if (top === undefined || height === undefined || left === undefined || width === undefined || className === undefined) {\n            return;\n        }\n        for (let r = top; r < Math.min(top + height, grid.rowModel.length(true)); r++) {\n            for (let c = left; c < Math.min(left + width, grid.colModel.length(true)); c++) {\n                const spaceKey: keyof Grid = toStandardSpace(space);\n                const vRow = grid[spaceKey].row.toVirtual(r);\n                const vCol = grid[spaceKey].col.toVirtual(c);\n                let cols = cachedClassMatrix[vRow];\n                if (!cols) {\n                    cols = cachedClassMatrix[vRow] = [];\n                }\n                const cellClasses = cols[vCol];\n                if (!cellClasses) {\n                    if (!isRemove) {\n                        cols[vCol] = [className];\n                    }\n                    continue;\n                }\n\n                if (!isRemove) {\n                    if (cellClasses.indexOf(className) === -1) {\n                        cellClasses.push(className);\n                    }\n                } else {\n                    const index = cellClasses.indexOf(className);\n                    if (index !== -1) {\n                        cellClasses.splice(index, 1);\n                    }\n                }\n            }\n        }\n    }\n\n    return api;\n}\n\nexport default create;","import { Grid } from '../core';\nimport { AnnotatedKeyEventUnion, EventUnion, isAnnotatedKeyEvent } from '../event-loop';\n\nexport interface ICellKeyboardModel {\n    // add methods if needed\n    _annotateEvent(e: EventUnion): void;\n}\n\nexport function create(grid: Grid) {\n\n    const _annotateEventFromDataCoords = (e: AnnotatedKeyEventUnion, dataRow: number, dataCol: number) => {\n        e.realRow = grid.data.row.toView(dataRow);\n        e.realCol = grid.data.col.toView(dataCol);\n        e.virtualRow = grid.data.row.toVirtual(dataRow);\n        e.virtualCol = grid.data.col.toVirtual(dataCol);\n        e.row = dataRow;\n        e.col = dataCol;\n        return e;\n    };\n\n    const _annotateEventInternal = (e: AnnotatedKeyEventUnion) => {\n        const dataRow = grid.navigationModel.focus.row;\n        const dataCol = grid.navigationModel.focus.col;\n        _annotateEventFromDataCoords(e, dataRow, dataCol);\n    };\n\n    const annotateEvent = (e: EventUnion) => {\n        if (isAnnotatedKeyEvent(e)) {\n            _annotateEventInternal(e);\n        }\n    };\n    grid.eventLoop.addInterceptor(annotateEvent);\n\n    const model: ICellKeyboardModel = {\n        _annotateEvent: annotateEvent\n    };\n    return model;\n}\n\nexport default create;\n","import { Grid } from '../core';\nimport customEvent from '../custom-event';\nimport {\n  AnnotatedMouseEventUnion,\n  EventUnion,\n  GridCustomMouseEventTypes,\n  IAnnotatedEvent,\n  IAnnotatedMouseEvent,\n  IGridCustomMouseEvent,\n  IGridDragStartEvent,\n  ILoopEvent,\n  isAnnotatedMouseEvent,\n  isAnnotatedMouseEventOfType,\n} from '../event-loop';\n\nconst PROPS_TO_COPY_FROM_MOUSE_EVENTS: Array<keyof AnnotatedMouseEventUnion | 'layerX' | 'layerY'> = [\n  'clientX',\n  'clientY',\n  'gridX',\n  'gridY',\n  'layerX',\n  'layerY',\n  'row',\n  'col',\n  'realRow',\n  'realCol',\n  'virtualRow',\n  'virtualCol',\n];\n\nexport interface IEventDimensionInfoGetter {\n  view(e: IAnnotatedEvent): number;\n  virtual(e: IAnnotatedEvent): number;\n  data(e: IAnnotatedEvent): number;\n  gridPx(e: IAnnotatedMouseEvent): number;\n  layerPx(e: AnnotatedMouseEventUnion | IGridCustomMouseEvent): number;\n}\n\nexport interface ICellMouseModel {\n  rowInfo: IEventDimensionInfoGetter;\n  colInfo: IEventDimensionInfoGetter;\n  _annotateEvent(e: EventUnion): void;\n  _annotateEventInternal(e: AnnotatedMouseEventUnion): void;\n  _annotateEventFromViewCoords(e: AnnotatedMouseEventUnion, viewRow: number, viewCol: number): EventUnion;\n}\n\nexport function create(grid: Grid) {\n  let scrollInterval: number | undefined;\n  let lastMoveRow: number | undefined;\n  let lastMoveCol: number | undefined;\n  const model: ICellMouseModel = {\n    rowInfo: {\n      view(e: IAnnotatedEvent) {\n        return e.realRow;\n      },\n      virtual(e: IAnnotatedEvent) {\n        return e.virtualRow;\n      },\n      data(e: IAnnotatedEvent) {\n        return e.row;\n      },\n      gridPx(e: IAnnotatedMouseEvent) {\n        return e.gridY;\n      },\n      layerPx(e: AnnotatedMouseEventUnion | IGridCustomMouseEvent) {\n        return (e as any).layerY;\n      },\n    },\n    colInfo: {\n      view(e: IAnnotatedEvent) {\n        return e.realCol;\n      },\n      virtual(e: IAnnotatedEvent) {\n        return e.virtualCol;\n      },\n      data(e: IAnnotatedEvent) {\n        return e.col;\n      },\n      gridPx(e: IAnnotatedMouseEvent) {\n        return e.gridX;\n      },\n      layerPx(e: AnnotatedMouseEventUnion | IGridCustomMouseEvent) {\n        return (e as any).layerX;\n      },\n    },\n    _annotateEvent(e: EventUnion) {\n      if (isAnnotatedMouseEvent(e)) {\n        model._annotateEventInternal(e);\n      }\n    },\n    _annotateEventFromViewCoords(e: AnnotatedMouseEventUnion, viewRow: number, viewCol: number) {\n      e.realRow = viewRow;\n      e.realCol = viewCol;\n      e.virtualRow = grid.view.row.toVirtual(e.realRow);\n      e.virtualCol = grid.view.col.toVirtual(e.realCol);\n      e.row = grid.virtual.row.toData(e.virtualRow);\n      e.col = grid.virtual.col.toData(e.virtualCol);\n      return e;\n    },\n    _annotateEventInternal(e: AnnotatedMouseEventUnion) {\n      const y = grid.viewPort.toGridY(e.clientY);\n      const x = grid.viewPort.toGridX(e.clientX);\n      const viewRow = grid.rows.viewPort.toViewFromPx(y);\n      const viewCol = grid.cols.viewPort.toViewFromPx(x);\n      model._annotateEventFromViewCoords(e, viewRow, viewCol);\n      e.gridX = x;\n      e.gridY = y;\n    },\n  };\n\n  grid.eventLoop.addInterceptor((e: EventUnion) => {\n    model._annotateEvent(e);\n    if (isAnnotatedMouseEventOfType(e, 'mousedown')) {\n      if (e.currentTarget === grid.container) {\n        setupDragEventForMouseDown(e);\n      }\n    } else if (isAnnotatedMouseEventOfType(e, 'mousemove')) {\n      if (e.row !== lastMoveRow || e.col !== lastMoveCol) {\n        createAndFireCustomMouseEvent('grid-cell-mouse-move', e);\n        lastMoveRow = e.row;\n        lastMoveCol = e.col;\n      }\n    }\n  });\n\n  function calculateColScrollDiff(e: AnnotatedMouseEventUnion | IGridCustomMouseEvent) {\n    let colDiff = 0;\n    if (e.clientX > ((grid.container && grid.container.getBoundingClientRect().right) || window.innerWidth)) {\n      colDiff = 1;\n    } else if (grid.viewPort.toGridX(e.clientX) < grid.virtualPixelCellModel.fixedWidth()) {\n      colDiff = -1;\n    }\n    return colDiff;\n  }\n\n  function calculateRowScrollDiff(e: AnnotatedMouseEventUnion | IGridCustomMouseEvent) {\n    let rowDiff = 0;\n    if (e.clientY > ((grid.container && grid.container.getBoundingClientRect().bottom) || window.innerHeight)) {\n      rowDiff = 1;\n    } else if (grid.viewPort.toGridY(e.clientY) < grid.virtualPixelCellModel.fixedHeight()) {\n      rowDiff = -1;\n    }\n    return rowDiff;\n  }\n\n  function setupDragEventForMouseDown(downEvent: AnnotatedMouseEventUnion) {\n    let lastDragRow = downEvent.row;\n    let lastDragCol = downEvent.col;\n    let dragStarted = false;\n    let unbindAutoScrollDrag: (() => void) | undefined;\n    const lastX = downEvent.clientX;\n    const lastY = downEvent.clientY;\n    const unbindMove = grid.eventLoop.bind(window, 'mousemove', (mousemoveEvent) => {\n      if (dragStarted && !mousemoveEvent.which) {\n        // got a move event without mouse down which means we somehow missed the mouseup\n        handleMouseUp(mousemoveEvent);\n        return;\n      }\n\n      if (!dragStarted) {\n        if (lastX === mousemoveEvent.clientX && lastY === mousemoveEvent.clientY) {\n          console.warn(\n            'Got a mouse move event with ',\n            mousemoveEvent.clientX,\n            ',',\n            mousemoveEvent.clientY,\n            ' when the last position was ',\n            lastX,\n            ',',\n            lastY,\n          );\n        }\n        createAndFireCustomMouseEvent('grid-drag-start', downEvent, (dragStart: IGridDragStartEvent) => {\n          let onlyFixedRows = !calculateRowScrollDiff(mousemoveEvent);\n          let onlyFixedCols = !calculateColScrollDiff(mousemoveEvent);\n          dragStart.enableAutoScroll = () => {\n            if (unbindAutoScrollDrag) {\n              unbindAutoScrollDrag();\n            }\n            unbindAutoScrollDrag = grid.eventLoop.bind('grid-drag', (gridDragEvent) => {\n              // if it gets here then we will try to auto scroll\n              const newRowDiff = calculateRowScrollDiff(gridDragEvent);\n              onlyFixedRows = !newRowDiff;\n              const rowDiff = onlyFixedRows ? 0 : newRowDiff;\n\n              const newColDiff = calculateColScrollDiff;\n              onlyFixedCols = !newColDiff;\n              const colDiff = onlyFixedCols ? 0 : newColDiff(gridDragEvent);\n\n              if (scrollInterval != undefined) {\n                clearInterval(scrollInterval);\n              }\n              if (rowDiff || colDiff) {\n                scrollInterval = grid.interval(() => {\n                  grid.cellScrollModel.scrollTo(grid.cellScrollModel.row + rowDiff, grid.cellScrollModel.col + colDiff);\n                }, 100);\n              }\n            });\n          };\n        });\n        dragStarted = true;\n      }\n\n      createAndFireCustomMouseEvent('grid-drag', mousemoveEvent);\n\n      if (mousemoveEvent.row !== lastDragRow || mousemoveEvent.col !== lastDragCol) {\n        createAndFireCustomMouseEvent('grid-cell-drag', mousemoveEvent);\n\n        lastDragRow = mousemoveEvent.row;\n        lastDragCol = mousemoveEvent.col;\n      }\n    });\n\n    const unbindUp = grid.eventLoop.bind(window, 'mouseup', handleMouseUp);\n\n    function handleMouseUp(e: AnnotatedMouseEventUnion) {\n      if (scrollInterval != undefined) {\n        clearInterval(scrollInterval);\n      }\n      unbindMove();\n      unbindUp();\n      if (unbindAutoScrollDrag) {\n        unbindAutoScrollDrag();\n      }\n\n      const dragEnd = createCustomEventFromMouseEvent('grid-drag-end', e);\n\n      // row, col, x, and y should inherit\n      grid.eventLoop.fire(dragEnd);\n    }\n  }\n\n  function createCustomEventFromMouseEvent(type: GridCustomMouseEventTypes, e: AnnotatedMouseEventUnion) {\n    const event = customEvent(type, true, true) as IGridCustomMouseEvent;\n    PROPS_TO_COPY_FROM_MOUSE_EVENTS.forEach((prop: keyof AnnotatedMouseEventUnion) => {\n      (event as any)[prop] = e[prop];\n    });\n    event.originalEvent = e;\n    return event;\n  }\n\n  function createAndFireCustomMouseEvent(\n    type: GridCustomMouseEventTypes,\n    e: AnnotatedMouseEventUnion,\n    annotateEvent?: (e: ILoopEvent) => any,\n  ) {\n    let drag = createCustomEventFromMouseEvent(type, e);\n    if (annotateEvent) {\n      drag = annotateEvent(drag) || drag;\n    }\n    if (e.target) {\n      e.target.dispatchEvent(drag);\n    } else {\n      grid.eventLoop.fire(drag);\n    }\n    return drag;\n  }\n\n  return model;\n}\n\nexport default create;\n\n","export default function (name: string, bubbles: boolean, cancelable: boolean = false, detail?: any) {\n    const event = document.createEvent('CustomEvent');  // MUST be 'CustomEvent'\n    event.initCustomEvent(name, bubbles, cancelable, detail);\n    return event;\n}","import { Grid, IGridDimension } from '../core';\nimport makeDirtyClean from '../dirty-clean';\nimport * as util from '../util';\n\nexport interface ICellScrollDimension {\n    position: number;\n    scrollTo(position: number, dontFire?: boolean): boolean;\n    getPixelScroll(): number;\n    getScrollIntoViewCell(dataCell: number): number;\n}\n\nexport interface ICellScrollModel {\n    col: number;\n    row: number;\n    rowInfo: ICellScrollDimension;\n    colInfo: ICellScrollDimension;\n    isDirty(): void;\n    scrollTo(r: number, c: number, dontFire?: boolean, dontNotifyPixelModel?: boolean): void;\n    scrollIntoView(dataRow: number, dataCol: number): void;\n}\n\nexport function create(grid: Grid) {\n    const dirtyClean = makeDirtyClean(grid);\n\n    function makeDimension(gridDimension: IGridDimension) {\n        function convertVirtualToScroll(virtualCoord: number) {\n            return virtualCoord - gridDimension.rowColModel.numFixed();\n        }\n\n        function getScrollToRowOrCol(virtualCoord: number) {\n            const currentScroll = cellScrollDimension.position;\n            let scrollTo = currentScroll;\n            if (gridDimension.viewPort.isInView(virtualCoord)) {\n                return scrollTo;\n            }\n\n            const targetScroll = convertVirtualToScroll(virtualCoord);\n            if (targetScroll < currentScroll) {\n                scrollTo = targetScroll;\n            } else if (targetScroll > currentScroll) {\n                let lengthToCell = gridDimension.virtualPixelCell.sizeOf(0, virtualCoord);\n                const numFixed = gridDimension.rowColModel.numFixed();\n                scrollTo = 0;\n                for (let i = numFixed; i < virtualCoord && lengthToCell > gridDimension.viewPort.size; i++) {\n                    lengthToCell -= gridDimension.virtualPixelCell.sizeOf(i);\n                    scrollTo = i - (numFixed - 1);\n                }\n            }\n\n            return scrollTo;\n        }\n        const cellScrollDimension: ICellScrollDimension = {\n            position: 0,\n            scrollTo(position: number, dontFire?: boolean): boolean {\n                const maxPosition = (gridDimension.rowColModel.length() || 1) - 1;\n                const lastPosition = cellScrollDimension.position;\n                cellScrollDimension.position = util.clamp(position, 0, maxPosition);\n                if (lastPosition !== cellScrollDimension.position) {\n                    dirtyClean.setDirty();\n\n                    if (!dontFire) {\n                        notifyListeners();\n                    }\n                    return true;\n                }\n                return false;\n            },\n            getPixelScroll() {\n                return gridDimension.virtualPixelCell.sizeOf(\n                    gridDimension.rowColModel.numFixed(),\n                    cellScrollDimension.position + gridDimension.rowColModel.numFixed() - 1\n                );\n            },\n            getScrollIntoViewCell(dataCell: number) {\n                const virtualCell = gridDimension.converters.virtual.clamp(gridDimension.converters.data.toVirtual(dataCell));\n                return getScrollToRowOrCol(virtualCell);\n            }\n        };\n        return cellScrollDimension;\n    }\n\n    const model: ICellScrollModel = {\n        get col() {\n            return model.colInfo.position;\n        },\n        get row() {\n            return model.rowInfo.position;\n        },\n        isDirty: dirtyClean.isDirty,\n        rowInfo: makeDimension(grid.rows),\n        colInfo: makeDimension(grid.cols),\n        scrollTo(r: number, c: number, dontFire?: boolean, dontNotifyPixelModel?: boolean) {\n            if (isNaN(r) || isNaN(c)) {\n                return;\n            }\n\n            const rowScrollChange = model.rowInfo.scrollTo(r, true);\n            const colScrollChange = model.colInfo.scrollTo(c, true);\n            if (rowScrollChange || colScrollChange) {\n                if (!dontFire) {\n                    notifyListeners(dontNotifyPixelModel);\n                }\n            }\n        },\n        scrollIntoView(dataRow: number, dataCol: number) {\n            const newRow = model.rowInfo.getScrollIntoViewCell(dataRow);\n            const newCol = model.colInfo.getScrollIntoViewCell(dataCol);\n            model.scrollTo(newRow, newCol);\n        }\n    };\n\n    function notifyListeners(dontNotifyPixelModel?: boolean) {\n        grid.eventLoop.fire('grid-cell-scroll');\n\n        if (!dontNotifyPixelModel) {\n            grid.pixelScrollModel.scrollTo(model.rowInfo.getPixelScroll(), model.colInfo.getPixelScroll(), true);\n        }\n    }\n\n    grid.eventLoop.bind('grid-row-change', (e) => {\n        switch (e.action) {\n            case 'remove':\n                model.scrollTo(0, model.col);\n                break;\n        }\n    });\n\n    return model;\n}\n\nexport default create;","\nimport { AbstractRowColModel, IColDescriptor } from '../abstract-row-col-model';\nimport { Grid } from '../core';\n\nexport class ColModel extends AbstractRowColModel {\n    width = (idx: number) => {\n        return this.sizeOf(idx);\n    }\n    col = (idx: number): IColDescriptor => {\n        return this.get(idx, true);\n    }\n}\n\nexport function create(grid: Grid) {\n    return new ColModel(grid, 'col', 'width', 100);\n}\n\nexport default create;","import { Grid } from '../core';\nimport ctrlOrCmd from '../ctrl-or-cmd';\nimport { IDecorator } from '../decorators';\nimport { AnnotatedMouseEventUnion, IAnnotatedEvent, IGridDragStartEvent, isAnnotatedMouseEventOfType } from '../event-loop';\nimport * as util from '../util';\n\nconst elementClass = require('element-class');\n\nexport interface ITargetCol extends IDecorator {\n    _renderedElem?: HTMLElement;\n    moveAfter?: boolean;\n}\n\nexport interface IDragRect extends IDecorator {\n    colOffset: number;\n}\n\nexport interface IColReorder {\n    _targetCol?: ITargetCol;\n    _dragRects: IDragRect[];\n    _onMousedown(e: AnnotatedMouseEventUnion): void;\n    _onDragStart(e: IGridDragStartEvent): void;\n    _unbindKeyDown?(): void;\n    _unbindDrag?(): void;\n    _unbindDragEnd?(): void;\n}\n\nexport function create(grid: Grid) {\n    let wasSelectedAtMousedown: boolean | undefined;\n    const model: IColReorder = {\n        _dragRects: [],\n        _onMousedown(e: AnnotatedMouseEventUnion) {\n            if (!isTargetingColHeader(e)) {\n                return;\n            }\n\n            const colDescriptor = grid.data.col.get(e.col);\n            wasSelectedAtMousedown = colDescriptor && !!colDescriptor.selected;\n            if (wasSelectedAtMousedown && !ctrlOrCmd(e)) {\n                grid.eventLoop.stopBubbling(e);\n            }\n        },\n        _onDragStart(e: IGridDragStartEvent) {\n\n            if (!isTargetingColHeader(e) || e.realCol < grid.colModel.numFixed() || !wasSelectedAtMousedown) {\n                return;\n            }\n\n            const colDescriptor = grid.view.col.get(e.realCol);\n            if (!colDescriptor || colDescriptor.selectable === false) {\n                return;\n            }\n            if (e.enableAutoScroll) {\n                e.enableAutoScroll();\n            }\n            // we want to be the only draggers\n            grid.eventLoop.stopBubbling(e);\n\n            const startCol = e.virtualCol;\n\n            // create the target line\n            model._targetCol = grid.decorators.create(0, undefined, Infinity, 1, 'cell', 'real');\n            model._targetCol.postRender = (div) => {\n                div.setAttribute('class', 'grid-reorder-target');\n                if (!model._targetCol) {\n                    console.error('somehow targetCol was set back to undefined before post render');\n                    return;\n                }\n                model._targetCol._renderedElem = div;\n            };\n            grid.decorators.add(model._targetCol);\n\n            // create a decorator for each selected col\n            const selected = grid.colModel.getSelected();\n            model._dragRects = selected.map((dataCol) => {\n                const viewCol = grid.data.col.toView(dataCol);\n                const dragRect = grid.decorators.create(0, undefined, Infinity, undefined, 'px', 'real') as IDragRect;\n                dragRect.fixed = true;\n                dragRect.colOffset = e.gridX - grid.viewPort.getColLeft(viewCol);\n                dragRect.postRender = (div) => {\n                    div.setAttribute('class', 'grid-drag-rect');\n                };\n                dragRect.width = grid.viewPort.getColWidth(viewCol);\n                return dragRect;\n            });\n\n            grid.decorators.add(model._dragRects);\n\n            model._unbindKeyDown = grid.escapeStack.add(removeDecoratorsAndUnbind);\n\n            model._unbindDrag = grid.eventLoop.bind('grid-drag', (gridDragEvent) => {\n                model._dragRects.forEach((dragRect) => {\n                    dragRect.left = util.clamp(\n                        gridDragEvent.gridX - dragRect.colOffset,\n                        grid.viewPort.getColLeft(grid.colModel.numFixed()),\n                        Infinity\n                    );\n                });\n                if (!model._targetCol) {\n                    console.error('somehow targetCol was set back to undefined before drag');\n                    return;\n                }\n                model._targetCol.left = util.clamp(gridDragEvent.realCol, grid.colModel.numFixed(), Infinity);\n                model._targetCol.moveAfter = gridDragEvent.realCol > startCol;\n                if (model._targetCol.moveAfter) {\n                    elementClass(model._targetCol._renderedElem).add('right');\n                } else {\n                    elementClass(model._targetCol._renderedElem).remove('right');\n                }\n            });\n\n            model._unbindDragEnd = grid.eventLoop.bind('grid-drag-end', () => {\n                if (!model._targetCol) {\n                    console.error('somehow targetCol was set to undefined before drag end');\n                    return;\n                }\n                const targetDataCol = model._targetCol.left;\n\n                if (targetDataCol !== undefined) {\n                    grid.colModel.move(selected.map((dataCol) => {\n                        return grid.data.col.toVirtual(dataCol);\n                    }), grid.viewPort.toVirtualCol(targetDataCol), model._targetCol.moveAfter);\n                }\n                removeDecoratorsAndUnbind();\n            });\n\n            function removeDecoratorsAndUnbind() {\n                if (model._targetCol) {\n                    const removedDecs = [...model._dragRects, model._targetCol];\n                    grid.decorators.remove(removedDecs);\n                }\n                if (model._unbindDrag) {\n                    model._unbindDrag();\n                }\n                if (model._unbindDragEnd) {\n                    model._unbindDragEnd();\n                }\n                if (model._unbindKeyDown) {\n                    model._unbindKeyDown();\n                }\n                return true; // for the escape stack\n            }\n        }\n    };\n\n    function isTargetingColHeader(e: IAnnotatedEvent) {\n        return e && e.row < 0;\n    }\n\n    grid.eventLoop.bind('grid-drag-start', model._onDragStart);\n    grid.eventLoop.addInterceptor((e) => {\n        if (isAnnotatedMouseEventOfType(e, 'mousedown')) {\n            model._onMousedown(e);\n        }\n    });\n\n    return model;\n}\n\nexport default create;","export default function (e: { ctrlKey: boolean; metaKey: boolean }) {\n  return (\n    (window.navigator.userAgent.match(/win/i) ? e.ctrlKey : e.metaKey) || false\n  );\n}\n\n","module.exports = function(opts) {\n  return new ElementClass(opts)\n}\n\nfunction ElementClass(opts) {\n  if (!(this instanceof ElementClass)) return new ElementClass(opts)\n  var self = this\n  if (!opts) opts = {}\n\n  // similar doing instanceof HTMLElement but works in IE8\n  if (opts.nodeType) opts = {el: opts}\n\n  this.opts = opts\n  this.el = opts.el || document.body\n  if (typeof this.el !== 'object') this.el = document.querySelector(this.el)\n}\n\nElementClass.prototype.add = function(className) {\n  var el = this.el\n  if (!el) return\n  if (el.className === \"\") return el.className = className\n  var classes = el.className.split(' ')\n  if (classes.indexOf(className) > -1) return classes\n  classes.push(className)\n  el.className = classes.join(' ')\n  return classes\n}\n\nElementClass.prototype.remove = function(className) {\n  var el = this.el\n  if (!el) return\n  if (el.className === \"\") return\n  var classes = el.className.split(' ')\n  var idx = classes.indexOf(className)\n  if (idx > -1) classes.splice(idx, 1)\n  el.className = classes.join(' ')\n  return classes\n}\n\nElementClass.prototype.has = function(className) {\n  var el = this.el\n  if (!el) return\n  var classes = el.className.split(' ')\n  return classes.indexOf(className) > -1\n}\n","import { Grid } from '../core';\nimport { IDecorator } from '../decorators';\nimport { AnnotatedMouseEventUnion, IGridDragStartEvent } from '../event-loop';\nimport addHeaderDecorators, { IHeaderDecorator } from '../header-decorators';\n\nexport interface IResizeHeader extends IHeaderDecorator {\n    _dragLine: IDecorator;\n    _onMousedown(e: AnnotatedMouseEventUnion): void;\n    _onDragStart(e: IGridDragStartEvent): void;\n    _unbindDrag?(): void;\n    _unbindKeyDown?(): void;\n    _unbindDragEnd?(): void;\n}\n\nexport interface IColResize {\n    annotateDecorator(d: IResizeHeader): void;\n}\n\nexport function create(grid: Grid) {\n\n    const api: IColResize = {\n        annotateDecorator\n    };\n\n    function annotateDecorator(headerDecorator: IResizeHeader) {\n        const col = headerDecorator.left;\n        headerDecorator._dragLine = grid.decorators.create(0, undefined, Infinity, 1, 'px', 'real');\n        headerDecorator._dragLine.fixed = true;\n\n        headerDecorator._dragLine.postRender = (div) => {\n            div.setAttribute('class', 'grid-drag-line');\n        };\n\n        headerDecorator._onMousedown = (e) => {\n            // prevent mousedowns from getting to selection if they hit the dragline\n            grid.eventLoop.stopBubbling(e);\n        };\n\n        headerDecorator._onDragStart = (e) => {\n\n            grid.eventLoop.stopBubbling(e);\n\n            grid.decorators.add(headerDecorator._dragLine);\n\n            headerDecorator._unbindDrag = grid.eventLoop.bind('grid-drag', (gridDragEvent) => {\n                const minX = headerDecorator.getDecoratorLeft() + 22;\n                headerDecorator._dragLine.left = Math.max(gridDragEvent.gridX, minX);\n            });\n\n            headerDecorator._unbindKeyDown = grid.escapeStack.add(removeDecoratorsAndUnbind);\n\n            headerDecorator._unbindDragEnd = grid.eventLoop.bind('grid-drag-end', () => {\n                const dragLeft = headerDecorator._dragLine.left;\n                if (dragLeft !== undefined && col !== undefined) {\n                    const newWidth = dragLeft - headerDecorator.getDecoratorLeft();\n                    grid.view.col.get(col).width = newWidth;\n                    grid.colModel.getSelected().forEach((dataIdx) => {\n                        grid.data.col.get(dataIdx).width = newWidth;\n                    });\n                }\n                removeDecoratorsAndUnbind();\n            });\n\n            function removeDecoratorsAndUnbind() {\n                grid.decorators.remove(headerDecorator._dragLine);\n                if (headerDecorator._unbindDrag) {\n                    headerDecorator._unbindDrag();\n                }\n                if (headerDecorator._unbindDragEnd) {\n                    headerDecorator._unbindDragEnd();\n                }\n                if (headerDecorator._unbindKeyDown) {\n                    headerDecorator._unbindKeyDown();\n                }\n                return true; // for the escape stack\n            }\n        };\n\n        headerDecorator.postRender = (div) => {\n            div.style.transform = 'translateX(50%)';\n            div.style.webkitTransform = 'translateX(50%)';\n\n            div.style.removeProperty('left');\n            div.setAttribute('class', 'col-resize');\n            div.setAttribute('dts', 'grid_header_resize');\n\n            grid.eventLoop.bind(div, 'grid-drag-start', headerDecorator._onDragStart);\n            grid.eventLoop.bind(div, 'mousedown', headerDecorator._onMousedown);\n        };\n    }\n\n    addHeaderDecorators(grid, api);\n\n    return api;\n}\n\nexport default create;\n","import { Grid } from '../core';\nimport { IGridDataChange, IGridDataResult } from '../data-model';\nimport debounce from '../debounce';\nimport { RawPositionRange } from '../position-range';\nimport * as tsv from '../tsv';\n\nconst innerText = require('inner-text-shim');\n\nexport interface ICopyPaste {\n  _maybeSelectText(): void;\n}\n\nexport function create(grid: Grid): ICopyPaste {\n  function getCopyPasteRange(): RawPositionRange {\n    let selectionRange = grid.navigationModel.selection;\n    // valid selection range cannot go to -1\n    if (selectionRange.top === -1) {\n      selectionRange = {\n        top: grid.navigationModel.focus.row,\n        left: grid.navigationModel.focus.col,\n        width: 1,\n        height: 1,\n      };\n    }\n    return selectionRange;\n  }\n\n  grid.eventLoop.bind('copy', (e) => {\n    if (!grid.focused) {\n      if (e.target === grid.textarea) {\n        e.preventDefault();\n      }\n      return;\n    }\n    // prepare for copy\n    const copyTable = document.createElement('table');\n    const tableBody = document.createElement('tbody');\n    copyTable.appendChild(tableBody);\n    const tsvData: string[][] = [];\n    const selectionRange = getCopyPasteRange();\n    let gotNull = false;\n    grid.data.iterate(\n      selectionRange,\n      () => {\n        const row = document.createElement('tr');\n        tableBody.appendChild(row);\n        const array: string[] = [];\n        tsvData.push(array);\n        return {\n          row,\n          array,\n        };\n      },\n      (r: number, c: number, rowResult: { row: HTMLTableRowElement; array: string[] }) => {\n        const data = grid.dataModel.get(r, c, true);\n\n        // intentional == checks null or undefined\n        if (data == null) {\n          return (gotNull = true); // this breaks the col loop\n        }\n        const td = document.createElement('td');\n        if (data.value) {\n          td.setAttribute('grid-data', JSON.stringify(data.value));\n        }\n        td.textContent = data.formatted || ' ';\n        td.innerHTML = td.innerHTML.replace(/\\n/g, '<br>') || ' ';\n        rowResult.row.appendChild(td);\n        rowResult.array.push(data.formatted);\n        return undefined;\n      },\n    );\n    if (!gotNull) {\n      e.clipboardData?.setData('text/plain', tsv.stringify(tsvData));\n      e.clipboardData?.setData('text/html', copyTable.outerHTML);\n      e.preventDefault();\n      setTimeout(() => {\n        grid.eventLoop.fire('grid-copy');\n      }, 1);\n    }\n  });\n\n  function makePasteDataChange(r: number, c: number, data: IGridDataResult<any> | string): IGridDataChange<any> {\n    let value;\n    let formatted;\n    if (typeof data === 'string') {\n      formatted = data;\n    } else {\n      value = data.value;\n      formatted = data.formatted;\n    }\n    return {\n      row: r,\n      col: c,\n      value,\n      formatted,\n      paste: true,\n    };\n  }\n\n  grid.eventLoop.bind('paste', (e) => {\n    if (!grid.focused) {\n      return;\n    }\n    const selectionRange = getCopyPasteRange();\n    if (!e.clipboardData || !e.clipboardData.getData) {\n      console.warn('no clipboard data on paste event');\n      return;\n    }\n    const tsvPasteData = tsv.parse(e.clipboardData.getData('text/plain'));\n    let pasteHtml = e.clipboardData.getData('text/html');\n    e.preventDefault();\n\n    setTimeout(() => {\n      const tempDiv = document.createElement('div');\n\n      // this nonsense is required so .innerText converts <br> to \\n\n      tempDiv.style.opacity = '0';\n      tempDiv.style.pointerEvents = 'none';\n      tempDiv.style.position = 'absolute';\n      document.body.appendChild(tempDiv);\n      //////\n\n      tempDiv.innerHTML = pasteHtml;\n      const table = tempDiv.querySelector('table');\n      let pasteData: Array<Array<string | IGridDataResult<any>>> = tsvPasteData;\n      if (table) {\n        let tablePasteData: Array<Array<IGridDataResult<any>>>;\n        table.style.whiteSpace = 'pre';\n        tablePasteData = [];\n        const trs = tempDiv.querySelectorAll('tr');\n        [].forEach.call(trs, (tr: typeof trs[0]) => {\n          const row: Array<IGridDataResult<any>> = [];\n          tablePasteData.push(row);\n          const tds = tr.querySelectorAll('td');\n          [].forEach.call(tds, (td: typeof tds[0]) => {\n            const text = innerText(td);\n            const dataResult: IGridDataResult<any> = {\n              formatted: text && text.trim(),\n              value: undefined,\n            };\n            const gridData = td.getAttribute('grid-data');\n            if (gridData) {\n              try {\n                dataResult.value = JSON.parse(gridData);\n              } catch (error) {\n                console.warn(\"somehow couldn't parse grid data\");\n              }\n            }\n            row.push(dataResult);\n          });\n        });\n        pasteData = tablePasteData;\n      }\n\n      document.body.removeChild(tempDiv);\n      const dataChanges: Array<IGridDataChange<any>> = [];\n      let singlePasteValue: string | IGridDataResult<any> | undefined;\n      if (pasteData.length === 1 && pasteData[0].length === 1) {\n        singlePasteValue = pasteData[0][0];\n      }\n\n      if (singlePasteValue) {\n        const singlePasteString = singlePasteValue;\n        // this will do nothing if no other selections as it will be an empty array\n        let ranges = [selectionRange];\n        ranges = ranges.concat(grid.navigationModel.otherSelections);\n        ranges.forEach((range) => {\n          grid.data.iterate(range, (r, c) => {\n            dataChanges.push(makePasteDataChange(r, c, singlePasteString));\n          });\n        });\n      } else {\n        const top = selectionRange.top;\n        const left = selectionRange.left;\n\n        pasteData.forEach((row, r) => {\n          const dataRow = r + top;\n          if (dataRow > grid.data.row.count() - 1) {\n            return;\n          }\n          row.forEach((pasteValue, c) => {\n            const dataCol = c + left;\n            // intention == to match null and undefined\n            if (pasteValue == undefined || dataCol > grid.data.col.count() - 1) {\n              return;\n            }\n            dataChanges.push(makePasteDataChange(dataRow, dataCol, pasteValue));\n          });\n        });\n        const newSelection = {\n          top,\n          left,\n          height: pasteData.length,\n          width: pasteData[0].length,\n        };\n\n        grid.navigationModel.clearSelection();\n        grid.navigationModel.setSelection(newSelection);\n      }\n\n      grid.dataModel.set(dataChanges);\n    }, 1);\n  });\n\n  const maybeSelectText = debounce(function maybeSelectTextInner() {\n    if (!(grid.editModel && grid.editModel.editing) && grid.focused) {\n      grid.textarea.value =\n        grid.dataModel.get(grid.navigationModel.focus.row, grid.navigationModel.focus.col).formatted || '.';\n      grid.textarea.select();\n    }\n  }, 1);\n\n  grid.eventLoop.bind('keyup', (_e) => {\n    maybeSelectText();\n  });\n  grid.eventLoop.bind('grid-focus', (_e) => {\n    maybeSelectText();\n  });\n  grid.eventLoop.bind('mousedown', (e) => {\n    if (e.target !== grid.textarea) {\n      return;\n    }\n    maybeSelectText();\n  });\n  return {\n    _maybeSelectText: maybeSelectText,\n  };\n}\n\nexport default create;\n","import { Grid } from '../core';\nimport makeDirtyClean, { IDirtyClean } from '../dirty-clean';\nimport mixinPositionRange, { IPartialPositionRange, PositionSpace, PositionUnit } from '../position-range';\nimport * as util from '../util';\n\nexport interface IDecorator extends IPartialPositionRange {\n    _decoratorDirtyClean?: IDirtyClean;\n    fixed?: boolean;\n    boundingBox?: HTMLElement;\n    render(): HTMLElement;\n    postRender?(elem: HTMLElement): void;\n}\n\nexport interface IDecoratorModel {\n    add(decorators: IDecorator | IDecorator[]): void;\n    remove(decorators: IDecorator | IDecorator[]): void;\n    getAlive(): IDecorator[];\n    popAllDead(): IDecorator[];\n    isDirty(): boolean;\n    create(t?: number, l?: number, h?: number, w?: number, u?: PositionUnit, s?: PositionSpace): IDecorator;\n}\n\nexport function create(grid: Grid) {\n\n    const dirtyClean = makeDirtyClean(grid);\n\n    const aliveDecorators: IDecorator[] = [];\n    let deadDecorators: IDecorator[] = [];\n\n    const decoratorsInstance: IDecoratorModel = {\n        add(_decorators: IDecorator | IDecorator[]) {\n            const decorators = util.toArray(_decorators);\n            decorators.forEach((decorator) => {\n                aliveDecorators.push(decorator);\n                if (decorator._decoratorDirtyClean) {\n                    decorator._decoratorDirtyClean.enable();\n                }\n            });\n            dirtyClean.setDirty();\n        },\n        remove(_decorators: IDecorator | IDecorator[]) {\n            const decorators = util.toArray(_decorators);\n            decorators.forEach((decorator) => {\n                const index = aliveDecorators.indexOf(decorator);\n                if (index !== -1) {\n                    aliveDecorators.splice(index, 1);\n                    deadDecorators.push(decorator);\n                    if (decorator._decoratorDirtyClean) {\n                        decorator._decoratorDirtyClean.disable();\n                    }\n                    dirtyClean.setDirty();\n                }\n            });\n        },\n        getAlive() {\n            return aliveDecorators.slice(0);\n        },\n        popAllDead() {\n            const oldDead = deadDecorators;\n            deadDecorators = [];\n            return oldDead;\n        },\n        isDirty: dirtyClean.isDirty,\n        create(t?: number, l?: number, h?: number, w?: number, u?: PositionUnit, s?: PositionSpace) {\n            const thisDirtyClean = makeDirtyClean(grid);\n\n            // mixin the position range functionality\n            const decoratorBase = {\n                _decoratorDirtyClean: thisDirtyClean,\n                // they can override but we should have an empty default to prevent npes\n                render() {\n                    const div = document.createElement('div');\n                    div.style.position = 'absolute';\n                    div.style.top = '0px';\n                    div.style.left = '0px';\n                    div.style.bottom = '0px';\n                    div.style.right = '0px';\n                    if (decorator.postRender) {\n                        decorator.postRender(div);\n                    }\n                    return div;\n                }\n            };\n            const decorator: IDecorator = mixinPositionRange(\n                decoratorBase,\n                thisDirtyClean,\n                dirtyClean\n            );\n            decorator.top = t;\n            decorator.left = l;\n            decorator.height = h;\n            decorator.width = w;\n            decorator.units = u || decorator.units;\n            decorator.space = s || decorator.space;\n\n            return decorator;\n\n        }\n\n    };\n\n    return decoratorsInstance;\n}\n\nexport default create;","import { Grid } from '../core';\nimport { IGridDataChange, IGridDataChangeBody } from '../data-model';\nimport { IDecorator } from '../decorators';\nimport { AnnotatedMouseOrKeyEventUnion, EventUnion, isAnnotatedMouseOrKeyEvent } from '../event-loop';\nimport { RawPositionRange } from '../position-range';\n\nconst key = require('key');\nconst clickOff = require('click-off');\n\nexport interface IEditDecorator extends IDecorator {\n  typedText?(): string;\n}\n\nexport interface IDefaultEditDecorator extends IEditDecorator {\n  renderedElem?: HTMLTextAreaElement;\n}\n\nexport type ClosePromise = Promise<void>;\nexport type SavePromise = Promise<IGridDataChangeBody<any> | undefined>;\n\nexport interface IEditor {\n  closePromise?: ClosePromise;\n  decorator?: false | IEditDecorator;\n  save?(): SavePromise;\n  isInMe?(e: MouseEvent): boolean;\n\n  // added by the grid\n  removeEscapeStackHandler?(): void;\n  removeClickOffHandler?(): void;\n}\n\nexport interface IEditOptions {\n  headers: boolean;\n  editTriggers: EditTrigger[];\n  saveTriggers: SaveTrigger[];\n  cancelTriggers: CancelTrigger[];\n  action?(): ClosePromise | undefined;\n  getEditor(r: number, originalEvent: AnnotatedMouseOrKeyEventUnion): IEditor;\n}\n\nexport enum Trigger {\n  Click = 'click',\n  Space = 'space',\n  Enter = 'enter',\n  Dblclick = 'dblclick',\n  Typing = 'typing',\n  Tab = 'tab',\n  Clickoff = 'clickoff',\n  Escape = 'escape',\n}\n\nexport type EditTrigger = Trigger.Click | Trigger.Dblclick | Trigger.Space | Trigger.Enter | Trigger.Typing;\nexport type SaveTrigger = Trigger.Tab | Trigger.Enter | Trigger.Escape | Trigger.Clickoff;\nexport type CancelTrigger = Trigger.Escape | Trigger.Clickoff;\n\nexport type EditEventUnion = 'moop';\n\nexport interface IEditModel {\n  editing: boolean;\n  savePromise?: SavePromise;\n  currentEditor?: IEditor;\n  _defaultDecorator: IDefaultEditDecorator;\n  _hydrateOpts(opts?: Partial<IEditOptions>): IEditOptions;\n  _interceptor(e: EventUnion): void;\n  _closeEditor(): void;\n  deleteSelection(): void;\n  editCell(r: number, c: number, isTyping: boolean, originalEvent: AnnotatedMouseOrKeyEventUnion): void;\n  cancelEdit(): void;\n  saveEdit(): SavePromise;\n}\n\nexport function create(grid: Grid) {\n  const editModel: IEditModel = {\n    editing: false,\n    _defaultDecorator: grid.decorators.create(-1, -1, 1, 1),\n    _hydrateOpts(optsCreator: Partial<IEditOptions> = {}) {\n      const isActionMode = !!(optsCreator && optsCreator.action);\n      const opts: IEditOptions = {\n        getEditor() {\n          return {};\n        },\n        headers: !!optsCreator.headers,\n        editTriggers: isActionMode\n          ? [Trigger.Click, Trigger.Space, Trigger.Enter]\n          : [Trigger.Dblclick, Trigger.Enter, Trigger.Typing],\n        saveTriggers: isActionMode ? [] : [Trigger.Tab, Trigger.Enter, Trigger.Clickoff],\n        cancelTriggers: isActionMode ? [] : [Trigger.Escape],\n        ...optsCreator,\n      };\n      if (isActionMode) {\n        // tslint:disable-next-line:only-arrow-functions\n        opts.getEditor = function () {\n          return {\n            decorator: false,\n            save: undefined,\n            closePromise: opts.action && opts.action.apply(opts, arguments),\n          };\n        };\n      } else if (!opts.getEditor) {\n        opts.getEditor = () => {\n          return {};\n        };\n      }\n\n      return opts;\n    },\n    _interceptor(e: EventUnion) {\n      if (!isAnnotatedMouseOrKeyEvent(e)) {\n        return;\n      }\n      const col = e.col;\n      const row = e.row;\n      const opts = getOptsForCol(col);\n      if (!opts) {\n        return;\n      }\n      if (!editModel.editing) {\n        // check editTriggers if not editing\n        switch (e.type) {\n          case 'click':\n            if (optsHasEditTrigger(opts, Trigger.Click) && grid.eventIsOnCells(e)) {\n              editModel.editCell(row, col, false, e);\n            }\n            break;\n          case 'dblclick':\n            if (optsHasEditTrigger(opts, Trigger.Dblclick) && grid.eventIsOnCells(e)) {\n              editModel.editCell(row, col, false, e);\n            }\n            break;\n          case 'keydown':\n            if (optsHasEditTrigger(opts, Trigger.Space) && key.is(key.code.special.space, e.which)) {\n              editModel.editCell(row, col, false, e);\n            }\n\n            if (optsHasEditTrigger(opts, Trigger.Enter) && key.is(key.code.special.enter, e.which)) {\n              editModel.editCell(row, col, false, e);\n            }\n\n            // delete trigger can also happen only when not editing\n            // also have to hardcode 46 until key library merges change\n            if (key.is(key.code.special.backspace, e.which) || e.which === 46) {\n              editModel.deleteSelection();\n            }\n            break;\n          case 'keypress':\n            if (\n              optsHasEditTrigger(opts, Trigger.Typing) &&\n              e.which >= 32 &&\n              e.which <= 122 &&\n              !e.metaKey &&\n              !e.ctrlKey &&\n              !e.altKey\n            ) {\n              editModel.editCell(row, col, true, e);\n            }\n            break;\n        }\n      } else {\n        // check save triggers if editing\n        switch (e.type) {\n          case 'keydown':\n            if (optsHasSaveTrigger(opts, Trigger.Tab) && key.is(key.code.special.tab, e.which)) {\n              editModel.saveEdit().then(() => {\n                grid.navigationModel.handleTabEvent(e);\n              });\n              e.preventDefault();\n            }\n\n            if (optsHasSaveTrigger(opts, Trigger.Enter) && key.is(key.code.special.enter, e.which) && !e.shiftKey) {\n              editModel.saveEdit().then(() => {\n                grid.navigationModel.setFocus(\n                  grid.data.down(grid.navigationModel.focus.row),\n                  grid.navigationModel.focus.col,\n                );\n              });\n              e.preventDefault();\n            }\n            break;\n        }\n      }\n    },\n    deleteSelection() {\n      const ranges: RawPositionRange[] = grid.navigationModel.getAllSelectedRanges();\n      const dataChanges: Array<IGridDataChange<any>> = [];\n      ranges.forEach((range) => {\n        grid.data.iterate(range, (r, c) => {\n          dataChanges.push({\n            row: r,\n            col: c,\n            value: undefined,\n          });\n        });\n      });\n      grid.dataModel.set(dataChanges);\n    },\n    editCell(r: number, c: number, isTyping: boolean, originalEvent: AnnotatedMouseOrKeyEventUnion) {\n      if (editModel.editing) {\n        editModel.saveEdit();\n      }\n      editModel.savePromise = undefined;\n\n      if (isNaN(r) || isNaN(c)) {\n        return;\n      }\n      const opts = getOptsForCol(c);\n      if (!opts) {\n        return;\n      }\n      if ((r < 0 || c < 0) && !opts.headers) {\n        return;\n      }\n\n      const editor = opts.getEditor(r, originalEvent);\n      // if they have no editor or not closePromise,\n      // it's just a simple action and there's no need to wait on them in edit mode\n      if (!editor || (!editor.closePromise && editor.decorator === false)) {\n        return;\n      }\n      setEditing(true);\n      if (editor.decorator === undefined) {\n        editor.decorator = editModel._defaultDecorator;\n        if (editor.save === undefined) {\n          editor.save = () => {\n            const text = editModel._defaultDecorator.renderedElem && editModel._defaultDecorator.renderedElem.value;\n            return Promise.resolve({\n              value: text,\n              formatted: text,\n            });\n          };\n        }\n      }\n      editModel.currentEditor = editor;\n      if (editor.decorator) {\n        editor.decorator.typedText = () => {\n          return isTyping ? grid.textarea.value && grid.textarea.value.trim() : '';\n        };\n        editor.decorator.top = r;\n        editor.decorator.left = c;\n        grid.decorators.add(editor.decorator);\n        editor.removeEscapeStackHandler = grid.escapeStack.add(() => {\n          if (optsHasCancelTrigger(opts, Trigger.Escape)) {\n            editModel.cancelEdit();\n          } else if (optsHasSaveTrigger(opts, Trigger.Escape)) {\n            editModel.saveEdit();\n          }\n        });\n\n        editor.removeClickOffHandler = clickOff.listen(\n          function getClickOffElement() {\n            return editor.decorator && editor.decorator.boundingBox;\n          },\n          (e: MouseEvent) => {\n            if (editor.isInMe && editor.isInMe(e)) {\n              return;\n            }\n            if (optsHasCancelTrigger(opts, Trigger.Clickoff)) {\n              editModel.cancelEdit();\n            } else if (optsHasSaveTrigger(opts, Trigger.Clickoff)) {\n              editModel.saveEdit();\n            }\n          },\n          {},\n        );\n      }\n\n      if (editor.closePromise) {\n        editor.closePromise.then(\n          function resolved() {\n            return editModel.saveEdit();\n          },\n          function rejected() {\n            return editModel.cancelEdit();\n          },\n        );\n      }\n    },\n    _closeEditor() {\n      if (!editModel.editing) {\n        return;\n      }\n      setEditing(false);\n      const currentEditor = editModel.currentEditor;\n      if (currentEditor) {\n        if (currentEditor.removeEscapeStackHandler) {\n          currentEditor.removeEscapeStackHandler();\n        }\n        if (currentEditor.removeClickOffHandler) {\n          currentEditor.removeClickOffHandler();\n        }\n        if (currentEditor.decorator) {\n          grid.decorators.remove(currentEditor.decorator);\n        }\n      }\n\n      grid.viewLayer.draw();\n      grid.eventLoop.bindOnce('grid-draw', () => {\n        if (grid.container) {\n          grid.container.focus();\n        }\n      });\n    },\n    cancelEdit() {\n      editModel._closeEditor();\n    },\n    saveEdit() {\n      if (!editModel.savePromise) {\n        const currentEditor = editModel.currentEditor;\n        const savePromise = currentEditor && currentEditor.save && currentEditor.save();\n\n        const maybeSetPromise =\n          (savePromise &&\n            savePromise.then((dataResult: IGridDataChange<any> | undefined) => {\n              if (dataResult) {\n                if (editModel.currentEditor && editModel.currentEditor.decorator) {\n                  const { top, left } = editModel.currentEditor.decorator;\n                  if (top !== undefined && left !== undefined) {\n                    dataResult.row = top;\n                    dataResult.col = left;\n                    grid.dataModel.set([dataResult]);\n                  }\n                }\n              }\n              return dataResult;\n            })) ||\n          Promise.resolve();\n\n        editModel.savePromise = (maybeSetPromise as Promise<any>).then((result: any) => {\n          editModel._closeEditor();\n          return result;\n        });\n      }\n      return editModel.savePromise;\n    },\n  };\n\n  editModel._defaultDecorator.render = () => {\n    const element = document.createElement('textarea');\n    element.style.pointerEvents = 'all';\n    element.style.zIndex = '1';\n    element.style.position = 'relative';\n    grid.eventLoop.bindOnce('grid-draw', () => {\n      const top = editModel._defaultDecorator.top;\n      const left = editModel._defaultDecorator.left;\n      element.value =\n        (editModel._defaultDecorator.typedText && editModel._defaultDecorator.typedText()) ||\n        (top != undefined && left != undefined && grid.dataModel.get(top, left).formatted) ||\n        '';\n      element.focus();\n    });\n    editModel._defaultDecorator.renderedElem = element;\n    return element;\n  };\n\n  function hasTrigger(trigger: Trigger, triggers: Trigger[]) {\n    return triggers.indexOf(trigger) !== -1;\n  }\n\n  function optsHasEditTrigger(opts: IEditOptions, trigger: EditTrigger) {\n    return hasTrigger(trigger, opts.editTriggers);\n  }\n\n  function optsHasCancelTrigger(opts: IEditOptions, trigger: CancelTrigger) {\n    return hasTrigger(trigger, opts.cancelTriggers);\n  }\n\n  function optsHasSaveTrigger(opts: IEditOptions, trigger: SaveTrigger) {\n    return hasTrigger(trigger, opts.saveTriggers);\n  }\n\n  function getOptsForCol(col: number) {\n    const colDescriptor = grid.data.col.get(col);\n    if (!colDescriptor) {\n      return;\n    }\n    return editModel._hydrateOpts(colDescriptor.editOptions);\n  }\n\n  function setEditing(editing: boolean) {\n    const prevEditing = editModel.editing;\n    editModel.editing = editing;\n    if (prevEditing !== editing) {\n      grid.eventLoop.fire('grid-edit');\n    }\n  }\n\n  grid.eventLoop.bind('grid-destroy', () => {\n    editModel.cancelEdit();\n  });\n\n  grid.eventLoop.addInterceptor(editModel._interceptor);\n\n  return editModel;\n}\n\nexport default create;\n","// Generated by CoffeeScript 1.3.3\n(function() {\n  'use strict';\n\n  var isRef, iterator, key,\n    _this = this,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __hasProp = {}.hasOwnProperty;\n\n  isRef = require('./ref').isRef;\n\n  key = {};\n\n  key.code = {\n    special: require('./code/special'),\n    arrow: require('./code/arrow'),\n    punctuation: require('./code/punctuation'),\n    alnum: require('./code/alnum'),\n    brand: require('./code/brand')\n  };\n\n  key.get = function(pressed) {\n    return iterator(key.code, pressed);\n  };\n\n  key.is = function(ref, pressed) {\n    if (!isRef(ref)) {\n      ref = iterator(ref, pressed);\n    }\n    if (isRef(ref)) {\n      if (isRef(pressed)) {\n        return pressed === ref;\n      } else {\n        return pressed === ref.code || __indexOf.call(ref.code, pressed) >= 0;\n      }\n    } else {\n      return pressed === ref;\n    }\n  };\n\n  iterator = function(context, pressed) {\n    var i, out, ref;\n    for (i in context) {\n      if (!__hasProp.call(context, i)) continue;\n      ref = context[i];\n      if (isRef(ref)) {\n        if (key.is(ref, pressed)) {\n          return ref;\n        }\n      } else {\n        out = iterator(ref, pressed);\n        if (isRef(out)) {\n          return out;\n        }\n      }\n    }\n  };\n\n  if (typeof window !== 'undefined') {\n    window.key = key;\n  }\n\n  module.exports = key;\n\n}).call(this);\n","import { Grid } from '../core';\n\nconst timeNow = require('time-now');\n\nexport interface IFps {\n    threshold: number;\n    windowSize: number;\n    slowCount: number;\n    intervalId: number;\n    percentBelowThreshold?: number;\n    allAverages: boolean;\n    logging: boolean;\n    markFrameTime(): void;\n    getMovingAverage(): number;\n    getAllTimeAverage(): number;\n    getLast(): number | undefined;\n    getFilteredAverage(): number | undefined;\n}\n\nexport function create(grid: Grid) {\n\n    const frames: number[] = [];\n    let totalTime = 0;\n    let totalFrames = 0;\n    let totalWindowTime = 0;\n    let lastLoopTime: number | undefined;\n    let filteredFrameTime = 0;\n    const filterStrength = 20;\n    let belowThresholdCount = 0;\n    let numCalcs = 0;\n    let filteredAverage: number | undefined;\n    let requestId: number | undefined;\n\n    function addFrameToWindow(frameLength: number) {\n        if (typeof frameLength !== 'number' || isNaN(frameLength)) {\n            console.warn('passed non number to fps.addFrame()');\n            return;\n        }\n        if (frames.length > fps.windowSize) {\n            const frame = frames.shift();\n            if (frame !== undefined) {\n                totalWindowTime -= frame;\n            }\n        }\n        totalWindowTime += frameLength;\n        totalTime += frameLength;\n        totalFrames++;\n        frames.push(frameLength);\n    }\n\n    grid.eventLoop.bind('grid-destroy', () => {\n        if (requestId) {\n            cancelAnimationFrame(requestId);\n            requestId = undefined;\n        }\n    });\n\n    const fps: IFps = {\n        threshold: 20,\n        windowSize: 60,\n        slowCount: 0,\n        logging: false,\n        allAverages: false,\n        markFrameTime() {\n            const nowTime = timeNow();\n            if (lastLoopTime) {\n                const frameLength = nowTime - lastLoopTime;\n                filteredFrameTime += (frameLength - filteredFrameTime) / filterStrength;\n                filteredAverage = 1000 / filteredFrameTime;\n                if (filteredAverage < fps.threshold) {\n                    belowThresholdCount++;\n                }\n                if (fps.allAverages) {\n                    addFrameToWindow(1000 / frameLength);\n                }\n                numCalcs++;\n            }\n            lastLoopTime = nowTime;\n        },\n        getMovingAverage() {\n            return totalWindowTime / frames.length;\n        },\n        getAllTimeAverage() {\n            return totalTime / totalFrames;\n        },\n        getLast() {\n            return frames[frames.length - 1];\n        },\n        getFilteredAverage() {\n            return filteredAverage;\n        },\n        intervalId: window.setInterval(() => {\n            fps.percentBelowThreshold = belowThresholdCount / numCalcs * 100;\n            if (fps.percentBelowThreshold > 50) {\n                fps.slowCount++;\n            }\n            if (fps.logging) {\n                console.log('percent below threshold', fps.percentBelowThreshold.toFixed(1), 'filtered average', fps.getFilteredAverage());\n            }\n            belowThresholdCount = 0;\n            numCalcs = 0;\n        }, 1000)\n    };\n\n    function fpsMeasure() {\n        if (grid.destroyed) {\n            return;\n        }\n        requestId = requestAnimationFrame(fpsMeasure);\n        fps.markFrameTime();\n    }\n    fpsMeasure();\n\n    return fps;\n}\n\nexport default create;","import { IRowColEvent } from '../abstract-row-col-model';\nimport { ICellClassDescriptor } from '../cell-classes';\nimport { Grid } from '../core';\nimport ctrlOrCmd from '../ctrl-or-cmd';\nimport { IDecorator } from '../decorators';\nimport { AnnotatedMouseEventUnion, AnnotatedMouseOrKeyEventUnion, IGridCustomMouseEvent, IGridDragStartEvent } from '../event-loop';\nimport { RawPositionRange } from '../position-range';\nimport * as rangeUtil from '../range-util';\nimport * as util from '../util';\n\nconst key = require('key');\nconst arrow = key.code.arrow;\n\nexport interface ISelectionDecorator extends IDecorator {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  _onDragStart?(e: IGridDragStartEvent): void;\n}\n\nexport interface IFocus {\n  row: number;\n  col: number;\n}\n\nexport interface INavigationModel {\n  focus: IFocus;\n  selection: RawPositionRange;\n  otherSelections: ISelectionDecorator[];\n  checkboxModeFor: {\n    rows?: boolean;\n    cols?: boolean;\n  };\n  _selectionDecorator: ISelectionDecorator;\n  focusDecorator: IDecorator;\n  _rowSelectionClasses: ICellClassDescriptor[];\n  _colSelectionClasses: ICellClassDescriptor[];\n  getAllSelections(): Array<RawPositionRange | ISelectionDecorator>;\n  getAllSelectedRanges(): RawPositionRange[];\n  clearSelection(): void;\n  setSelection(r: RawPositionRange): void;\n  setFocus(row: number | undefined, col: number | undefined, dontClearSelection?: boolean, dontSetSelection?: boolean): void;\n  _navFrom(row: number, col: number, e: AnnotatedMouseOrKeyEventUnion): IFocus;\n  handleTabEvent(e: AnnotatedMouseOrKeyEventUnion): void;\n}\n\nexport function create(grid: Grid) {\n  const mainSelection = createAndAddSelectionDecorator(0, 0, -1, -1);\n  const model: INavigationModel = {\n    focus: {\n      row: 0,\n      col: 0\n    },\n    get selection() {\n      if (mainSelection.height === -1) { // cleared selection default to focus\n        return {\n          top: model.focus.row,\n          left: model.focus.col,\n          height: 1,\n          width: 1\n        };\n      }\n      return mainSelection;\n    },\n    otherSelections: [],\n    checkboxModeFor: {},\n    _selectionDecorator: mainSelection,\n    focusDecorator: grid.decorators.create(0, 0, 1, 1),\n    _rowSelectionClasses: [],\n    _colSelectionClasses: [],\n    getAllSelections() {\n      const selections = [];\n      if (model.selection) {\n        selections.push(model.selection);\n      }\n      return selections.concat(model.otherSelections);\n    },\n    setFocus(inputRow?: number, inputCol?: number, dontClearSelection?: boolean, dontSetSelection?: boolean) {\n      inputRow = inputRow && grid.data.row.clamp(inputRow);\n      const row = (typeof inputRow !== 'number' || isNaN(inputRow)) ? model.focus.row : inputRow;\n\n      inputCol = inputCol && grid.data.col.clamp(inputCol);\n      const col = (typeof inputCol !== 'number' || isNaN(inputCol)) ? model.focus.row : inputCol;\n\n      const changed = row !== model.focus.row || col !== model.focus.col;\n      model.focus.row = row;\n      model.focus.col = col;\n      focusClass.top = row;\n      focusClass.left = col;\n      model.focusDecorator.top = row;\n      model.focusDecorator.left = col;\n      grid.cellScrollModel.scrollIntoView(row, col);\n      if (!dontClearSelection) {\n        clearOtherSelections();\n      }\n      if (!dontSetSelection) {\n        setSelectionToFocus();\n      }\n      if (changed) {\n        grid.eventLoop.fire('grid-focus-change');\n      }\n    },\n    _navFrom: navFrom,\n    handleTabEvent(e: AnnotatedMouseOrKeyEventUnion) {\n      let newCol: number | undefined = model.focus.col;\n      let newRow: number | undefined = model.focus.row;\n      if (!e || !e.shiftKey) {\n        if (newCol === grid.data.col.count() - 1) {\n          newRow = grid.data.down(newRow);\n          newCol = 0;\n        } else {\n          newCol = grid.data.right(newCol);\n        }\n      } else {\n        if (newCol === 0) {\n          newRow = grid.data.up(newRow);\n          newCol = grid.data.col.count() - 1;\n        } else {\n          newCol = grid.data.left(newCol);\n        }\n      }\n      model.setFocus(newRow, newCol);\n      e.preventDefault();\n    },\n    setSelection(newSelection: RawPositionRange) {\n      let height = newSelection.height;\n      let width = newSelection.width;\n      if (selectionIsFocus(newSelection)) {\n        height = -1;\n        width = -1;\n      }\n      mainSelection.top = newSelection.top;\n      mainSelection.left = newSelection.left;\n      mainSelection.height = height;\n      mainSelection.width = width;\n      // select the columns to match\n      syncSelectionToHeaders();\n    },\n    getAllSelectedRanges() {\n      let selectionRange = grid.navigationModel.selection;\n      // valid selection range cannot go to -1\n      if (selectionRange.top === -1) {\n        selectionRange = {\n          top: grid.navigationModel.focus.row,\n          left: grid.navigationModel.focus.col,\n          width: 1,\n          height: 1\n        };\n      }\n      return [selectionRange].concat(model.otherSelections);\n    },\n\n    clearSelection() {\n      clearOtherSelections();\n      setSelectionToFocus();\n    },\n  };\n\n  const focusClass = grid.cellClasses.create(0, 0, 'focus');\n  grid.cellClasses.add(focusClass);\n\n  model.focusDecorator.postRender = (div) => {\n    div.setAttribute('class', 'grid-focus-decorator');\n    return div;\n  };\n  grid.decorators.add(model.focusDecorator);\n\n  function seekNextEdge(\n    newIndex: number | undefined,\n    startedDefined: boolean,\n    isForwardEdge: (i?: number) => boolean,\n    isBackwardEdge: (i?: number) => boolean,\n    goForward: (i: number) => number | undefined\n  ) {\n    const isEdgeToSeek = (isForwardEdge(newIndex) || !startedDefined) &&\n      isBackwardEdge ||\n      isForwardEdge;\n\n    // tslint:disable-next-line:no-conditional-assignment\n    while (newIndex !== undefined && goForward(newIndex) !== undefined && !isEdgeToSeek(newIndex = goForward(newIndex))) {\n      // empty\n    }\n\n    return newIndex;\n  }\n\n  function navFrom(row: number, col: number, e: AnnotatedMouseOrKeyEventUnion) {\n    // if nothing changes great we'll stay where we are\n    let newRow: number | undefined = row;\n    let newCol: number | undefined = col;\n    const isSeek = ctrlOrCmd(e);\n    // tslint:disable-next-line:one-variable-per-declaration\n    if (isSeek) {\n      const cellHasValue = (r?: number, c?: number) => {\n        if (r === undefined || c === undefined) {\n          return false;\n        }\n\n        return !!grid.dataModel.get(r, c).formatted;\n      };\n      const isLeftwardEdge = (c: number) => {\n        return cellHasValue(newRow, c) && !cellHasValue(newRow, grid.data.left(c));\n      };\n      const isRightwardEdge = (c: number) => {\n        return cellHasValue(newRow, c) && !cellHasValue(newRow, grid.data.right(c));\n      };\n      const isUpwardEdge = (r: number) => {\n        return cellHasValue(r, newCol) && !cellHasValue(grid.data.up(r), newCol);\n      };\n      const isDownwardEdge = (r: number) => {\n        return cellHasValue(r, newCol) && !cellHasValue(grid.data.down(r), newCol);\n      };\n      const startedDefined = cellHasValue(newRow, newCol);\n      switch (e.which) {\n        case arrow.down.code:\n          newRow = seekNextEdge(newRow, startedDefined, isDownwardEdge, isUpwardEdge, grid.data.down);\n          break;\n        case arrow.up.code:\n          newRow = seekNextEdge(newRow, startedDefined, isUpwardEdge, isDownwardEdge, grid.data.up);\n          break;\n        case arrow.right.code:\n          newCol = seekNextEdge(newCol, startedDefined, isRightwardEdge, isLeftwardEdge, grid.data.right);\n          break;\n        case arrow.left.code:\n          newCol = seekNextEdge(newCol, startedDefined, isLeftwardEdge, isRightwardEdge, grid.data.left);\n          break;\n      }\n    } else {\n      switch (e.which) {\n        case arrow.down.code:\n          newRow = grid.data.down(newRow);\n          break;\n        case arrow.up.code:\n          newRow = grid.data.up(newRow);\n          break;\n        case arrow.right.code:\n          newCol = grid.data.right(newCol);\n          break;\n        case arrow.left.code:\n          newCol = grid.data.left(newCol);\n          break;\n      }\n    }\n\n    if (newRow === undefined) {\n      newRow = row;\n    }\n    if (newCol === undefined) {\n      newCol = col;\n    }\n    return {\n      row: newRow,\n      col: newCol\n    };\n\n  }\n\n  grid.eventLoop.bind('keydown', (e) => {\n    if (!grid.focused) {\n      return;\n    }\n    // handle tab\n    if (key.is(key.code.special.tab, e.which)) {\n      model.handleTabEvent(e);\n      return;\n    }\n\n    if (!key.is(arrow, e.which)) {\n      return;\n    }\n    // focus logic\n\n    if (!e.shiftKey) {\n      const newFocus = navFrom(model.focus.row, model.focus.col, e);\n      model.setFocus(newFocus.row, newFocus.col, true);\n    } else {\n      // selection logic\n      let newSelection;\n      // stand in for if it's cleared\n      if (model.selection.top === -1) {\n        newSelection = {\n          top: model.focus.row,\n          left: model.focus.col,\n          height: 1,\n          width: 1\n        };\n      } else {\n        newSelection = {\n          top: model.selection.top,\n          left: model.selection.left,\n          height: model.selection.height,\n          width: model.selection.width\n        };\n      }\n      const navFromRow = (model.focus.row === newSelection.top) ?\n        newSelection.top + newSelection.height - 1 :\n        newSelection.top;\n\n      const navFromCol = (model.focus.col === newSelection.left) ?\n        newSelection.left + newSelection.width - 1 :\n        newSelection.left;\n      const newRowCol = navFrom(navFromRow, navFromCol, e);\n      setSelectionFromPoints(model.focus.row, model.focus.col, newRowCol.row, newRowCol.col);\n      grid.cellScrollModel.scrollIntoView(newRowCol.row, newRowCol.col);\n    }\n  });\n\n  function isNavableMouseEvent(e: AnnotatedMouseEventUnion | IGridCustomMouseEvent) {\n    const target = e.target;\n    // if there's no target let it through because that only happens in unit tests,\n    // or if it happened in real world it wouldn't have a valid row or col and so wouldn't do anything anyway\n    return !target || grid.eventIsOnCells(e) && (e as AnnotatedMouseEventUnion).button !== 2;\n  }\n\n  function isCheckboxModeForRowCol(row: number, col: number) {\n    return model.checkboxModeFor.rows && col < 0 || (row < 0 && colSelectable(col)) && model.checkboxModeFor.cols;\n  }\n\n  grid.eventLoop.bind('mousedown', (e) => {\n    if (!isNavableMouseEvent(e)) {\n      return;\n    }\n    // assume the event has been annotated by the cell mouse model interceptor\n    const row = e.row;\n    const col = e.col;\n\n    // if we're in checkbox mode pretend the user held command for header mousedowns only\n    const isCheckboxMode = isCheckboxModeForRowCol(row, col);\n    const ctrlOrCmdPressed = isCheckboxMode || ctrlOrCmd(e);\n\n    if (e.shiftKey) {\n      let fromRow = model.focus.row;\n      let fromCol = model.focus.col;\n      let toRow = row;\n      let toCol = col;\n      let wasSelected;\n      if (toRow < 0) {\n        const colDescriptor = grid.data.col.get(toCol);\n        if (colDescriptor.selectable !== false) {\n          wasSelected = colDescriptor.selected;\n          fromRow = 0;\n          toRow = Infinity;\n        }\n\n      }\n      if (toCol < 0) {\n        wasSelected = grid.data.row.get(toRow).selected;\n        fromCol = 0;\n        toCol = Infinity;\n      }\n\n      selectFromFocusToCell(fromRow, fromCol, toRow, toCol, ctrlOrCmdPressed, wasSelected);\n    } else {\n\n      let focusRow = row;\n      if (focusRow < 0) {\n        focusRow = grid.view.row.toData(grid.rowModel.numHeaders());\n      }\n      let focusCol = col;\n      if (focusCol < 0) {\n        focusCol = grid.view.col.toData(grid.colModel.numHeaders());\n      }\n\n      const headerSelectionRange = createHeaderSelectionRange(row, col);\n      if (headerSelectionRange) {\n        const prevSelections = findFullRowOrColSelections(headerSelectionRange);\n        if (prevSelections.length && isCheckboxMode) {\n          const selectAll = headerSelectionRange.width === Infinity &&\n            headerSelectionRange.height === Infinity &&\n            !(grid.rowModel.allSelected() || grid.colModel.allSelected());\n          prevSelections.forEach((prevSelection) => {\n            removeFullRowOrColFromSelection(prevSelection, headerSelectionRange);\n          });\n          if (selectAll) {\n            model.setSelection(headerSelectionRange);\n          }\n          model.setFocus(focusRow, focusCol, true, true);\n        } else {\n          if (ctrlOrCmdPressed && !selectionIsFocus(model.selection)) {\n            addSelection(model.selection);\n          } else {\n            clearOtherSelections();\n          }\n          model.setFocus(focusRow, focusCol, ctrlOrCmdPressed);\n          model.setSelection(headerSelectionRange);\n        }\n\n      } else {\n        if (ctrlOrCmdPressed) {\n          addSelection(model.selection);\n        }\n        model.setFocus(focusRow, focusCol, ctrlOrCmdPressed);\n      }\n    }\n  });\n\n  function selectFromFocusToCell(\n    fromRow: number,\n    fromCol: number,\n    toRow: number,\n    toCol: number,\n    ctrlOrCmdPressed: boolean,\n    wasSelected?: boolean\n  ) {\n    const isCheckboxMode = (fromRow === 0 && toRow === Infinity && model.checkboxModeFor.cols) ||\n      (fromCol === 0 && toCol === Infinity && model.checkboxModeFor.rows);\n    if (!wasSelected || !isCheckboxMode) {\n      setSelectionFromPoints(fromRow, fromCol, toRow, toCol, ctrlOrCmdPressed);\n    } else {\n      const range = rangeUtil.createFromPoints(fromRow, fromCol, toRow, toCol);\n      const prevSelections = findFullRowOrColSelections(range);\n      if (prevSelections.length) {\n        prevSelections.forEach((prevSelection) => {\n          removeFullRowOrColFromSelection(prevSelection, range);\n        });\n      }\n    }\n  }\n\n  function colSelectable(col: number) {\n    const colDescriptor = grid.data.col.get(col);\n    return colDescriptor && colDescriptor.selectable !== false;\n  }\n\n  function createHeaderSelectionRange(row: number, col: number) {\n    let headerSelectionRange;\n    if (row < 0 && col < 0) {\n      headerSelectionRange = rangeUtil.createFromPoints(0, 0, Infinity, Infinity);\n    } else if (row < 0) {\n      if (colSelectable(col)) {\n        headerSelectionRange = rangeUtil.createFromPoints(0, col, Infinity, col);\n      }\n    } else if (col < 0) {\n      headerSelectionRange = rangeUtil.createFromPoints(row, 0, row, Infinity);\n    }\n    return headerSelectionRange;\n  }\n\n  function addOrSetSelection(selection: RawPositionRange) {\n    if (!selectionIsFocus(model.selection)) {\n      addSelection(selection);\n    } else {\n      model.setSelection(selection);\n    }\n  }\n\n  function removeFullRowOrColFromSelection(selection: RawPositionRange | ISelectionDecorator, rowOrCol: RawPositionRange) {\n\n    if (rowOrCol.width === Infinity) { // row\n      const newSelections = [];\n      if (selection.top < rowOrCol.top) { // we need a selection for the top portion\n        const newSelection = {\n          top: selection.top,\n          height: rowOrCol.top - selection.top,\n          left: selection.left,\n          width: selection.width\n        };\n        newSelections.push(newSelection);\n      }\n\n      const bottomRow = selection.top + selection.height - 1;\n      if (bottomRow > rowOrCol.top + rowOrCol.height - 1) { // we need a selection for the bottom portion\n        newSelections.push({\n          top: rowOrCol.top + rowOrCol.height,\n          height: bottomRow - (rowOrCol.top + rowOrCol.height - 1),\n          left: selection.left,\n          width: selection.width\n        });\n      }\n      removeSelection(selection);\n      newSelections.forEach(addOrSetSelection);\n      syncSelectionToHeaders();\n    }\n\n    if (rowOrCol.height === Infinity) {\n      // TODO: col\n    }\n  }\n\n  function findFullRowOrColSelections(range: RawPositionRange) {\n    return model.getAllSelections().filter((selection) => {\n      return (selection.height === Infinity &&\n        selection.top === 0 &&\n        rangeUtil.intersect([selection.left, selection.width], [range.left, range.width]))\n        ||\n        (selection.width === Infinity &&\n          selection.left === 0 &&\n          rangeUtil.intersect([selection.top, selection.height], [range.top, range.height]));\n    });\n  }\n\n  function addSelection(range: RawPositionRange) {\n    model.otherSelections.push(createAndAddSelectionDecorator(range.top, range.left, range.height, range.width));\n  }\n\n  // row col selection\n  function handleRowColSelectionChange(rowOrCol: 'row' | 'col') {\n    const decoratorsField = rowOrCol === 'row' ? '_rowSelectionClasses' : '_colSelectionClasses';\n    const rowColModelField = rowOrCol === 'row' ? 'rowModel' : 'colModel';\n    model[decoratorsField].forEach((selectionDecorator) => {\n      grid.cellClasses.remove(selectionDecorator);\n    });\n    model[decoratorsField] = [];\n\n    if (grid[rowColModelField].allSelected()) {\n      const top = rowOrCol === 'row' ? Infinity : 0;\n      const left = rowOrCol === 'col' ? Infinity : 0;\n      const decorator = grid.cellClasses.create(top, left, 'selected', 1, 1, 'virtual');\n      grid.cellClasses.add(decorator);\n      model[decoratorsField].push(decorator);\n    } else {\n      grid[rowColModelField].getSelected().forEach((index) => {\n        const virtualIndex = grid[rowColModelField].toVirtual(index);\n        const top = rowOrCol === 'row' ? virtualIndex : 0;\n        const left = rowOrCol === 'col' ? virtualIndex : 0;\n        const decorator = grid.cellClasses.create(top, left, 'selected', 1, 1, 'virtual');\n        grid.cellClasses.add(decorator);\n        model[decoratorsField].push(decorator);\n      });\n    }\n  }\n\n  grid.eventLoop.bind('grid-row-selection-change', () => {\n    handleRowColSelectionChange('row');\n  });\n\n  grid.eventLoop.bind('grid-col-selection-change', () => {\n    handleRowColSelectionChange('col');\n  });\n\n  function createAndAddSelectionDecorator(t: number, l: number, h: number, w: number): ISelectionDecorator {\n    const selection = grid.decorators.create(t, l, h, w);\n    const defaultRender = selection.render;\n    selection.render = () => {\n      const div = defaultRender();\n      div.setAttribute('class', 'grid-selection');\n      return div;\n    };\n    grid.decorators.add(selection);\n    return selection as ISelectionDecorator;\n  }\n\n  function syncSelectionToHeaders() {\n    grid.colModel.clearSelected();\n    grid.rowModel.clearSelected();\n    model.getAllSelections().forEach((s) => {\n      if (s) {\n        maybeSelectHeaderFromSelection(s);\n      }\n    });\n  }\n\n  function maybeSelectHeaderFromSelection(range: RawPositionRange, deselect?: boolean) {\n    let indexes;\n    if (range.top === 0 && range.height === Infinity) {\n      indexes = grid.data.col.indexes({\n        from: range.left,\n        length: range.width\n      });\n      if (deselect) {\n        grid.colModel.deselect(indexes);\n      } else {\n        grid.colModel.select(indexes);\n      }\n    }\n    if (range.left === 0 && range.width === Infinity) {\n      indexes = grid.data.row.indexes({\n        from: range.top,\n        length: range.height\n      });\n      if (deselect) {\n        grid.rowModel.deselect(indexes);\n      } else {\n        grid.rowModel.select(indexes);\n      }\n    }\n  }\n\n  function selectionIsFocus(s: RawPositionRange) {\n    return s.height === 1 && s.width === 1 && !model.otherSelections.length;\n  }\n\n  function setSelectionToFocus() {\n    model.setSelection({\n      top: model.focus.row,\n      left: model.focus.col,\n      height: 1,\n      width: 1\n    });\n  }\n\n  function clearOtherSelections() {\n    grid.decorators.remove(model.otherSelections);\n    model.otherSelections = [];\n    syncSelectionToHeaders();\n  }\n\n  function isDecorator(s: ISelectionDecorator | RawPositionRange): s is ISelectionDecorator {\n    return !!(s as ISelectionDecorator).space;\n  }\n\n  function removeSelection(selectionToRemove: ISelectionDecorator | RawPositionRange) {\n    if (rangeUtil.equal(selectionToRemove, model.selection)) {\n      if (model.otherSelections.length) {\n        const lastSelection = model.otherSelections.pop() as ISelectionDecorator;\n        grid.decorators.remove(lastSelection);\n        model.setSelection(lastSelection);\n      } else {\n        setSelectionToFocus();\n      }\n    } else if (isDecorator(selectionToRemove)) {\n      const index = model.otherSelections.indexOf(selectionToRemove);\n      if (index !== -1) {\n        model.otherSelections.splice(index, 1);\n        grid.decorators.remove(selectionToRemove);\n      }\n    }\n    syncSelectionToHeaders();\n  }\n\n  function setSelectionFromPoints(fromRow: number, fromCol: number, toRow: number, toCol: number, dontClearOthers?: boolean) {\n    if (!dontClearOthers) {\n      clearOtherSelections();\n    }\n    toRow = util.clamp(toRow, 0, Infinity);\n    toCol = util.clamp(toCol, 0, Infinity);\n    const newSelection = rangeUtil.createFromPoints(fromRow, fromCol, toRow, toCol);\n    model.setSelection(newSelection);\n  }\n\n  mainSelection._onDragStart = (e) => {\n    if (!isNavableMouseEvent(e)) {\n      return;\n    }\n    if (e.enableAutoScroll) {\n      e.enableAutoScroll();\n    }\n    let fromRow = model.focus.row;\n    let fromCol = model.focus.col;\n    let startCol = e.col;\n    let startRow = e.row;\n    let wasSelected: boolean | undefined;\n    let toRow: number | undefined;\n    let toCol: number | undefined;\n    if (startRow < 0) {\n      // these are notted because mousedwon actually inverts the intial selection\n      wasSelected = !grid.data.col.get(startCol).selected;\n      fromRow = 0;\n      toRow = Infinity;\n\n    }\n    if (startCol < 0) {\n      // these are notted because mousedwon actually inverts the intial selection\n      wasSelected = !grid.data.row.get(startRow).selected;\n      fromCol = 0;\n      toCol = Infinity;\n    }\n    const unbindDrag = grid.eventLoop.bind('grid-cell-drag', (gridCellDrag) => {\n      toRow = toRow !== Infinity ? gridCellDrag.row : toRow;\n      toCol = toCol !== Infinity ? gridCellDrag.col : toCol;\n      if (toCol !== Infinity && !colSelectable(toCol)) {\n        return;\n      }\n\n      const fixedRows = grid.rowModel.numFixed(true);\n      if (startRow < fixedRows && toRow > fixedRows && toRow !== Infinity) {\n        startRow = toRow = grid.rowModel.numFixed();\n        grid.cellScrollModel.scrollTo(0, grid.cellScrollModel.col);\n      }\n      const fixedCols = grid.colModel.numFixed(true);\n      if (startCol < fixedCols && toCol > fixedCols && toCol !== Infinity) {\n        startCol = toCol = grid.colModel.numFixed();\n        grid.cellScrollModel.scrollTo(grid.cellScrollModel.row, 0);\n      }\n      if (isNaN(toRow) || isNaN(toCol)) {\n        return; // don't try to select when NaN\n      }\n      // always pass true because if it was to be cleared mousedown should have handled that\n      selectFromFocusToCell(fromRow, fromCol, toRow, toCol, true, wasSelected);\n    });\n    const unbindDragEnd = grid.eventLoop.bind('grid-drag-end', () => {\n      unbindDrag();\n      unbindDragEnd();\n    });\n  };\n  grid.eventLoop.bind('grid-drag-start', mainSelection._onDragStart);\n\n  setSelectionToFocus();\n\n  function clearSelectionFromModelChange(e: IRowColEvent) {\n    if (e.action === 'size') { // don't clear for resize but all other changes for now will clear selection\n      return;\n    }\n    model.clearSelection();\n\n  }\n\n  grid.eventLoop.bind('grid-col-change', clearSelectionFromModelChange);\n  grid.eventLoop.bind('grid-row-change', clearSelectionFromModelChange);\n  return model;\n}\n\nexport default create;","import { Grid, IGridDimension } from '../core';\nimport { IDecorator } from '../decorators';\nimport makeDirtyClean from '../dirty-clean';\nimport { IGridCustomMouseEvent } from '../event-loop';\nimport * as util from '../util';\n\nexport interface IPixelScrollModel {\n  x: IPixelScrollDimensionInfo;\n  y: IPixelScrollDimensionInfo;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  offsetTop: number;\n  offsetLeft: number;\n  vertScrollBar: IScrollBarDecorator;\n  horzScrollBar: IScrollBarDecorator;\n  maxScroll: {\n    height?: number,\n    width?: number\n  };\n  maxIsAllTheWayFor: {\n    height: boolean,\n    width: boolean\n  };\n  isDirty(): boolean;\n  isOffsetDirty(): boolean;\n  scrollTo(x: number, y: number, dontNotify?: boolean): void;\n  setScrollSize(h: number, w: number): void;\n  _getMaxScroll(heightOrWidth: 'height' | 'width'): number;\n}\n\nexport interface IScrollBarDecorator extends IDecorator {\n  _onDragStart?(e: IGridCustomMouseEvent): void;\n  _unbindDrag?(): void;\n  _unbindDragEnd?(): void;\n}\n\nexport interface IPixelScrollDimensionInfo {\n  position: number;\n  offset: number;\n  scrollSize: number;\n  maxScroll: number;\n  maxIsAllTheWay: boolean;\n  scrollBar: IScrollBarDecorator;\n  scrollTo(px: number, dontNotify?: boolean): void;\n  positionScrollBar(): void;\n  updatePixelOffset(): void;\n  calcCellScrollPosition(): number;\n  sizeScrollBar(): void;\n  cacheMaxScroll(): void;\n  cacheScrollSize(): void;\n  _getMaxScroll(): number;\n}\n\nexport function create(grid: Grid) {\n  const pixelDirtyClean = makeDirtyClean(grid);\n  const offsetDirtyClean = makeDirtyClean(grid);\n  const scrollBarWidth = 10;\n  const intentionAngle = 30;\n\n  function makeDimension(\n    gridDimension: IGridDimension,\n    gridCrossDimension: IGridDimension,\n  ) {\n\n    function getViewScrollSize() {\n      return gridDimension.viewPort.size - gridDimension.virtualPixelCell.fixedSize();\n    }\n\n    function getScrollRatioFromVirtualScrollCoords(scroll: number) {\n      const maxScroll = pixelScrollDimension.maxScroll;\n      const scrollRatio = scroll / maxScroll;\n      return scrollRatio;\n    }\n\n    function getRealScrollBarPosition(scroll: number) {\n      const scrollRatio = getScrollRatioFromVirtualScrollCoords(scroll);\n      const maxScrollBarScroll = getMaxScrollBarCoord();\n      // in scroll bar coords\n      const scrollBarCoord = scrollRatio * maxScrollBarScroll;\n      // add the fixed height to translate back into real coords\n      return scrollBarCoord + gridDimension.virtualPixelCell.fixedSize();\n    }\n\n    function getMaxScroll() {\n      if (pixelScrollDimension.maxIsAllTheWay) {\n        return Math.max(\n          0,\n          pixelScrollDimension.scrollSize - gridDimension.virtualPixelCell.sizeOf(gridDimension.rowColModel.length(true) - 1)\n        );\n      }\n\n      let scrollLength = pixelScrollDimension.scrollSize;\n      const viewScrollSize = getViewScrollSize();\n\n      if (scrollLength <= viewScrollSize) {\n        return 0;\n      }\n\n      let firstScrollableCell = gridDimension.rowColModel.numFixed();\n      while (scrollLength > viewScrollSize - 10 && firstScrollableCell < gridDimension.rowColModel.length(true)) {\n        scrollLength -= gridDimension.virtualPixelCell.sizeOf(firstScrollableCell);\n        firstScrollableCell++;\n      }\n      return pixelScrollDimension.scrollSize - scrollLength;\n    }\n\n    function getMaxScrollBarCoord() {\n      return getViewScrollSize() - (gridDimension.positionRange.getSize(pixelScrollDimension.scrollBar) || scrollBarWidth);\n    }\n\n    function getScrollPositionFromReal(scrollBarRealClickCoord: number) {\n      const scrollBarTopClick = scrollBarRealClickCoord - gridDimension.virtualPixelCell.fixedSize();\n      const scrollRatio = scrollBarTopClick / getMaxScrollBarCoord();\n      const scrollCoord = scrollRatio * pixelScrollDimension.maxScroll;\n      return scrollCoord;\n    }\n\n    function makeScrollBarDecorator() {\n      const decorator: IScrollBarDecorator = grid.decorators.create();\n      decorator.fixed = true;\n      const viewPortClampFn = gridDimension.viewPort.clampPx;\n\n      decorator.postRender = (scrollBarElem: HTMLElement) => {\n        scrollBarElem.setAttribute('class', 'grid-scroll-bar');\n        scrollBarElem.setAttribute('style', `${scrollBarElem.getAttribute('style')} border-radius: 6px;\n                background: rgba(0, 0, 0, .5);\n                z-index: 10;`);\n        decorator._onDragStart = (e) => {\n          if (e.target !== scrollBarElem) {\n            return;\n          }\n          const scrollBarOffset = gridDimension.cellMouse.layerPx(e);\n\n          decorator._unbindDrag = grid.eventLoop.bind('grid-drag', (gridDragEvent: IGridCustomMouseEvent) => {\n            grid.eventLoop.stopBubbling(gridDragEvent);\n            const gridCoord = viewPortClampFn(gridDimension.cellMouse.gridPx(gridDragEvent));\n            const scrollBarRealClickCoord = gridCoord - scrollBarOffset;\n            const scrollCoord = getScrollPositionFromReal(scrollBarRealClickCoord);\n            pixelScrollDimension.scrollTo(scrollCoord);\n          });\n\n          decorator._unbindDragEnd = grid.eventLoop.bind('grid-drag-end', () => {\n            if (decorator._unbindDrag) {\n              decorator._unbindDrag();\n            }\n            if (decorator._unbindDragEnd) {\n              decorator._unbindDragEnd();\n            }\n          });\n\n          e.stopPropagation();\n        };\n\n        grid.eventLoop.bind(scrollBarElem, 'grid-drag-start', decorator._onDragStart);\n        grid.eventLoop.bind(scrollBarElem, 'mousedown', (e) => {\n          grid.eventLoop.stopBubbling(e);\n        });\n\n        return scrollBarElem;\n      };\n\n      decorator.units = 'px';\n      decorator.space = 'real';\n      gridCrossDimension.positionRange.setSize(decorator, scrollBarWidth);\n      return decorator;\n    }\n\n    const pixelScrollDimension: IPixelScrollDimensionInfo = {\n      position: 0,\n      offset: 0,\n      maxScroll: 0,\n      scrollSize: 0,\n      maxIsAllTheWay: false,\n      scrollTo(px: number, dontNotify?: boolean) {\n        pixelScrollDimension.position = util.clamp(px, 0, pixelScrollDimension.maxScroll);\n        pixelScrollDimension.positionScrollBar();\n        pixelScrollDimension.updatePixelOffset();\n\n        if (!dontNotify) {\n          notifyListeners();\n        }\n      },\n      updatePixelOffset() {\n        let modPixels = 0;\n        if (!grid.opts.snapToCell) {\n          const fixedSize = gridDimension.virtualPixelCell.fixedSize();\n          const rawCell = gridDimension.virtualPixelCell.toCellFromPx(pixelScrollDimension.position + fixedSize);\n          const cell = rawCell - gridDimension.rowColModel.numFixed();\n          const startCell = gridDimension.rowColModel.numFixed();\n          const endCell = cell + gridDimension.rowColModel.numFixed() - 1;\n          const position = gridDimension.virtualPixelCell.sizeOf(startCell, endCell);\n          modPixels = position - pixelScrollDimension.position;\n        }\n        if (pixelScrollDimension.offset !== modPixels) {\n          offsetDirtyClean.setDirty();\n        }\n        pixelScrollDimension.offset = modPixels;\n      },\n      scrollBar: makeScrollBarDecorator(),\n      positionScrollBar() {\n        gridDimension.positionRange.setPosition(\n          pixelScrollDimension.scrollBar,\n          getRealScrollBarPosition(pixelScrollDimension.position)\n        );\n      },\n      calcCellScrollPosition() {\n        const position = pixelScrollDimension.position;\n        const rawCell = gridDimension.virtualPixelCell.toCellFromPx(\n          position + gridDimension.virtualPixelCell.fixedSize()\n        );\n        return rawCell - gridDimension.rowColModel.numFixed();\n      },\n      sizeScrollBar() {\n\n        // viewport.size needs to be cross size\n        gridCrossDimension.positionRange.setPosition(\n          pixelScrollDimension.scrollBar,\n          gridCrossDimension.viewPort.size - scrollBarWidth\n        );\n        const scrollableViewSize = getViewScrollSize();\n        const scrollBarSize = Math.max(scrollableViewSize / gridDimension.virtualPixelCell.totalSize() * scrollableViewSize, 20);\n        gridDimension.positionRange.setSize(\n          pixelScrollDimension.scrollBar,\n          scrollBarSize\n        );\n        if (scrollBarSize >= scrollableViewSize) {\n          gridDimension.positionRange.setSize(\n            pixelScrollDimension.scrollBar,\n            -1\n          );\n        }\n      },\n      cacheMaxScroll() {\n        pixelScrollDimension.maxScroll = getMaxScroll();\n      },\n      cacheScrollSize() {\n        pixelScrollDimension.scrollSize = gridDimension.virtualPixelCell.totalSize() - gridDimension.virtualPixelCell.fixedSize();\n      },\n      _getMaxScroll: getMaxScroll\n    };\n    return pixelScrollDimension;\n  }\n\n  const dimensions = {\n    y: makeDimension(grid.rows, grid.cols),\n    x: makeDimension(grid.cols, grid.rows),\n  };\n  const model: IPixelScrollModel = {\n    get height() {\n      return dimensions.y.scrollSize;\n    },\n    get width() {\n      return dimensions.x.scrollSize;\n    },\n    get top() {\n      return dimensions.y.position;\n    },\n    get left() {\n      return dimensions.x.position;\n    },\n    get offsetTop() {\n      return dimensions.y.offset;\n    },\n    get offsetLeft() {\n      return dimensions.x.offset;\n    },\n    get vertScrollBar() {\n      return dimensions.y.scrollBar;\n    },\n    get horzScrollBar() {\n      return dimensions.x.scrollBar;\n    },\n    maxScroll: {\n      get height() {\n        return dimensions.y.scrollSize;\n      },\n      get width() {\n        return dimensions.x.scrollSize;\n      }\n    },\n    maxIsAllTheWayFor: {\n      get height() {\n        return dimensions.y.maxIsAllTheWay;\n      },\n      set height(h: boolean) {\n        dimensions.y.maxIsAllTheWay = h;\n      },\n      get width() {\n        return dimensions.x.maxIsAllTheWay;\n      },\n      set width(h: boolean) {\n        dimensions.x.maxIsAllTheWay = h;\n      },\n    },\n    isDirty: pixelDirtyClean.isDirty,\n    isOffsetDirty: offsetDirtyClean.isDirty,\n    setScrollSize(h: number, w: number) {\n      model.y.scrollSize = h;\n      model.x.scrollSize = w;\n    },\n    scrollTo(top: number, left: number, dontNotify?: boolean) {\n      model.y.scrollTo(top, true);\n      model.x.scrollTo(left, true);\n      if (!dontNotify) {\n        notifyListeners();\n      }\n\n    },\n    _getMaxScroll(heightOrWidth: 'height' | 'width') {\n      const dimension = heightOrWidth === 'height' ? model.y : model.x;\n      return dimension._getMaxScroll();\n    },\n    y: dimensions.y,\n    x: dimensions.x,\n  };\n\n  grid.eventLoop.bind('grid-virtual-pixel-cell-change', () => {\n    model.y.cacheScrollSize();\n    model.x.cacheScrollSize();\n    cacheMaxScroll();\n    sizeScrollBars();\n    updatePixelOffsets();\n  });\n\n  grid.eventLoop.bind('grid-viewport-change', () => {\n    cacheMaxScroll();\n    sizeScrollBars();\n    updatePixelOffsets();\n  });\n\n  function cacheMaxScroll() {\n    model.y.cacheMaxScroll();\n    model.x.cacheMaxScroll();\n  }\n\n  function checkAngle(side1: number, side2: number) {\n    const angle = Math.abs(Math.atan(side1 / side2) * 57.29);\n    return angle < intentionAngle;\n  }\n\n  // assumes a standardized wheel event that we create through the mousewheel package\n  grid.eventLoop.bind('mousewheel', (e: MouseWheelEvent) => {\n    if (e.target !== grid.container && getScrollElementFromTarget(e.target, grid.container) !== grid.container) {\n      return;\n    }\n\n    let deltaY = e.deltaY;\n    let deltaX = e.deltaX;\n    if (checkAngle(deltaY, deltaX)) {\n      deltaY = 0;\n    } else if (checkAngle(deltaX, deltaY)) {\n      deltaX = 0;\n    }\n\n    model.scrollTo(model.top - deltaY, model.left - deltaX, false);\n    e.preventDefault();\n  });\n\n  function notifyListeners() {\n    // TODO: possibly keep track of delta since last update and send it along. for now, no\n    grid.eventLoop.fire('grid-pixel-scroll');\n\n    // update the cell scroll\n    grid.cellScrollModel.scrollTo(model.y.calcCellScrollPosition(), model.x.calcCellScrollPosition(), undefined, true);\n    pixelDirtyClean.setDirty();\n  }\n\n  /* SCROLL BAR LOGIC */\n\n  function sizeScrollBars() {\n    model.y.sizeScrollBar();\n    model.x.sizeScrollBar();\n    positionScrollBars();\n  }\n\n  function positionScrollBars() {\n    model.y.positionScrollBar();\n    model.x.positionScrollBar();\n  }\n\n  function updatePixelOffsets() {\n    model.y.updatePixelOffset();\n    model.x.updatePixelOffset();\n  }\n\n  grid.decorators.add(model.y.scrollBar);\n  grid.decorators.add(model.x.scrollBar);\n  /* END SCROLL BAR LOGIC */\n\n  const hasStyle = (elem: EventTarget): elem is HTMLElement => !!(elem as any).style;\n\n  function getScrollElementFromTarget(elem: EventTarget | null, stopParent?: HTMLElement | Document) {\n    stopParent = stopParent || document;\n    if (!elem || !(hasStyle(elem))) {\n      return stopParent;\n    }\n\n    const position = elem.style.position;\n    const excludeStaticParent = position === 'absolute';\n    const overflowRegex = /(auto|scroll)/;\n    let scrollParent: HTMLElement | null = elem;\n\n    while (!!scrollParent && scrollParent !== stopParent) {\n      if (!(excludeStaticParent && scrollParent.style.position === 'static')) {\n        const computedStyle = getComputedStyle(scrollParent);\n\n        if (overflowRegex.test('' + computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {\n          break;\n        }\n      }\n\n      scrollParent = scrollParent.parentElement;\n    }\n\n    return position === 'fixed' || !scrollParent || scrollParent === elem ? elem.ownerDocument || stopParent : scrollParent;\n  }\n\n  return model;\n}\n\nexport default create;","import { AbstractRowColModel, IRowDescriptor } from '../abstract-row-col-model';\nimport { Grid } from '../core';\n\nexport class RowModel extends AbstractRowColModel {\n    height = (idx: number) => {\n        return this.sizeOf(idx);\n    }\n    row = (idx: number): IRowDescriptor => {\n        return this.get(idx, true);\n    }\n}\n\nexport function create(grid: Grid) {\n    return new RowModel(grid, 'row', 'height', 30);\n}\n\nexport default create;","import { Grid } from '../core';\nimport { IDecorator } from '../decorators';\n\nexport interface IShowHiddenCols {\n    _decorators: { [key: number]: IDecorator | undefined };\n}\n\nexport function create(grid: Grid) {\n    const api: IShowHiddenCols = {\n        _decorators: {}\n    };\n\n    function setColShowing(col: number) {\n        grid.colModel.get(col).hidden = false;\n    }\n\n    function doWhileHidden(col: number, fn: ((c: number) => void) | undefined, inc: number) {\n        let colDescriptor;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((colDescriptor = grid.colModel.get(col)) !== undefined && colDescriptor.hidden) {\n            if (fn) {\n                fn(col);\n            }\n            col = col + inc;\n        }\n        return col;\n    }\n\n    function createDecorator(col: number, right: boolean) {\n        const headerDecorator = grid.decorators.create(0, col, 1, 1, 'cell', 'virtual');\n\n        headerDecorator.postRender = (div) => {\n\n            if (right) {\n                div.style.transform = 'translate(50%, -50%)';\n                div.style.webkitTransform = 'translate(50%, -50%)';\n                div.style.removeProperty('left');\n            } else {\n                div.style.transform = 'translate(-50%, -50%)';\n                div.style.webkitTransform = 'translate(-50%, -50%)';\n                div.style.removeProperty('right');\n            }\n            div.style.removeProperty('bottom');\n            div.style.top = '50%';\n            div.setAttribute('class', 'show-hidden-cols');\n            div.setAttribute('dts', 'grid_column_unhide_btn');\n\n            grid.eventLoop.bind(div, 'click', () => {\n                const inc = right ? 1 : -1;\n                doWhileHidden(col + inc, setColShowing, inc);\n            });\n        };\n        return headerDecorator;\n    }\n\n    function maybeRemoveDecorator(col: number) {\n        if (api._decorators[col]) {\n            const decorator = api._decorators[col];\n            if (decorator !== undefined) {\n                grid.decorators.remove(decorator);\n                api._decorators[col] = undefined;\n            }\n        }\n    }\n\n    grid.eventLoop.bind('grid-col-change', (e) => {\n        if (e.action === 'hide' || e.action === 'add') {\n            e.descriptors.forEach((descriptor) => {\n                const col = descriptor.index;\n                if (!col && col !== 0) {\n                    return;\n                }\n                if (descriptor.hidden) {\n                    let decCol = col;\n                    let showingCol = doWhileHidden(col, undefined, -1);\n                    const rightSide = showingCol !== -1;\n                    if (!rightSide) {\n                        // we actually have to backtrack to the last showing column\n                        showingCol = doWhileHidden(col, undefined, 1);\n                    }\n                    decCol = showingCol;\n                    maybeRemoveDecorator(col);\n                    const decorator = createDecorator(decCol, rightSide);\n                    grid.decorators.add(decorator);\n                    api._decorators[col] = decorator;\n                } else {\n                    maybeRemoveDecorator(col);\n                }\n            });\n        }\n    });\n\n    return api;\n}\n\nexport default create;","\nimport { IColDescriptor, IRowDescriptor } from '../abstract-row-col-model';\nimport { AbstractSpaceConverter } from './converter';\nimport { AbstractDimensionalSpaceConverter } from './dimensional-converter';\n\nexport class DataSpaceConverter extends AbstractSpaceConverter {\n  row: AbstractDimensionalSpaceConverter<IRowDescriptor> = new DimensionalDataSpaceConverter(this.grid.rows);\n  col: AbstractDimensionalSpaceConverter<IColDescriptor> = new DimensionalDataSpaceConverter(this.grid.cols);\n}\n\nclass DimensionalDataSpaceConverter<T extends IRowDescriptor | IColDescriptor> extends AbstractDimensionalSpaceConverter<T> {\n  toData(i: number) {\n    return i;\n  }\n  toVirtual(dataCol: number) {\n    return this.gridDimension.rowColModel.toVirtual(dataCol);\n  }\n  count() {\n    return this.gridDimension.rowColModel.length();\n  }\n  toView(dataCol: number) {\n    return this.gridDimension.converters.virtual.toView(this.toVirtual(dataCol));\n  }\n}","\nimport { IColDescriptor, IRowDescriptor } from '../abstract-row-col-model';\nimport { AbstractSpaceConverter } from './converter';\nimport { AbstractDimensionalSpaceConverter } from './dimensional-converter';\n\nexport class ViewSpaceConverter extends AbstractSpaceConverter {\n  row: AbstractDimensionalSpaceConverter<IRowDescriptor> = new DimensionalViewSpaceConverter(this.grid.rows);\n  col: AbstractDimensionalSpaceConverter<IColDescriptor> = new DimensionalViewSpaceConverter(this.grid.cols);\n}\n\nclass DimensionalViewSpaceConverter<T extends IRowDescriptor | IColDescriptor> extends AbstractDimensionalSpaceConverter<T> {\n  toView(i: number) {\n    return i;\n  }\n  toData(viewCol: number) {\n    return this.gridDimension.converters.virtual.toData(this.toVirtual(viewCol));\n  }\n  toVirtual(viewCol: number) {\n    return this.gridDimension.viewPort.toVirtual(viewCol);\n  }\n  count() {\n    return this.gridDimension.viewPort.count;\n  }\n}\n","\nimport { IColDescriptor, IRowDescriptor } from '../abstract-row-col-model';\nimport { AbstractSpaceConverter } from './converter';\nimport { AbstractDimensionalSpaceConverter } from './dimensional-converter';\n\nexport class VirtualSpaceConverter extends AbstractSpaceConverter {\n  row: AbstractDimensionalSpaceConverter<IRowDescriptor> = new DimensionalVirtualSpaceConverter(this.grid.rows);\n  col: AbstractDimensionalSpaceConverter<IColDescriptor> = new DimensionalVirtualSpaceConverter(this.grid.cols);\n}\n\nclass DimensionalVirtualSpaceConverter<T extends IRowDescriptor | IColDescriptor> extends AbstractDimensionalSpaceConverter<T> {\n  toVirtual(i: number) {\n    return i;\n  }\n  toData(virtualCol: number) {\n    return this.gridDimension.rowColModel.toData(virtualCol);\n  }\n  count() {\n    return this.gridDimension.rowColModel.length(true);\n  }\n\n  toView(virtualRow: number) {\n    return this.gridDimension.viewPort.toReal(virtualRow);\n  }\n}\n","import { IBuilderRenderContext } from '../abstract-row-col-model';\nimport { Grid, IGridDimension } from '../core';\nimport customEvent from '../custom-event';\nimport { IDecorator } from '../decorators';\nimport { EventUnion, isAnnotatedEvent } from '../event-loop';\nimport { RawPositionRange } from '../position-range';\nimport * as util from '../util';\n\ntype IViewLayerDecorator = RawPositionRange & IDecorator & {\n  scrollHorz?: boolean;\n  scrollVert?: boolean;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n};\n\nexport interface IViewLayer {\n  build(elem: HTMLElement): void;\n  draw(): void;\n  eventIsOnCells(e: EventUnion): boolean;\n  setTextContent(elem: Node | undefined, text: string): void;\n  getBorderWidth(): number;\n  _drawCells(): void;\n  _buildCells(): void;\n  _buildCols(): void;\n  _buildRows(): void;\n  _drawDecorators(b: boolean): void;\n  _drawCellClasses(): void;\n}\n\ninterface IBuiltElementMap {\n  [key: string]: Array<HTMLElement | undefined>;\n}\n\nexport function create(grid: Grid) {\n\n  let container: HTMLElement | undefined;\n  let root: HTMLElement;\n  let cellContainerTL: HTMLElement;\n  let cellContainerTR: HTMLElement;\n  let cellContainerBL: HTMLElement;\n  let cellContainerBR: HTMLElement;\n  let decoratorContainerTL: HTMLElement;\n  let decoratorContainerTR: HTMLElement;\n  let decoratorContainerBL: HTMLElement;\n  let decoratorContainerBR: HTMLElement;\n  let borderWidth: number | undefined;\n  let hoveredFixedRow: HTMLElement | undefined;\n  let hoveredRow: HTMLElement | undefined;\n\n  const GRID_CELL_CONTAINER_BASE_CLASS = 'grid-cells';\n  const GRID_VIEW_ROOT_CLASS = 'js-grid-view-root';\n  const CELL_CLASS = 'grid-cell';\n\n  let cells: HTMLElement[][]; // matrix of rendered cell elements;\n  const rows = {\n    fixed: [] as HTMLElement[],\n    nonFixed: [] as HTMLElement[]\n  }; // array of all rendered rows\n  // map from col index to an array of built elements for the column to update on scroll\n  let builtCols: IBuiltElementMap = {};\n  // map from row index to an array of built elements for the row to update on scroll\n  let builtRows: IBuiltElementMap = {};\n\n  let drawRequestedId: number | undefined;\n\n  const viewLayer: IViewLayer = {\n    build(elem: HTMLElement) {\n      cleanup();\n\n      container = elem;\n\n      cellContainerTL = makeCellContainer();\n      cellContainerTL.style.zIndex = '4';\n      cellContainerTR = makeCellContainer();\n      cellContainerTR.style.zIndex = '3';\n      cellContainerBL = makeCellContainer();\n      cellContainerBL.style.zIndex = '3';\n      cellContainerBR = makeCellContainer();\n      cellContainerBR.style.zIndex = '2';\n\n      decoratorContainerTL = makeDecoratorContainer();\n      decoratorContainerTL.style.zIndex = '4';\n      decoratorContainerTR = makeDecoratorContainer();\n      decoratorContainerTR.style.zIndex = '3';\n      decoratorContainerTR.style.overflow = 'hidden';\n      decoratorContainerBL = makeDecoratorContainer();\n      decoratorContainerBL.style.zIndex = '3';\n      decoratorContainerBL.style.overflow = 'hidden';\n      decoratorContainerBR = makeDecoratorContainer();\n      decoratorContainerBR.style.zIndex = '2';\n\n      root = document.createElement('div');\n      root.setAttribute('class', GRID_VIEW_ROOT_CLASS);\n\n      root.appendChild(cellContainerTL);\n      root.appendChild(cellContainerTR);\n      root.appendChild(cellContainerBL);\n      root.appendChild(cellContainerBR);\n\n      root.appendChild(decoratorContainerTL);\n      root.appendChild(decoratorContainerTR);\n      root.appendChild(decoratorContainerBL);\n      root.appendChild(decoratorContainerBR);\n\n      container.appendChild(root);\n\n    },\n    draw() {\n      if (drawRequestedId === undefined) {\n        drawRequestedId = requestAnimationFrame(draw);\n      }\n    },\n    eventIsOnCells(e: EventUnion): boolean {\n      const target = e.target;\n\n      if (!target) {\n        return false;\n      }\n      if (targetIsElement(target) && target.classList.contains('grid-cell') || target === grid.textarea) {\n        // on an actual grid-cell\n        return true;\n      }\n\n      if (!isAnnotatedEvent(e)) {\n        return false;\n      }\n\n      const renderedColElement = builtCols && builtCols[e.realCol];\n      const renderedRowElement = builtRows && builtRows[e.realRow];\n\n      if (renderedColElement && !grid.view.col.get(e.realCol).isBuiltActionable) {\n        const elem = renderedColElement[e.realRow];\n        return isTargetInElem(target, elem);\n      } else if (renderedRowElement && !grid.view.row.get(e.realRow).isBuiltActionable) {\n        const elem = renderedRowElement[e.realCol];\n        return isTargetInElem(target, elem);\n      }\n\n      return false;\n    },\n    setTextContent(elem: Node | undefined, text: string) {\n      if (!elem) {\n        return;\n      }\n      if (elem.firstChild && elem.firstChild.nodeType === 3) {\n        elem.firstChild.nodeValue = text;\n      } else {\n        elem.textContent = text;\n      }\n    },\n    getBorderWidth,\n    _drawCells: drawCells,\n    _buildCells: buildCells,\n    _buildCols: buildCols,\n    _buildRows: buildRows,\n    _drawDecorators: drawDecorators,\n    _drawCellClasses: drawCellClasses,\n  };\n\n  const targetIsElement = (e: EventTarget): e is Element => !!(e as any).classList;\n\n  // add the cell classes through the standard method\n  grid.cellClasses.add(grid.cellClasses.create(0, 0, CELL_CLASS, Infinity, Infinity, 'virtual'));\n\n  const rowHeaderClasses = grid.cellClasses.create(0, 0, 'grid-header grid-row-header', Infinity, 0, 'virtual');\n  const colHeaderClasses = grid.cellClasses.create(0, 0, 'grid-header grid-col-header', 0, Infinity, 'virtual');\n  const fixedColClasses = grid.cellClasses.create(0, -1, 'grid-last-fixed-col', Infinity, 1, 'virtual');\n  const fixedRowClasses = grid.cellClasses.create(-1, 0, 'grid-last-fixed-row', 1, Infinity, 'virtual');\n\n  grid.cellClasses.add(rowHeaderClasses);\n  grid.cellClasses.add(colHeaderClasses);\n  grid.cellClasses.add(fixedRowClasses);\n  grid.cellClasses.add(fixedColClasses);\n\n  grid.eventLoop.bind('grid-col-change', () => {\n    fixedColClasses.left = grid.colModel.numFixed() - 1;\n    rowHeaderClasses.width = grid.colModel.numHeaders();\n  });\n\n  grid.eventLoop.bind('grid-row-change', () => {\n    fixedRowClasses.top = grid.rowModel.numFixed() - 1;\n    colHeaderClasses.height = grid.rowModel.numHeaders();\n  });\n\n  grid.eventLoop.bind('grid-cell-mouse-move', (e) => {\n    let row = rows.fixed[e.realRow];\n    if (!row || !viewLayer.eventIsOnCells(e)) {\n      return;\n    }\n    row.classList.add('hover');\n    if (hoveredFixedRow && hoveredFixedRow !== row) {\n      hoveredFixedRow.classList.remove('hover');\n    }\n    hoveredFixedRow = row;\n    row = rows.nonFixed[e.realRow];\n    if (row) {\n      row.classList.add('hover');\n    }\n    if (hoveredRow && hoveredRow !== row) {\n      hoveredRow.classList.remove('hover');\n    }\n    hoveredRow = row;\n  });\n\n  function makeCellContainer(): HTMLElement {\n    const cellContainer = document.createElement('div');\n    cellContainer.setAttribute('dts', 'grid-cells');\n    cellContainer.setAttribute('class', GRID_CELL_CONTAINER_BASE_CLASS);\n    cellContainer.style.zIndex = '';\n    // cellContainer.style.pointerEvents = 'none';\n    return cellContainer;\n  }\n\n  function makeDecoratorContainer(): HTMLElement {\n    const decoratorContainer = document.createElement('div');\n    decoratorContainer.setAttribute('dts', 'grid-decorators');\n    util.position(decoratorContainer, 0, 0, 0, 0);\n    decoratorContainer.style.zIndex = '';\n    decoratorContainer.style.pointerEvents = 'none';\n    return decoratorContainer;\n  }\n\n  function offsetContainerForPixelScroll() {\n    const modTopPixels = grid.pixelScrollModel.offsetTop;\n    const modLeftPixels = grid.pixelScrollModel.offsetLeft;\n\n    const fixedHeight = grid.virtualPixelCellModel.fixedHeight();\n    const fixedWidth = grid.virtualPixelCellModel.fixedWidth();\n    util.position(cellContainerTL, 0, 0, undefined, undefined, fixedHeight, fixedWidth);\n    util.position(cellContainerBR, 0, 0, 0, 0);\n    util.position3D(cellContainerBR, modTopPixels, modLeftPixels);\n    util.position(cellContainerTR, 0, 0, undefined, 0, fixedHeight);\n    util.position3D(cellContainerTR, 0, modLeftPixels);\n    util.position(cellContainerBL, 0, 0, 0, undefined, undefined, fixedWidth);\n    util.position3D(cellContainerBL, modTopPixels, 0);\n\n    util.position(decoratorContainerTL, 0, 0, undefined, undefined, fixedHeight, fixedWidth);\n    util.position(decoratorContainerBR, 0, 0, 0, 0);\n    util.position3D(decoratorContainerBR, modTopPixels, modLeftPixels);\n    util.position(decoratorContainerTR, 0, fixedWidth, undefined, 0, undefined, undefined);\n    util.position3D(decoratorContainerTR, 0, 0);\n    util.position(decoratorContainerBL, fixedHeight, 0, 0, undefined, undefined, undefined);\n    util.position3D(decoratorContainerBL, 0, 0);\n    grid.decorators.getAlive().forEach((decorator: IViewLayerDecorator) => {\n      let decoratorTopOffset = 0;\n      let decoratorLeftOffset = 0;\n      if (decorator.scrollVert && !decorator.scrollHorz) {\n        decoratorTopOffset = fixedHeight - modTopPixels;\n      } else if (decorator.scrollHorz && !decorator.scrollVert) {\n        decoratorLeftOffset = fixedWidth - modLeftPixels;\n      }\n\n      if (decorator.fixed) {\n        if (decorator.scrollVert) {\n          decoratorTopOffset += modTopPixels;\n        }\n        if (decorator.scrollHorz) {\n          decoratorLeftOffset += modLeftPixels;\n        }\n      }\n      if (decorator.boundingBox) {\n        decorator.boundingBox.style.marginTop = -1 * decoratorTopOffset + 'px';\n        decorator.boundingBox.style.marginLeft = -1 * decoratorLeftOffset + 'px';\n      }\n\n    });\n  }\n\n  function measureBorderWidth() {\n    // read the border width, for the rare case of larger than 1px borders, otherwise the draw will default to 1\n    if (borderWidth) {\n      return;\n    }\n    const jsGridCell = cells[0] && cells[0][0];\n    if (jsGridCell) {\n      const oldClass = jsGridCell.className;\n      jsGridCell.className = CELL_CLASS;\n      const computedStyle = getComputedStyle(jsGridCell);\n      const borderWidthProp = computedStyle.getPropertyValue('border-left-width');\n      borderWidth = parseInt(borderWidthProp, 10);\n      jsGridCell.className = oldClass;\n    }\n    borderWidth = (!borderWidth || isNaN(borderWidth)) ? undefined : borderWidth;\n    return borderWidth;\n  }\n\n  function draw() {\n    drawRequestedId = undefined;\n    // return if we haven't built yet\n    if (!container || grid.destroyed) {\n      return;\n    }\n\n    if (!grid.opts.snapToCell && grid.fps.slowCount > 10) {\n      grid.opts.snapToCell = true;\n    }\n\n    const rebuilt = grid.viewPort.isDirty();\n    if (rebuilt) {\n      viewLayer._buildCells();\n    }\n\n    const builtColsDirty = grid.colModel.areBuildersDirty();\n    if (rebuilt || builtColsDirty) {\n      viewLayer._buildCols();\n    }\n\n    const builtRowsDirty = grid.rowModel.areBuildersDirty();\n    if (rebuilt || builtRowsDirty) {\n      viewLayer._buildRows();\n    }\n\n    const cellsPositionOrSizeChanged = grid.colModel.isDirty() || grid.rowModel.isDirty() || grid.cellScrollModel.isDirty();\n\n    if (grid.cellClasses.isDirty() || rebuilt || cellsPositionOrSizeChanged) {\n      viewLayer._drawCellClasses();\n    }\n\n    const drawingCells = rebuilt || cellsPositionOrSizeChanged || builtColsDirty || builtRowsDirty || grid.dataModel.isDirty();\n    if (drawingCells) {\n      viewLayer._drawCells();\n    }\n\n    const drawingDecorators = grid.decorators.isDirty() || rebuilt || cellsPositionOrSizeChanged;\n    if (drawingDecorators) {\n      viewLayer._drawDecorators(cellsPositionOrSizeChanged || rebuilt);\n    }\n\n    if (grid.pixelScrollModel.isOffsetDirty() || drawingDecorators) {\n      offsetContainerForPixelScroll();\n    }\n\n    grid.eventLoop.fire('grid-draw');\n  }\n\n  /* CELL LOGIC */\n  function getBorderWidth() {\n    return borderWidth || 1;\n  }\n\n  function drawCells() {\n    measureBorderWidth();\n    const bWidth = getBorderWidth();\n    const headerRows = grid.rowModel.numHeaders();\n    const headerCols = grid.colModel.numHeaders();\n    let totalVisibleCellWidth = 0;\n    let lastVirtualCol: number | undefined;\n    let lastVirtualRow: number | undefined;\n    // these get calculated once per col and are then cached to save a factor of numRows calls per column\n    const widths: number[] = [];\n    const lefts: number[] = [];\n    const virtualCols: number[] = [];\n\n    function positionRow(row: HTMLElement, height: number, top: number, virtualRow: number) {\n      if (!row) {\n        return;\n      }\n      // seeing the same virtual row twice means we've been clamped and it's time to hide the row\n      if (height === 0 || lastVirtualRow === virtualRow) {\n        row.style.display = 'none';\n        return;\n      }\n      row.style.display = '';\n      row.style.height = height + bWidth + 'px';\n      row.style.top = top + 'px';\n    }\n\n    grid.viewPort.iterateCells(function drawCell(r: number, c: number) {\n      const cell = cells[r][c];\n      // only calculate these once per column since they can't change during draw\n      const width = widths[c] || (widths[c] = grid.viewPort.getColWidth(c));\n      const virtualCol = virtualCols[c] || (virtualCols[c] = grid.viewPort.toVirtualCol(c));\n      // if we got the same vCol we've been clamped and its time to hide this cell\n      // also hide the cell if its width is zero cause ya...\n      if (width === 0 || virtualCol === lastVirtualCol) {\n        cell.style.display = 'none';\n        return;\n      }\n      if (r === 0) {\n        // calculate width for rows later but only do it one time (so on the first row)\n        totalVisibleCellWidth += width;\n      }\n\n      lastVirtualCol = virtualCol;\n      cell.style.display = '';\n      cell.style.width = width + bWidth + 'px';\n      // only calculate these once per column since they can't change during draw\n      const left = lefts[c] || (lefts[c] = grid.viewPort.getColLeft(c));\n\n      cell.style.left = left + 'px';\n\n      const virtualRow = grid.viewPort.toVirtualRow(r);\n\n      const data = (r < headerRows || c < headerCols) ?\n        grid.dataModel.getHeader(virtualRow, virtualCol) :\n        grid.dataModel.get(grid.rowModel.toData(virtualRow), grid.colModel.toData(virtualCol));\n\n      // artificially only get builders for row headers for now\n      let builder = grid.rowModel.get(virtualRow).builder;\n      let hasRowBuilder = true;\n      if (!builder || (virtualCol < headerCols && !builder.includeHeaders)) {\n        hasRowBuilder = false;\n        builder = grid.colModel.get(virtualCol).builder;\n        if (builder && virtualRow < headerRows && !builder.includeHeaders) {\n          builder = undefined;\n        }\n      }\n\n      let cellChild;\n      if (builder) {\n        const builtElem = (hasRowBuilder) ?\n          builtRows[virtualRow][c] :\n          builtCols[virtualCol][r];\n\n        cellChild = builder.update(builtElem, {\n          virtualCol,\n          virtualRow,\n          data\n        });\n      }\n\n      // if we didn't get a child from the builder use a regular text node\n      if (!cellChild) {\n        viewLayer.setTextContent(cell, data.formatted);\n      } else {\n        const notSameElem = cell.firstChild !== cellChild;\n        if (cell.firstChild && notSameElem) {\n          cell.removeChild(cell.firstChild);\n        }\n        if (notSameElem) {\n          cell.appendChild(cellChild);\n        }\n\n      }\n    }, function drawRow(r: number) {\n      const height = grid.viewPort.getRowHeight(r);\n      const virtualRow = grid.view.row.toVirtual(r);\n      const top = grid.viewPort.getRowTop(r);\n      positionRow(rows.fixed[r], height, top, virtualRow);\n      positionRow(rows.nonFixed[r], height, top, virtualRow);\n      lastVirtualRow = virtualRow;\n      lastVirtualCol = undefined;\n    });\n\n    rows.nonFixed.forEach((row) => {\n      row.style.width = totalVisibleCellWidth + 'px';\n    });\n    rows.fixed.forEach((row) => {\n      row.style.width = grid.virtualPixelCellModel.fixedWidth() + 'px';\n    });\n\n    if (grid.cellScrollModel.row % 2) {\n      cellContainerBR.className = GRID_CELL_CONTAINER_BASE_CLASS + ' odds';\n      cellContainerBL.className = GRID_CELL_CONTAINER_BASE_CLASS + ' odds';\n    } else {\n      doToAllCellContainers((cellContainer) => {\n        cellContainer.className = GRID_CELL_CONTAINER_BASE_CLASS;\n      });\n\n    }\n  }\n\n  function clearCellContainer(cellContainer: HTMLElement) {\n    while (cellContainer.firstChild) {\n      cellContainer.removeChild(cellContainer.firstChild);\n    }\n  }\n\n  function doToAllCellContainers(fn: (container: HTMLElement) => void) {\n    fn(cellContainerTL);\n    fn(cellContainerTR);\n    fn(cellContainerBL);\n    fn(cellContainerBR);\n  }\n\n  function getCellContainer(r: number, c: number) {\n    const fixedRow = r < grid.rowModel.numFixed();\n    const fixedCol = c < grid.colModel.numFixed();\n    if (fixedRow && fixedCol) {\n      return cellContainerTL;\n    } else if (fixedRow) {\n      return cellContainerTR;\n    } else if (fixedCol) {\n      return cellContainerBL;\n    }\n    return cellContainerBR;\n  }\n\n  function buildRow(r: number) {\n    const row = document.createElement('div');\n    row.setAttribute('class', 'grid-row');\n    row.setAttribute('dts', 'grid-row');\n    row.style.position = 'absolute';\n    row.style.left = '0';\n    if (r < grid.rowModel.numHeaders()) {\n      row.classList.add('grid-is-header');\n    }\n    return row;\n  }\n\n  function buildCells() {\n\n    doToAllCellContainers(clearCellContainer);\n\n    cells = [];\n    rows.fixed = [];\n    rows.nonFixed = [];\n    let row: HTMLElement;\n    grid.viewPort.iterateCells((r, c) => {\n      if (c === 0) {\n        cells[r] = [];\n      }\n      if (c === grid.colModel.numFixed()) {\n        row = rows.nonFixed[r] = buildRow(r);\n      } else if (c === 0) {\n        row = rows.fixed[r] = buildRow(r);\n      }\n      const cell = buildDivCell();\n      cells[r][c] = cell;\n      row.appendChild(cell);\n      getCellContainer(r, c).appendChild(row);\n    });\n  }\n\n  function buildDivCell() {\n    const cell = document.createElement('div');\n    cell.setAttribute('dts', 'grid-cell');\n    const style = cell.style;\n    style.position = 'absolute';\n    style.boxSizing = 'border-box';\n    style.top = '0px';\n    style.bottom = '0px';\n    return cell;\n  }\n\n  /* END CELL LOGIC */\n\n  /* COL BUILDER LOGIC */\n\n  function destroyRenderedElems(oldElems?: Array<HTMLElement | undefined>) {\n    if (!oldElems) {\n      return;\n    }\n    oldElems.forEach((oldElem) => {\n      if (!oldElem) {\n        return;\n      }\n      const destroyEvent = customEvent('grid-rendered-elem-destroy', true);\n      oldElem.dispatchEvent(destroyEvent);\n    });\n  }\n\n  function buildCols() {\n    builtCols = buildDimension(grid.cols, grid.rows, builtCols, (viewCol, viewRow, previousElement) => ({\n      viewRow,\n      viewCol,\n      previousElement\n    }));\n  }\n  /* END COL BUILDER LOGIC */\n\n  /* ROW BUILDER LOGIC\n   *  for now we only build headers\n   * */\n\n  function buildRows() {\n    builtRows = buildDimension(grid.rows, grid.cols, builtRows, (viewRow, viewCol, previousElement) => ({\n      viewRow,\n      viewCol,\n      previousElement\n    }));\n  }\n\n  function buildDimension(\n    dimension: IGridDimension,\n    crossDimension: IGridDimension,\n    previouslyBuiltElems: IBuiltElementMap | undefined,\n    getRenderContext: (dimPos: number, crossDimPos: number, elem: HTMLElement | undefined) => IBuilderRenderContext,\n  ) {\n    const builtElems: IBuiltElementMap = {};\n    for (let i = 0; i < dimension.rowColModel.length(true); i++) {\n      const builder = dimension.rowColModel.get(i).builder;\n      const oldElems = previouslyBuiltElems && previouslyBuiltElems[i];\n\n      if (builder) {\n        builtElems[i] = [];\n        destroyRenderedElems(oldElems);\n        for (let realI = 0; realI < crossDimension.viewPort.count; realI++) {\n          builtElems[i][realI] = builder.render(\n            getRenderContext(dimension.converters.virtual.toView(i), realI, oldElems && oldElems[realI])\n          );\n        }\n      }\n    }\n    return builtElems;\n  }\n  /* END ROW BUILDER LOGIC*/\n\n  /* DECORATOR LOGIC */\n  function setPosition(boundingBox: HTMLElement, top: number, left: number, height: number, width: number): false | void {\n    const style = boundingBox.style;\n    if (height <= 0 || width <= 0) {\n      style.display = 'none';\n      return false;\n    }\n    style.display = '';\n    style.top = top + 'px';\n    style.left = left + 'px';\n    style.height = height + 'px';\n    style.width = width + 'px';\n    style.position = 'absolute';\n  }\n\n  function positionDecorator(bounding: HTMLElement, t: number, l: number, h: number, w: number) {\n    return setPosition(bounding, t, l, util.clamp(h, 0, grid.viewPort.height), util.clamp(w, 0, grid.viewPort.width));\n  }\n\n  function positionCellDecoratorFromViewCellRange(realCellRange: RawPositionRange, boundingBox: HTMLElement) {\n    const realPxRange = grid.viewPort.toPx(realCellRange);\n    return positionDecorator(\n      boundingBox,\n      realPxRange.top,\n      realPxRange.left,\n      realPxRange.height && realPxRange.height + getBorderWidth(),\n      realPxRange.width && realPxRange.width + getBorderWidth()\n    );\n  }\n\n  function createRangeForDescriptor(descriptor: IViewLayerDecorator) {\n    const range = {\n      top: descriptor.top,\n      left: descriptor.left,\n      height: descriptor.height,\n      width: descriptor.width\n    };\n    if (descriptor.space === 'data' && descriptor.units === 'cell') {\n      range.top += grid.rowModel.numHeaders();\n      range.left += grid.colModel.numHeaders();\n    }\n    return range;\n  }\n\n  function drawDecorators(cellsPositionOrSizeChanged: boolean) {\n    const aliveDecorators = grid.decorators.getAlive();\n    aliveDecorators.forEach((decorator: IViewLayerDecorator) => {\n\n      const hasBeenRendered = !!decorator.boundingBox;\n      const boundingBox = decorator.boundingBox || document.createElement('div');\n      if (!hasBeenRendered) {\n        boundingBox.style.pointerEvents = 'none';\n        decorator.boundingBox = boundingBox;\n        const decElement = decorator.render();\n        if (decElement) {\n          boundingBox.appendChild(decElement);\n        }\n      }\n\n      if (decorator.isDirty() || cellsPositionOrSizeChanged || !hasBeenRendered) {\n\n        let vCol = decorator.left;\n        let vRow = decorator.top;\n        if (decorator.space === 'real') {\n          vCol = grid.view.col.toVirtual(vCol);\n          vRow = grid.view.row.toVirtual(vRow);\n          switch (decorator.units) {\n            case 'px':\n              positionDecorator(boundingBox, decorator.top, decorator.left, decorator.height, decorator.width);\n              break;\n            case 'cell':\n              positionCellDecoratorFromViewCellRange(decorator, boundingBox);\n              break;\n          }\n        } else if (decorator.space === 'virtual' || decorator.space === 'data') {\n          if (decorator.space === 'data') {\n            vCol = grid.data.col.toVirtual(vCol);\n            vRow = grid.data.row.toVirtual(vRow);\n          }\n          switch (decorator.units) {\n            case 'px':\n              break;\n            case 'cell':\n            /* jshint -W086 */\n            default:\n              const range = createRangeForDescriptor(decorator);\n              const realCellRange = grid.viewPort.intersect(range);\n              if (realCellRange) {\n                positionCellDecoratorFromViewCellRange(realCellRange, boundingBox);\n              } else {\n                positionDecorator(boundingBox, -1, -1, -1, -1);\n              }\n              break;\n            /* jshint +W086 */\n          }\n        }\n\n        const parent = boundingBox.parentElement;\n        if (parent) {\n          parent.removeChild(boundingBox);\n        }\n        const fixedRow = vRow < grid.rowModel.numFixed();\n        const fixedCol = vCol < grid.colModel.numFixed();\n        if (fixedRow && fixedCol) {\n          decorator.scrollHorz = false;\n          decorator.scrollVert = false;\n          decoratorContainerTL.appendChild(boundingBox);\n        } else if (fixedRow) {\n          decorator.scrollHorz = true;\n          decorator.scrollVert = false;\n          decoratorContainerTR.appendChild(boundingBox);\n        } else if (fixedCol) {\n          decorator.scrollHorz = false;\n          decorator.scrollVert = true;\n          decoratorContainerBL.appendChild(boundingBox);\n        } else {\n          decorator.scrollHorz = true;\n          decorator.scrollVert = true;\n          decoratorContainerBR.appendChild(boundingBox);\n        }\n      }\n    });\n\n    removeDecorators(grid.decorators.popAllDead());\n  }\n\n  function removeDecorators(decorators: IDecorator[]) {\n    decorators.forEach((decorator) => {\n      if (!decorator) {\n        return;\n      }\n      const boundingBox = decorator.boundingBox;\n      if (boundingBox) {\n        // if they rendered an element previously we attached it to the bounding box as the only child\n        const renderedElement = boundingBox.firstChild;\n        if (renderedElement) {\n          // create a destroy dom event that bubbles\n          const destroyEvent = customEvent('decorator-destroy', true);\n          renderedElement.dispatchEvent(destroyEvent);\n        }\n        const parent = boundingBox.parentElement;\n        if (parent) {\n          parent.removeChild(boundingBox);\n        }\n        decorator.boundingBox = undefined;\n      }\n    });\n  }\n\n  /* END DECORATOR LOGIC */\n\n  /* CELL CLASSES LOGIC */\n  function drawCellClasses() {\n    grid.viewPort.iterateCells((r, c) => {\n      const classes = grid.cellClasses.getCachedClasses(grid.view.row.toVirtual(r), grid.view.col.toVirtual(c));\n      cells[r][c].className = classes.join(' ');\n    });\n  }\n\n  /* END CELL CLASSES LOGIC*/\n\n  function destroyPreviouslyBuilt(built: IBuiltElementMap) {\n    if (!built) {\n      return;\n    }\n    Object.keys(built).forEach((key) => {\n      destroyRenderedElems(built[key]);\n    });\n  }\n\n  function cleanup() {\n    removeDecorators(grid.decorators.getAlive().concat(grid.decorators.popAllDead()));\n    destroyPreviouslyBuilt(builtCols);\n    destroyPreviouslyBuilt(builtRows);\n    if (!container) {\n      return;\n    }\n    const gridViewRoots = container.querySelectorAll('.' + GRID_VIEW_ROOT_CLASS);\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < gridViewRoots.length; ++i) {\n      container.removeChild(gridViewRoots[i]);\n    }\n  }\n\n  function isTargetInElem(target: EventTarget | undefined, elem: HTMLElement | undefined) {\n    if (!target || !targetIsElement(target)) {\n      return false;\n    }\n    let t: Element | null = target;\n    while (t && !t.classList.contains('grid-container')) {\n      if (t === elem) {\n        return true;\n      }\n      t = t.parentElement;\n    }\n    return false;\n  }\n\n  grid.eventLoop.bind('grid-destroy', () => {\n    cleanup();\n    if (drawRequestedId) {\n      cancelAnimationFrame(drawRequestedId);\n    }\n    viewLayer.draw = () => { /* noop */ };\n  });\n\n  return viewLayer;\n}\n\nexport default create;","import { Grid, IGridDimension } from '../core';\nimport debounce, { IDebounceFunction } from '../debounce';\nimport makeDirtyClean from '../dirty-clean';\nimport addDirtyProps from '../dirty-props';\nimport {\n    RawPositionRange,\n} from '../position-range';\nimport * as rangeUtil from '../range-util';\nimport * as util from '../util';\n\nexport interface IViewPort {\n    rowInfo: IViewPortDimensionInfo;\n    colInfo: IViewPortDimensionInfo;\n    _onResize: IDebounceFunction;\n    shortDebouncedResize: IDebounceFunction;\n\n    // BEGIN: methods / properties proxied to a dimension impl\n    rows: IViewPortDimensionInfo['count'];\n    cols: IViewPortDimensionInfo['count'];\n    top: IViewPortDimensionInfo['clientPx']['start'];\n    left: IViewPortDimensionInfo['clientPx']['start'];\n    width: IViewPortDimensionInfo['size'];\n    height: IViewPortDimensionInfo['size'];\n    toGridX: IViewPortDimensionInfo['clientPx']['toGrid'];\n    toGridY: IViewPortDimensionInfo['clientPx']['toGrid'];\n    toVirtualRow: IViewPortDimensionInfo['toVirtual'];\n    toVirtualCol: IViewPortDimensionInfo['toVirtual'];\n    rowIsInView: IViewPortDimensionInfo['isInView'];\n    colIsInView: IViewPortDimensionInfo['isInView'];\n    toRealRow: IViewPortDimensionInfo['toReal'];\n    toRealCol: IViewPortDimensionInfo['toReal'];\n    clampRow: IViewPortDimensionInfo['clampCell'];\n    clampCol: IViewPortDimensionInfo['clampCell'];\n    clampY: IViewPortDimensionInfo['clampPx'];\n    clampX: IViewPortDimensionInfo['clampPx'];\n    getRowTop: IViewPortDimensionInfo['toPx'];\n    getColLeft: IViewPortDimensionInfo['toPx'];\n    getVirtualRowByTop: IViewPortDimensionInfo['toVirtualFromPx'];\n    getVirtualColByLeft: IViewPortDimensionInfo['toVirtualFromPx'];\n    getRowByTop: IViewPortDimensionInfo['toViewFromPx'];\n    getColByLeft: IViewPortDimensionInfo['toViewFromPx'];\n    getRowHeight: IViewPortDimensionInfo['sizeOf'];\n    getColWidth: IViewPortDimensionInfo['sizeOf'];\n    // END: methods / properties proxied to a dimension impl\n\n    isDirty(): boolean;\n    sizeToContainer(elem: HTMLElement): void;\n    _resize(): void;\n    toPx(realCellRange: RawPositionRange): RawPositionRange;\n    intersect(range: RawPositionRange): RawPositionRange | null;\n    iterateCells(\n        cellFn: (r: number, c: number) => void,\n        rowFn?: (r: number) => void,\n        optionalMaxRow?: number,\n        optionalMaxCol?: number\n    ): void;\n}\n\nexport interface IViewPortDimensionInfo {\n    count: number;\n    size: number;\n    clientPx: {\n        start: number;\n        toGrid(clientPx: number): number;\n    };\n    _numFixed: number;\n    _getLengthBetweenCoords(s: number, e: number, inclusive?: boolean): number;\n    isInView(virtualCoord: number): boolean;\n    toVirtual(viewCoord: number): number;\n    toReal(virtualCoord: number): number;\n    clampCell(coord: number): number;\n    clampPx(px: number): number;\n    toPx(coord: number): number;\n    toVirtualFromPx(px: number): number;\n    toViewFromPx(px: number): number;\n    sizeOf(viewCoord: number): number;\n    totalSize(): number;\n    updateSize(newSize: number): boolean;\n    intersect(intersection: RawPositionRange, range: RawPositionRange): RawPositionRange | null;\n}\n\nexport function create(grid: Grid) {\n    const dirtyClean = makeDirtyClean(grid);\n    let container: HTMLElement | undefined;\n\n    // these probably trigger reflow so we may need to think about caching the value and updating it at on draws or something\n    function getFirstClientRect() {\n        return container && container.getClientRects && container.getClientRects()[0];\n    }\n\n    function makeDimension(\n        gridDimension: IGridDimension\n    ) {\n        function getVirtualRowColUnsafe(coord: number) {\n            // could cache this on changes i.e. row-change or col-change events\n            const numFixed = viewDimension._numFixed;\n            if (coord < numFixed) {\n                return coord;\n            }\n            return coord + gridDimension.cellScroll.position;\n        }\n\n        function getLengthBetweenViewCoords(\n            startCoord: number,\n            endCoord: number,\n            inclusive?: boolean\n        ) {\n            const toVirtual = viewDimension.toVirtual;\n            const lengthFn = gridDimension.virtualPixelCell.sizeOf;\n            const clampFn = viewDimension.clampCell;\n            let pos = 0;\n            const numFixed = viewDimension._numFixed;\n            const isInNonfixedArea = endCoord >= numFixed;\n            const isInFixedArea = startCoord < numFixed;\n            const exclusiveOffset = (inclusive ? 0 : 1);\n            if (isInFixedArea) {\n                const fixedEndCoord = (isInNonfixedArea ? numFixed - 1 : endCoord - exclusiveOffset);\n                pos += lengthFn(startCoord, fixedEndCoord);\n            }\n            if (isInNonfixedArea) {\n                const startOfNonFixed = isInFixedArea ? toVirtual(numFixed) : toVirtual(startCoord);\n                pos += lengthFn(startOfNonFixed, toVirtual(clampFn(endCoord)) - exclusiveOffset);\n            }\n            return pos;\n        }\n\n        function getRowOrColFromPosition(pos: number, returnVirtual?: boolean) {\n            // we could do this slighly faster with binary search to get log(n) instead of n,\n            // but will only do it if we actually need to optimize this\n            const viewMax = viewDimension.count;\n            const toVirtual = viewDimension.toVirtual;\n            const lengthFn = gridDimension.virtualPixelCell.sizeOf;\n            const fixedSize = gridDimension.virtualPixelCell.fixedSize();\n            let summedLength = grid.viewLayer.getBorderWidth() + (pos <= fixedSize ? 0 : gridDimension.pixelScroll.offset);\n            for (let i = 0; i < viewMax; i++) {\n                const virtual = toVirtual(i);\n                const length = lengthFn(virtual);\n                const newSum = summedLength + length;\n                if (newSum >= pos) {\n                    return returnVirtual ? virtual : i;\n                }\n                summedLength = newSum;\n            }\n            return NaN;\n        }\n\n        function calculateMaxLengths(totalLength: number) {\n            const lengthMethod = gridDimension.virtualPixelCell.sizeOf;\n            const numFixed = gridDimension.rowColModel.numFixed();\n            let windowLength = 0;\n            let maxSize = 0;\n            let fixedLength = 0;\n            let windowStartIndex = numFixed;\n\n            for (let fixed = 0; fixed < numFixed; fixed++) {\n                fixedLength += lengthMethod(fixed);\n            }\n\n            let maxLength = 0;\n            for (let index = numFixed; index < gridDimension.rowColModel.length(true); index++) {\n                const lengthOfIindex = lengthMethod(index);\n                if (lengthOfIindex > maxLength) {\n                    maxLength = lengthOfIindex;\n                }\n            }\n            totalLength += maxLength;\n\n            // it might be safer to actually sum the lengths in the virtualPixelCellModel but for now here is ok\n            for (let index = numFixed; index < gridDimension.rowColModel.length(true); index++) {\n                const lengthOfIindex = lengthMethod(index);\n                windowLength += lengthOfIindex;\n                while (windowLength + fixedLength > totalLength && windowStartIndex < index) {\n                    windowLength -= lengthMethod(windowStartIndex);\n                    windowStartIndex++;\n                }\n                const windowSize = index - windowStartIndex + 1; // add the one because we want the last index that didn't fit\n                if (windowSize > maxSize) {\n                    maxSize = windowSize;\n                }\n\n            }\n            return Math.min(maxSize + numFixed + 1, gridDimension.rowColModel.length(true));\n        }\n\n        const viewDimension: IViewPortDimensionInfo = addDirtyProps({\n            count: 0,\n            size: 0,\n            clientPx: {\n                get start() {\n                    const clientRect = getFirstClientRect();\n                    return clientRect && gridDimension.positionRange.getPosition(clientRect) || 0;\n                },\n                toGrid(clientPx: number) {\n                    return clientPx - viewDimension.clientPx.start;\n                }\n            },\n            _numFixed: 0,\n            isInView(virtualCoord: number) {\n                const realRow = viewDimension.toReal(virtualCoord);\n                return !isNaN(realRow) &&\n                    getLengthBetweenViewCoords(0, realRow, true) < viewDimension.totalSize();\n            },\n            toVirtual(viewCoord: number) {\n                const virtualRowCol = getVirtualRowColUnsafe(viewCoord);\n                return gridDimension.virtualPixelCell.clampCell(virtualRowCol);\n            },\n            toReal(virtualCoord: number) {\n                const numFixed = viewDimension._numFixed;\n                if (virtualCoord < numFixed) {\n                    return virtualCoord;\n                }\n                const maxViewPortIndex = viewDimension.count - 1;\n                return util.clamp(virtualCoord - gridDimension.cellScroll.position, numFixed, maxViewPortIndex, true);\n            },\n            clampCell(coord: number) {\n                return util.clamp(coord, 0, viewDimension.count - 1);\n            },\n            clampPx(px: number) {\n                return util.clamp(px, 0, viewDimension.totalSize());\n            },\n            toPx(coord: number) {\n                return getLengthBetweenViewCoords(0, coord);\n            },\n            toVirtualFromPx(px: number) {\n                return getRowOrColFromPosition(px, true);\n            },\n            toViewFromPx(px: number) {\n                return getRowOrColFromPosition(px);\n            },\n            sizeOf(viewCoord: number) {\n                return gridDimension.virtualPixelCell.sizeOf(viewDimension.toVirtual(viewDimension.clampCell(viewCoord)));\n            },\n            totalSize() {\n                return viewDimension.size;\n            },\n            // TODO: based on looking at the code i think range can sometimes be Partial, def worth checking for npes\n            intersect(intersection: RawPositionRange, range: RawPositionRange) {\n                const numFixed = viewDimension._numFixed;\n                const fixedRange = [0, numFixed];\n\n                const virtualRange = [gridDimension.positionRange.getPosition(range), gridDimension.positionRange.getSize(range)];\n                const fixedIntersection = rangeUtil.intersect(fixedRange, virtualRange);\n                const scrollRange = [numFixed, viewDimension.count - numFixed];\n                virtualRange[0] -= gridDimension.cellScroll.position;\n                const scrollIntersection = rangeUtil.intersect(scrollRange, virtualRange);\n                const resultRange = rangeUtil.union(fixedIntersection, scrollIntersection);\n                if (!resultRange) {\n                    return null;\n                }\n\n                gridDimension.positionRange.setPosition(intersection, resultRange[0]);\n                gridDimension.positionRange.setSize(intersection, resultRange[1]);\n                return intersection;\n            },\n            updateSize(newSize: number) {\n                const oldSize = viewDimension.size;\n                viewDimension.size = newSize;\n                viewDimension.count = calculateMaxLengths(newSize);\n                return oldSize !== newSize;\n            },\n            _getLengthBetweenCoords: getLengthBetweenViewCoords\n        }, ['count', 'size'], [dirtyClean]);\n        return viewDimension;\n    }\n\n    const dimensions = {\n        rowInfo: makeDimension(grid.rows),\n        colInfo: makeDimension(grid.cols)\n    };\n\n    const viewPort: IViewPort = {\n        _onResize: debounce(() => {\n            viewPort._resize();\n        }, 200),\n        shortDebouncedResize: debounce(() => {\n            viewPort._resize();\n        }, 1),\n        isDirty: dirtyClean.isDirty,\n\n        sizeToContainer(elem: HTMLElement) {\n            container = elem;\n            const isHeightChange = viewPort.rowInfo.updateSize(elem.offsetHeight);\n            const isWidthChange = viewPort.colInfo.updateSize(elem.offsetWidth);\n            const event = {\n                type: 'grid-viewport-change',\n                isWidthChange,\n                isHeightChange,\n                isSizeChange: isWidthChange || isHeightChange,\n            };\n            grid.eventLoop.fire(event);\n        },\n        _resize() {\n            if (container) {\n                viewPort.sizeToContainer(container);\n            }\n        },\n        toPx(realCellRange: RawPositionRange) {\n            return {\n                top: viewPort.getRowTop(realCellRange.top),\n                left: viewPort.getColLeft(realCellRange.left),\n                height: viewPort.rowInfo._getLengthBetweenCoords(realCellRange.top, realCellRange.top + realCellRange.height - 1, true),\n                width: viewPort.colInfo._getLengthBetweenCoords(realCellRange.left, realCellRange.left + realCellRange.width - 1, true)\n            };\n        },\n        intersect(range: RawPositionRange) {\n            // assume virtual cells for now\n            const intersection = viewPort.rowInfo.intersect({} as any, range);\n            if (!intersection) {\n                return null;\n            }\n            return viewPort.colInfo.intersect(intersection, range);\n        },\n        iterateCells(\n            cellFn: (r: number, c: number) => void,\n            rowFn?: (r: number) => void,\n            maxRow: number = Infinity,\n            maxCol: number = Infinity\n        ) {\n            for (let r = 0; r < Math.min(viewPort.rows, maxRow); r++) {\n                if (rowFn) {\n                    rowFn(r);\n                }\n                if (cellFn) {\n                    for (let c = 0; c < Math.min(viewPort.cols, maxCol); c++) {\n                        cellFn(r, c);\n\n                    }\n                }\n            }\n        },\n        // BEGIN: proxy to dimension\n        get rows() {\n            return dimensions.rowInfo.count;\n        },\n        set rows(r: number) {\n            dimensions.rowInfo.count = r;\n        },\n        get cols() {\n            return dimensions.colInfo.count;\n        },\n        set cols(c: number) {\n            dimensions.colInfo.count = c;\n        },\n        get height() {\n            return dimensions.rowInfo.size;\n        },\n        set height(s: number) {\n            dimensions.rowInfo.size = s;\n        },\n        get width() {\n            return dimensions.colInfo.size;\n        },\n        set width(s: number) {\n            dimensions.colInfo.size = s;\n        },\n        get top() {\n            return dimensions.rowInfo.clientPx.start;\n        },\n        get left() {\n            return dimensions.colInfo.clientPx.start;\n        },\n        toGridY: dimensions.rowInfo.clientPx.toGrid,\n        toGridX: dimensions.colInfo.clientPx.toGrid,\n        toVirtualRow: dimensions.rowInfo.toVirtual,\n        toVirtualCol: dimensions.colInfo.toVirtual,\n        rowIsInView: dimensions.rowInfo.isInView,\n        colIsInView: dimensions.colInfo.isInView,\n        toRealRow: dimensions.rowInfo.toReal,\n        toRealCol: dimensions.colInfo.toReal,\n        clampRow: dimensions.rowInfo.clampCell,\n        clampCol: dimensions.colInfo.clampCell,\n        clampY: dimensions.rowInfo.clampPx,\n        clampX: dimensions.colInfo.clampPx,\n        getRowTop: dimensions.rowInfo.toPx,\n        getColLeft: dimensions.colInfo.toPx,\n        getVirtualRowByTop: dimensions.rowInfo.toVirtualFromPx,\n        getVirtualColByLeft: dimensions.colInfo.toVirtualFromPx,\n        getRowByTop: dimensions.rowInfo.toViewFromPx,\n        getColByLeft: dimensions.colInfo.toViewFromPx,\n        getRowHeight: dimensions.rowInfo.sizeOf,\n        getColWidth: dimensions.colInfo.sizeOf,\n        // END: proxy to dimension\n        rowInfo: dimensions.rowInfo,\n        colInfo: dimensions.colInfo,\n    };\n\n    grid.eventLoop.bind('grid-destroy', () => {\n        viewPort._onResize.cancel();\n        viewPort.shortDebouncedResize.cancel();\n    });\n\n    grid.eventLoop.bind(window, 'resize', () => {\n        // we don't bind the handler directly so that tests can mock it out\n        viewPort._onResize();\n    });\n\n    grid.eventLoop.bind('grid-row-change', () => {\n        viewPort.rowInfo._numFixed = grid.rowModel.numFixed();\n        viewPort.shortDebouncedResize();\n    });\n\n    grid.eventLoop.bind('grid-col-change', () => {\n        viewPort.colInfo._numFixed = grid.colModel.numFixed();\n        viewPort.shortDebouncedResize();\n    });\n\n    return viewPort;\n}\n\nexport default create;","import { Grid, IGridDimension } from '../core';\nimport * as  util from '../util';\n\n// all pixels are assumed to be in the virtual world, no real world pixels are dealt with here :)\nexport interface IVirtualPixelCellDimensionInfo {\n    toCellFromPx(px: number): number;\n    clampCell(cell: number): number;\n    sizeOf(startCell: number, endCell?: number): number;\n    totalSize(): number;\n    fixedSize(): number;\n}\n\nexport interface IVirtualPixelCellModel {\n    rows: IVirtualPixelCellDimensionInfo;\n    cols: IVirtualPixelCellDimensionInfo;\n    getRow: IVirtualPixelCellDimensionInfo['toCellFromPx'];\n    getCol: IVirtualPixelCellDimensionInfo['toCellFromPx'];\n    clampRow: IVirtualPixelCellDimensionInfo['clampCell'];\n    clampCol: IVirtualPixelCellDimensionInfo['clampCell'];\n    height: IVirtualPixelCellDimensionInfo['sizeOf'];\n    width: IVirtualPixelCellDimensionInfo['sizeOf'];\n    totalWidth: IVirtualPixelCellDimensionInfo['totalSize'];\n    totalHeight: IVirtualPixelCellDimensionInfo['totalSize'];\n    fixedWidth: IVirtualPixelCellDimensionInfo['fixedSize'];\n    fixedHeight: IVirtualPixelCellDimensionInfo['fixedSize'];\n}\n\nfunction makeDimension(gridDimension: IGridDimension) {\n    const dimension: IVirtualPixelCellDimensionInfo = {\n        toCellFromPx(px: number) {\n            if (px < 0) {\n                return NaN;\n            }\n            let sumLength = 0;\n            for (let r = 0; r < gridDimension.rowColModel.length(true); r++) {\n                sumLength += gridDimension.rowColModel.sizeOf(r);\n                if (px < sumLength) {\n                    return r;\n                }\n            }\n            return NaN;\n        },\n        clampCell(cell: number) {\n            const maxRowCol = gridDimension.rowColModel.length(true) - 1;\n            return util.clamp(cell, 0, maxRowCol);\n        },\n        sizeOf(start: number, end?: number) {\n            let length = 0;\n            if (end != undefined && end < start) {\n                return 0;\n            }\n            end = util.isNumber(end) ? end : start;\n            end = dimension.clampCell(end);\n            start = dimension.clampCell(start);\n            for (let i = start; i <= end; i++) {\n                length += gridDimension.rowColModel.sizeOf(i);\n            }\n            return length;\n        },\n        totalSize() {\n            return dimension.sizeOf(0, gridDimension.rowColModel.length(true) - 1);\n        },\n        fixedSize() {\n            return dimension.sizeOf(0, gridDimension.rowColModel.numFixed() - 1);\n        },\n    };\n    return dimension;\n}\n\nexport function create(grid: Grid) {\n\n    const dimensions = {\n        rows: makeDimension(grid.rows),\n        cols: makeDimension(grid.cols),\n    };\n    const virtualPixelCellModel: IVirtualPixelCellModel = {\n        getRow: dimensions.rows.toCellFromPx,\n        getCol: dimensions.cols.toCellFromPx,\n        clampRow: dimensions.rows.clampCell,\n        clampCol: dimensions.cols.clampCell,\n        height: dimensions.rows.sizeOf,\n        width: dimensions.cols.sizeOf,\n        totalHeight: dimensions.rows.totalSize,\n        totalWidth: dimensions.cols.totalSize,\n        fixedHeight: dimensions.rows.fixedSize,\n        fixedWidth: dimensions.cols.fixedSize,\n        rows: dimensions.rows,\n        cols: dimensions.cols,\n    };\n\n    function sizeChangeListener() {\n        // for now we don't cache anything about this so we just notify\n        grid.eventLoop.fire('grid-virtual-pixel-cell-change');\n    }\n\n    grid.eventLoop.bind('grid-col-change', sizeChangeListener);\n    grid.eventLoop.bind('grid-row-change', sizeChangeListener);\n\n    return virtualPixelCellModel;\n}\n\nexport default create;","require('es6-object-assign').polyfill();\n\nimport { IAbstractRowColModel, IColDescriptor, IRowDescriptor } from '../abstract-row-col-model';\nimport creatCellClasses, { ICellClasses } from '../cell-classes';\nimport createCellKeyboardModel, { ICellKeyboardModel } from '../cell-keyboard-model';\nimport cellMouseModel, { ICellMouseModel, IEventDimensionInfoGetter } from '../cell-mouse-model';\nimport createCellScrollModel, { ICellScrollModel } from '../cell-scroll-model';\nimport createColModel, { ColModel } from '../col-model';\nimport createColReorder, { IColReorder } from '../col-reorder';\nimport createColResize, { IColResize } from '../col-resize';\nimport createCopyPaste, { ICopyPaste } from '../copy-paste';\nimport { IDataModel } from '../data-model';\nimport createDataModel, { RowLoader } from '../data-model';\nimport createDecorators, { IDecoratorModel } from '../decorators';\nimport makeDirtyClean from '../dirty-clean';\nimport createEditModel, { IEditModel } from '../edit-model';\nimport createEventLoop, { EventLoop, EventUnion } from '../event-loop';\nimport createFps, { IFps } from '../fps';\nimport createNavigationModel, { INavigationModel } from '../navigation-model';\nimport createPixelScrollModel, { IPixelScrollDimensionInfo, IPixelScrollModel } from '../pixel-scroll-model';\nimport { colPositionRangeDimension, IPositionRangeDimension, rowPositionRangeDimension } from '../position-range';\nimport createRowModel, { RowModel } from '../row-model';\nimport createShowHiddenCols, { IShowHiddenCols } from '../show-hidden-cols';\nimport { AbstractSpaceConverter } from '../space/converter';\nimport { DataSpaceConverter } from '../space/data-space-converter';\nimport { AbstractDimensionalSpaceConverter } from '../space/dimensional-converter';\nimport { ViewSpaceConverter } from '../space/view-space-converter';\nimport { VirtualSpaceConverter } from '../space/virtual-space-converter';\nimport * as util from '../util';\nimport createViewLayer, { IViewLayer } from '../view-layer';\nimport createViewPort, { IViewPort, IViewPortDimensionInfo } from '../view-port';\nimport createVirtualPixelCellModel, { IVirtualPixelCellDimensionInfo, IVirtualPixelCellModel } from '../virtual-pixel-cell-model';\n\nconst escapeStack = require('escape-stack');\nconst elementClass = require('element-class');\n\nexport interface IGridOpts {\n  snapToCell?: boolean;\n  allowEdit?: boolean;\n  loadRows?: RowLoader;\n  col?: {\n    disableReorder?: boolean;\n    disableResize?: boolean;\n  };\n}\n\nexport type EscapeStackHandler = () => boolean | void;\nexport type EscapeStackRemover = () => void;\n\nexport interface IEscapeStack {\n  add: (handler: EscapeStackHandler) => EscapeStackRemover;\n}\n\nexport interface IGridDimension {\n  rowColModel: IAbstractRowColModel;\n  viewPort: IViewPortDimensionInfo;\n  pixelScroll: IPixelScrollDimensionInfo;\n  cellScroll: ICellScrollDimensionInfo;\n  positionRange: IPositionRangeDimension;\n  cellMouse: IEventDimensionInfoGetter;\n  virtualPixelCell: IVirtualPixelCellDimensionInfo;\n  converters: {\n    virtual: AbstractDimensionalSpaceConverter<IRowDescriptor | IColDescriptor>;\n    view: AbstractDimensionalSpaceConverter<IRowDescriptor | IColDescriptor>;\n    data: AbstractDimensionalSpaceConverter<IRowDescriptor | IColDescriptor>;\n  };\n}\n\nexport interface ICellScrollDimensionInfo {\n  position: number;\n}\n\nexport interface IGridCore {\n  opts: IGridOpts;\n  escapeStack: IEscapeStack;\n  focused: boolean;\n  destroyed: boolean;\n  container?: HTMLElement;\n  textarea: HTMLTextAreaElement;\n  data: AbstractSpaceConverter;\n  virtual: AbstractSpaceConverter;\n  view: AbstractSpaceConverter;\n  timeout: (...args: Parameters<typeof window.setTimeout>) => number | undefined;\n  interval: (...args: Parameters<typeof window.setInterval>) => number | undefined;\n  requestDraw: () => void;\n  build: (container: HTMLElement) => void;\n  makeDirtyClean: () => any;\n  destroy: () => void;\n  eventIsOnCells: (e: EventUnion) => boolean;\n  rows: IGridDimension;\n  cols: IGridDimension;\n}\n\nexport interface IGridModels {\n  eventLoop: EventLoop;\n  decorators: IDecoratorModel;\n  cellClasses: ICellClasses;\n  rowModel: RowModel;\n  colModel: ColModel;\n  dataModel: IDataModel;\n  virtualPixelCellModel: IVirtualPixelCellModel;\n  cellScrollModel: ICellScrollModel;\n  cellMouseModel: ICellMouseModel;\n  cellKeyboardModel: ICellKeyboardModel;\n  fps: IFps;\n  viewPort: IViewPort;\n  viewLayer: IViewLayer;\n  colReorder: IColReorder;\n  editModel: IEditModel;\n  navigationModel: INavigationModel;\n  pixelScrollModel: IPixelScrollModel;\n  showHiddenCols: IShowHiddenCols;\n  colResize: IColResize;\n  copyPaste: ICopyPaste;\n}\n\nexport type Grid = IGridCore & IGridModels;\nexport function create(opts: IGridOpts = {}): Grid {\n  const lazyGetterMap: { [key: string]: any } = {};\n\n  const lazyGetter = <T>(idx: string, getFn: () => T) => {\n    if (lazyGetterMap[idx] === undefined) {\n      lazyGetterMap[idx] = getFn();\n    }\n    return lazyGetterMap[idx] as T;\n  };\n  let userSuppliedEscapeStack: IEscapeStack;\n  let drawRequested = false;\n  const timeouts: number[] = [];\n  const intervals: number[] = [];\n  const gridCore: IGridCore = {\n    opts,\n    focused: false,\n    destroyed: false,\n    textarea: createFocusTextArea(),\n    get escapeStack(): IEscapeStack {\n      return userSuppliedEscapeStack || escapeStack(true);\n    },\n    set escapeStack(v: IEscapeStack) {\n      userSuppliedEscapeStack = v;\n    },\n    requestDraw: () => {\n      if (!grid.viewLayer || !grid.viewLayer.draw) {\n        return;\n      }\n      if (!grid.eventLoop.isRunning) {\n        grid.viewLayer.draw();\n      } else {\n        drawRequested = true;\n      }\n    },\n    get data() {\n      return lazyGetter('data', () => new DataSpaceConverter(grid));\n    },\n    get view() {\n      return lazyGetter('view', () => new ViewSpaceConverter(grid));\n    },\n    get virtual() {\n      return lazyGetter('virtual', () => new VirtualSpaceConverter(grid));\n    },\n    timeout() {\n      if (grid.destroyed) {\n        return undefined;\n      }\n      const id = window.setTimeout.apply(window, arguments);\n      timeouts.push(id);\n      return id;\n    },\n    interval() {\n      if (grid.destroyed) {\n        return undefined;\n      }\n      const id = window.setInterval.apply(window, arguments);\n      intervals.push(id);\n      return id;\n    },\n    build(container: HTMLElement) {\n      grid.container = container;\n      setupTextareaForContainer(grid.textarea, container);\n      grid.viewPort.sizeToContainer(container);\n      grid.viewLayer.build(container);\n      grid.eventLoop.setContainer(container);\n      container.style.overflow = 'hidden';\n      // the container should never actually scroll, but the browser does automatically sometimes so let's reset it when that happens\n      container.addEventListener('scroll', () => {\n        container.scrollTop = 0;\n        container.scrollLeft = 0;\n      });\n    },\n    makeDirtyClean() {\n      return makeDirtyClean(grid);\n    },\n    eventIsOnCells(e: EventUnion) {\n      return grid.viewLayer.eventIsOnCells(e);\n    },\n    destroy() {\n      grid.eventLoop.fire('grid-destroy');\n    },\n    rows: {\n      get rowColModel() {\n        return grid.rowModel;\n      },\n      get viewPort() {\n        return grid.viewPort.rowInfo;\n      },\n      get cellScroll() {\n        return grid.cellScrollModel.rowInfo;\n      },\n      get pixelScroll() {\n        return grid.pixelScrollModel.y;\n      },\n      get positionRange() {\n        return rowPositionRangeDimension;\n      },\n      get cellMouse() {\n        return grid.cellMouseModel.rowInfo;\n      },\n      get virtualPixelCell() {\n        return grid.virtualPixelCellModel.rows;\n      },\n      converters: {\n        get virtual() {\n          return gridCore.virtual.row;\n        },\n        get view() {\n          return gridCore.view.row;\n        },\n        get data() {\n          return gridCore.data.row;\n        },\n      }\n    },\n    cols: {\n      get rowColModel() {\n        return grid.colModel;\n      },\n      get viewPort() {\n        return grid.viewPort.colInfo;\n      },\n      get cellScroll() {\n        return grid.cellScrollModel.colInfo;\n      },\n      get pixelScroll() {\n        return grid.pixelScrollModel.x;\n      },\n      get positionRange() {\n        return colPositionRangeDimension;\n      },\n      get cellMouse() {\n        return grid.cellMouseModel.colInfo;\n      },\n      get virtualPixelCell() {\n        return grid.virtualPixelCellModel.cols;\n      },\n      converters: {\n        get virtual() {\n          return gridCore.virtual.col;\n        },\n        get view() {\n          return gridCore.view.col;\n        },\n        get data() {\n          return gridCore.data.col;\n        },\n      }\n    }\n  };\n\n  const grid: Grid = gridCore as any;\n\n  grid.eventLoop = createEventLoop();\n  grid.decorators = createDecorators(grid);\n  grid.cellClasses = creatCellClasses(grid);\n  grid.rowModel = createRowModel(grid);\n  grid.colModel = createColModel(grid);\n  grid.dataModel = createDataModel(grid, opts.loadRows);\n  grid.virtualPixelCellModel = createVirtualPixelCellModel(grid);\n  grid.cellScrollModel = createCellScrollModel(grid);\n  grid.cellMouseModel = cellMouseModel(grid);\n  grid.cellKeyboardModel = createCellKeyboardModel(grid);\n  grid.fps = createFps(grid);\n  grid.viewPort = createViewPort(grid);\n  grid.viewLayer = createViewLayer(grid);\n\n  if (!(opts.col && opts.col.disableReorder)) {\n    grid.colReorder = createColReorder(grid);\n  }\n\n  if (opts.allowEdit) {\n    grid.editModel = createEditModel(grid);\n  }\n\n  grid.navigationModel = createNavigationModel(grid);\n\n  grid.pixelScrollModel = createPixelScrollModel(grid);\n  grid.showHiddenCols = createShowHiddenCols(grid);\n\n  if (!(opts.col && opts.col.disableResize)) {\n    grid.colResize = createColResize(grid);\n  }\n  grid.copyPaste = createCopyPaste(grid);\n\n  // the order here matters because some of these depend on each other\n\n  // things with logic that also register decorators (slightly less core than the other models)\n\n  grid.eventLoop.addExitListener(() => {\n    if (drawRequested) {\n      grid.viewLayer.draw();\n    }\n  });\n\n  function setupTextareaForContainer(textarea: HTMLTextAreaElement, container: HTMLElement) {\n    textarea.addEventListener('focus', () => {\n      if (container) {\n        elementClass(container).add('focus');\n      }\n      textarea.select();\n      grid.focused = true;\n      grid.eventLoop.fire('grid-focus');\n    });\n\n    textarea.addEventListener('blur', () => {\n      if (container) {\n        elementClass(container).remove('focus');\n      }\n      grid.focused = false;\n      grid.eventLoop.fire('grid-blur');\n    });\n\n    let widthResetTimeout: number | undefined;\n    // TODO: type the interceptor properly\n    grid.eventLoop.addInterceptor((e: MouseEvent) => {\n      if (e.type !== 'mousedown' || e.button !== 2) {\n        return;\n      }\n      textarea.style.width = '100%';\n      textarea.style.height = '100%';\n      textarea.style.zIndex = '1';\n      if (widthResetTimeout) {\n        clearTimeout(widthResetTimeout);\n      }\n      widthResetTimeout = window.setTimeout(() => {\n        textarea.style.zIndex = '0';\n        textarea.style.width = '0px';\n        textarea.style.height = '1px';\n      }, 1);\n    });\n\n    container.appendChild(textarea);\n    if (!container.getAttribute('tabIndex')) {\n      container.tabIndex = -1;\n    }\n    container.addEventListener('focus', () => {\n      if (textarea) {\n        textarea.focus();\n      }\n    });\n  }\n\n  function createFocusTextArea() {\n    const textarea = document.createElement('textarea');\n    textarea.setAttribute('dts', 'grid-textarea');\n    util.position(textarea, 0, 0);\n    textarea.style.width = '0px';\n    textarea.style.height = '1px';\n    textarea.style.maxWidth = '100%';\n    textarea.style.maxHeight = '100%';\n    textarea.style.zIndex = '0';\n    textarea.style.overflow = 'hidden';\n\n    textarea.style.background = 'transparent';\n    textarea.style.color = 'transparent';\n    textarea.style.border = 'none';\n    textarea.style.boxShadow = 'none';\n    textarea.style.resize = 'none';\n    textarea.style.cursor = 'default';\n    textarea.classList.add('grid-textarea');\n    textarea.setAttribute('ondragstart', 'return false;');\n\n    return textarea;\n  }\n\n  grid.eventLoop.bind('grid-destroy', () => {\n    intervals.forEach((id) => {\n      clearInterval(id);\n    });\n\n    timeouts.forEach((id) => {\n      clearTimeout(id);\n    });\n  });\n\n  return grid;\n}\n\nexport default create;\n\nexport * from '../abstract-row-col-model';\nexport * from '../cell-classes';\nexport * from '../cell-keyboard-model';\nexport * from '../cell-mouse-model';\nexport * from '../cell-scroll-model';\nexport * from '../col-model';\nexport * from '../col-reorder';\nexport * from '../col-resize';\nexport * from '../copy-paste';\nexport * from '../data-model';\nexport * from '../data-model';\nexport * from '../decorators';\nexport * from '../dirty-clean';\nexport * from '../edit-model';\nexport * from '../event-loop';\nexport * from '../fps';\nexport * from '../navigation-model';\nexport * from '../pixel-scroll-model';\nexport * from '../position-range';\nexport * from '../row-model';\nexport * from '../show-hidden-cols';\nexport * from '../space/converter';\nexport * from '../space/data-space-converter';\nexport * from '../space/dimensional-converter';\nexport * from '../space/view-space-converter';\nexport * from '../space/virtual-space-converter';\nexport * from '../util';\nexport * from '../view-layer';\nexport * from '../view-port';\nexport * from '../virtual-pixel-cell-model';","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","/*\n A simple package for creating a list of listeners that can be added to and notified\n */\n\ntype Listener = (e: any) => void;\n\nexport function create() {\n    const listeners: Listener[] = [];\n    return {\n        // returns a removal function to unbind the listener\n        addListener(fn: Listener) {\n            listeners.push(fn);\n            return () => {\n                listeners.splice(listeners.indexOf(fn), 1);\n            };\n        },\n        notify(e: any) {\n            listeners.forEach((listener) => {\n                listener(e);\n            });\n        }\n    };\n}\n\nexport default create;","const EVENT_NAMES = ['mousewheel', 'wheel', 'DOMMouseScroll'];\n\ninterface IOldFFWheelEvent extends MouseWheelEvent {\n    axis: number;\n    detail: number;\n}\n\nconst api = {\n    getDelta(event: any, xaxis?: boolean) {\n        if (event.wheelDelta) { // for everything but firefox\n            let delta = event.wheelDeltaY;\n            if (xaxis) {\n                delta = event.wheelDeltaX;\n            }\n            return delta;\n\n        } else if (event.detail) { // for firefox pre version 17\n            const oldFFWheelEvent = event as IOldFFWheelEvent;\n            if (oldFFWheelEvent.axis && ((oldFFWheelEvent.axis === 1 && xaxis) || (oldFFWheelEvent.axis === 2 && !xaxis))) {\n                return -1 * oldFFWheelEvent.detail * 12;\n            }\n        } else if (event.deltaX || event.deltaY) {\n            if (xaxis) {\n                return -1 * event.deltaX;\n            } else {\n                return -1 * event.deltaY;\n            }\n        }\n        return 0;\n    },\n\n    // binds a cross browser normalized mousewheel event, and returns a function that will unbind the listener;\n    bind(elem: HTMLElement, listener: (e: any) => any) {\n        const normalizedListener = (e: any) => {\n            listener(normalizeWheelEvent(e));\n        };\n\n        EVENT_NAMES.forEach((name) => {\n            elem.addEventListener(name, normalizedListener);\n        });\n\n        return () => {\n            EVENT_NAMES.forEach((name) => {\n                elem.removeEventListener(name, normalizedListener);\n            });\n        };\n\n    },\n    normalize: normalizeWheelEvent\n};\n\nfunction normalizeWheelEvent(e: any): MouseWheelEvent {\n    const deltaX = api.getDelta(e, true);\n    const deltaY = api.getDelta(e);\n    const newEvent = Object.create(e, {\n        deltaY: {\n            value: deltaY\n        },\n        deltaX: {\n            value: deltaX\n        },\n        type: {\n            value: 'mousewheel'\n        },\n        target: {\n            value: e.target\n        },\n        currentTarget: {\n            value: e.currentTarget\n        },\n        defaultPrevented: {\n            value: false,\n            writable: true\n        }\n    });\n\n    newEvent.preventDefault = () => {\n        newEvent.defaultPrevented = true;\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n    };\n    return newEvent;\n}\n\nexport default api;","export default function <D>(d: D) {\n    return d;\n}","import { Grid } from '../core';\nimport { IDecorator } from '../decorators';\n\nexport interface IHeaderDecorator extends IDecorator {\n    getDecoratorLeft(): number;\n}\n\nexport interface IHeaderDecoratorCreator {\n    makeDecorator?(c: number): IHeaderDecorator;\n    annotateDecorator?(h: IHeaderDecorator): void;\n    isNeeded?(c: number): boolean;\n}\n\nexport interface IHeaderDecoratorModel extends IHeaderDecoratorCreator {\n    _decorators: { [key: number]: IHeaderDecorator | undefined };\n    makeDecorator(c: number): IHeaderDecorator;\n}\n\nexport function add(grid: Grid, model: IHeaderDecoratorCreator = {}) {\n    // tslint:disable-next-line:prefer-object-spread\n    const api: IHeaderDecoratorModel = Object.assign(model, { _decorators: {}, makeDecorator: model.makeDecorator || makeDecorator });\n\n    function makeDecorator(col: number) {\n        const decorator = grid.decorators.create(0, col, 1, 1, 'cell', 'real') as IHeaderDecorator;\n\n        decorator.getDecoratorLeft = () => {\n            const firstRect = decorator.boundingBox &&\n                decorator.boundingBox.getClientRects &&\n                decorator.boundingBox.getClientRects()[0];\n            return firstRect && grid.viewPort.toGridX(firstRect.left) || 0;\n        };\n\n        if (api.annotateDecorator) {\n            api.annotateDecorator(decorator);\n        }\n\n        return decorator;\n    }\n\n    api.makeDecorator = api.makeDecorator || makeDecorator;\n\n    function ensureDecoratorPerCol() {\n        for (let c = 0; c < grid.viewPort.cols; c++) {\n            if (!api._decorators[c]) {\n                if (api.isNeeded && !api.isNeeded(c)) {\n                    continue;\n                }\n                const decorator = api.makeDecorator(c);\n                api._decorators[c] = decorator;\n                grid.decorators.add(decorator);\n            }\n        }\n    }\n\n    grid.eventLoop.bind('grid-viewport-change', () => {\n        ensureDecoratorPerCol();\n    });\n    ensureDecoratorPerCol();\n\n    return api;\n}\n\nexport default add;","export const stringify = (data: string[][]) => {\n    let stringResult = '';\n    data.forEach((row, r) => {\n        row.forEach((value, c) => {\n            if (value.indexOf('\\n') !== -1 || value.indexOf('\\t') !== -1 || value.indexOf('\"') !== -1) {\n                // replace \" with \"\" to escape and wrap the whole value in quotes\n                value = '\"' + value.replace(/\"/g, '\"\"') + '\"';\n            }\n            stringResult += value;\n            if (c !== row.length - 1) {\n                stringResult += '\\t';\n            }\n        });\n        if (r !== data.length - 1) {\n            stringResult += '\\n';\n        }\n\n    });\n    return stringResult;\n};\n\n// ref: http://stackoverflow.com/a/1293163/2343\n// This will parse a delimited string into an array of\n// arrays. The default delimiter is the comma, but this\n// can be overriden in the second argument.\nfunction DSVToArray(strData: string, strDelimiter?: string) {\n    // Check to see if the delimiter is defined. If not,\n    // then default to comma.\n    strDelimiter = (strDelimiter || ',');\n\n    // Create a regular expression to parse the CSV values.\n    const objPattern = new RegExp(\n        (\n            // Delimiters.\n            '(\\\\' + strDelimiter + '|\\\\r?\\\\n|\\\\r|^)' +\n\n            // Quoted fields.\n            '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' +\n\n            // Standard fields.\n            '([^\"\\\\' + strDelimiter + '\\\\r\\\\n]+))'\n        ),\n        'gi'\n    );\n\n    // Create an array to hold our data. Give the array\n    // a default empty first row.\n    const arrData: string[][] = [\n        []\n    ];\n\n    // Create an array to hold our individual pattern\n    // matching groups.\n    let arrMatches = null;\n\n    // Keep looping over the regular expression matches\n    // until we can no longer find a match.\n    // tslint:disable-next-line:no-conditional-assignment\n    while (arrMatches = objPattern.exec(strData)) {\n\n        // Get the delimiter that was found.\n        const strMatchedDelimiter = arrMatches[1];\n\n        // Check to see if the given delimiter has a length\n        // (is not the start of string) and if it matches\n        // field delimiter. If id does not, then we know\n        // that this delimiter is a row delimiter.\n        if (\n            strMatchedDelimiter.length &&\n            strMatchedDelimiter !== strDelimiter\n        ) {\n\n            // Since we have reached a new row of data,\n            // add an empty row to our data array.\n            arrData.push([]);\n\n        }\n\n        let strMatchedValue: string;\n\n        // Now that we have our delimiter out of the way,\n        // let's check to see which kind of value we\n        // captured (quoted or unquoted).\n        if (arrMatches[2]) {\n\n            // We found a quoted value. When we capture\n            // this value, unescape any double quotes.\n            strMatchedValue = arrMatches[2].replace(\n                new RegExp('\"\"', 'g'),\n                '\"'\n            );\n\n        } else {\n\n            // We found a non-quoted value.\n            strMatchedValue = arrMatches[3];\n\n        }\n\n        // Now that we have our value string, let's add\n        // it to the data array.\n        arrData[arrData.length - 1].push(strMatchedValue);\n    }\n\n    // Return the parsed data.\n    return (arrData[0].length || !strData) && (arrData) || [\n        [strData]\n    ];\n}\n\nexport const parse = (stringData: string) => {\n    return DSVToArray(stringData, '\\t');\n};","module.exports = function innerText(el) {\n  if (el.innerText) return el.innerText;\n  if (!window.getSelection) return 'ERROR: UUPS `window.getSelection` is not available.';\n\n  var selection = window.getSelection();\n  var ranges = [];\n  var text;\n\n  // Save existing selections.\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges[i] = selection.getRangeAt(i);\n  }\n\n  // Deselect everything.\n  selection.removeAllRanges();\n\n  // Select `el` and all child nodes.\n  selection.selectAllChildren(el);\n\n  // Get the string representation of the selected nodes.\n  text = selection.toString();\n\n  // Deselect everything. Again.\n  selection.removeAllRanges();\n\n  // Restore all formerly existing selections.\n  for (var i = 0; i < ranges.length; i++) {\n    selection.addRange(ranges[i]);\n  }\n\n  // Oh look, this is what we wanted.\n  // String representation of the element, close to as rendered.\n  return text;\n\n};","// Generated by CoffeeScript 1.3.3\n(function() {\n  'use strict';\n\n  var ref, special;\n\n  ref = require('../ref').ref;\n\n  special = {\n    backspace: ref('Backspace', 8),\n    tab: ref('Tab', 9),\n    enter: ref('Enter', 13),\n    shift: ref('Shift', 16),\n    ctrl: ref('Ctrl', 17),\n    alt: ref('Alt', 18),\n    caps: ref('Caps Lock', 20),\n    esc: ref('Escape', 27),\n    space: ref('Space', 32),\n    num: ref('Num Lock', 144)\n  };\n\n  module.exports = special;\n\n}).call(this);\n","// Generated by CoffeeScript 1.3.3\n(function() {\n  'use strict';\n\n  var arrow, ref;\n\n  ref = require('../ref').ref;\n\n  arrow = {\n    left: ref('Left', 37),\n    up: ref('Up', 38),\n    right: ref('Right', 39),\n    down: ref('Down', 40)\n  };\n\n  module.exports = arrow;\n\n}).call(this);\n","// Generated by CoffeeScript 1.3.3\n(function() {\n  'use strict';\n\n  var punctuation, ref;\n\n  ref = require('../ref').ref;\n\n  punctuation = {\n    colon: ref('Colon/Semicolon', [59, 186]),\n    equal: ref('Equal/Plus', [61, 187]),\n    comma: ref('Comma/Less Than', [44, 188]),\n    hyphen: ref('Hyphen/Underscore', [45, 109, 189]),\n    period: ref('Period/Greater Than', [46, 190]),\n    tilde: ref('Tilde/Back Tick', [96, 192]),\n    apostrophe: ref('Apostrophe/Quote', [39, 222]),\n    slash: {\n      forward: ref('Forward Slash/Question Mark', [47, 191]),\n      backward: ref('Backward Slash/Pipe', 220)\n    },\n    brace: {\n      square: {\n        open: ref('Open Square/Curly Brace', 219),\n        close: ref('Close Square/Curly Brace', 221)\n      }\n    }\n  };\n\n  punctuation.semicolon = punctuation.colon;\n\n  punctuation.plus = punctuation.equal;\n\n  punctuation.lessthan = punctuation.comma;\n\n  punctuation.underscore = punctuation.hyphen;\n\n  punctuation.greaterthan = punctuation.period;\n\n  punctuation.question = punctuation.slash.forward;\n\n  punctuation.backtick = punctuation.tilde;\n\n  punctuation.pipe = punctuation.slash.backward;\n\n  punctuation.quote = punctuation.apostrophe;\n\n  punctuation.brace.curly = punctuation.brace.square;\n\n  module.exports = punctuation;\n\n}).call(this);\n","// Generated by CoffeeScript 1.3.3\n(function() {\n  'use strict';\n\n  var alnum, ref;\n\n  ref = require('../ref').ref;\n\n  alnum = {\n    '0': ref('0', 48),\n    '1': ref('1', 49),\n    '2': ref('2', 50),\n    '3': ref('3', 51),\n    '4': ref('4', 52),\n    '5': ref('5', 53),\n    '6': ref('6', 54),\n    '7': ref('7', 55),\n    '8': ref('8', 56),\n    '9': ref('9', 57),\n    a: ref('A', 65),\n    b: ref('B', 66),\n    c: ref('C', 67),\n    d: ref('D', 68),\n    e: ref('E', 69),\n    f: ref('F', 70),\n    g: ref('G', 71),\n    h: ref('H', 72),\n    i: ref('I', 73),\n    j: ref('J', 74),\n    k: ref('K', 75),\n    l: ref('L', 76),\n    m: ref('M', 77),\n    n: ref('N', 78),\n    o: ref('O', 79),\n    p: ref('P', 80),\n    q: ref('Q', 81),\n    r: ref('R', 82),\n    s: ref('S', 83),\n    t: ref('T', 84),\n    u: ref('U', 85),\n    v: ref('V', 86),\n    w: ref('W', 87),\n    x: ref('X', 88),\n    y: ref('Y', 89),\n    z: ref('Z', 90)\n  };\n\n  module.exports = alnum;\n\n}).call(this);\n","// Generated by CoffeeScript 1.3.3\n(function() {\n  'use strict';\n\n  var brand, ref;\n\n  ref = require('../ref').ref;\n\n  brand = {\n    apple: ref('Apple &#8984;', 224),\n    windows: {\n      start: ref('Windows start', [91, 92]),\n      menu: ref('Windows menu', 93)\n    }\n  };\n\n  module.exports = brand;\n\n}).call(this);\n","module.exports.listen = function listenForClickOff(elem, onClickOff, opts) {\n\tvar parsedOpts = opts || {}\n\t\t// we use mousedown to check the target because the click could cause the element to be removed and it'll look like it's not in us\n\tvar lastMouseDownWasOutside = false;\n\t// check again after timeout\n\tvar eventListenerElement = parsedOpts.eventListenerElement || document;\n\tvar isInMe = parsedOpts.isInMe;\n\n\tfunction mousedownHandler(e) {\n\t\tif (typeof elem === 'function') {\n\t\t\telem = elem();\n\t\t}\n\t\tlastMouseDownWasOutside = !elem || !(elem === e.target || elem.contains(e.target)) && !(isInMe && isInMe(e.target));\n\t}\n\n\tfunction mouseupHandler(e) {\n\t\tif (lastMouseDownWasOutside) {\n\t\t\tonClickOff(e);\n\t\t}\n\t}\n\teventListenerElement.addEventListener('mousedown', mousedownHandler);\n\teventListenerElement.addEventListener('mouseup', mouseupHandler);\n\n\treturn function unbindClickOffListeners() {\n\t\teventListenerElement.removeEventListener('mousedown', mousedownHandler);\n\t\teventListenerElement.removeEventListener('mouseup', mouseupHandler);\n\t};\n};\n","'use strict';\n\nmodule.exports = (function() {\n  var perf = window && window.performance;\n  if (perf && perf.now) {\n    return perf.now.bind(perf);\n  } else {\n    return function() {\n      return new Date().getTime();\n    };\n  }\n}());\n","var globalStack;\n\nfunction makeStack() {\n    var stack = [];\n\n    // in order to capture escape event first\n    document.body.addEventListener('keydown', function(e) {\n\n        var key = e.keyCode ? e.keyCode : e.which;\n        // yup i hard coded 27 sorry suckas\n        if (key === 27) {\n            while (!!stack.length && !(stack.pop())(e)) {}\n        }\n    }, true);\n\n    function addEscapeHandler(handler) {\n        stack.push(handler);\n        return function() {\n            removeEscapeHandler(handler);\n        };\n    }\n\n    function removeEscapeHandler(handler) {\n        var index = stack.indexOf(handler);\n        if (index !== -1) {\n            stack.splice(index, 1);\n        }\n    }\n    return {\n        add: addEscapeHandler\n    };\n}\n\nmodule.exports = function(global) {\n    if (!global) {\n        return makeStack();\n    }\n\n    if (!globalStack) {\n        globalStack = makeStack();\n    }\n    return globalStack;\n};\n","import makeSimpleGrid from \"../modules/simple-grid\";\nimport \"../scss/grid-custom.scss\";\n\nconst container = document.getElementsByClassName(\n  \"grid-app-container\"\n)[0] as HTMLElement;\n\nconst numRows = 1000;\nconst numCols = 100;\n\nconst grid = makeSimpleGrid(\n  numRows,\n  numCols,\n  [30],\n  [50, 100, 400, 90],\n  1,\n  3,\n  undefined,\n  1,\n  1,\n  {\n    allowEdit: true,\n    snapToCell: false,\n  }\n);\ngrid.colModel.get(0).width = 60;\ngrid.colModel.get(2).width = 60;\ngrid.build(container);\ngrid.pixelScrollModel.maxIsAllTheWayFor.height = true;\n// grid.fps.logging = true;\n\n// hide column for testing\nfor (let c = 0; c < grid.colModel.length(); c++) {\n  if (c > 4 && c % 5 === 0) {\n    grid.colModel.get(c).hidden = true;\n  }\n}\n\nfor (let r = 0; r < grid.rowModel.length(); r++) {\n  const row = grid.rowModel.get(r);\n  row.children = [];\n  for (let s = 0; s < Math.floor(Math.random() * 5) + 1; s++) {\n    const subRow = grid.rowModel.create();\n    subRow.dataRow = s;\n    subRow.dataLayer = 1;\n    row.children.push(subRow);\n  }\n}\n\nconst builder = grid.colModel.createBuilder(\n  () => {\n    return document.createElement(\"a\");\n  },\n  (elem, ctx) => {\n    grid.viewLayer.setTextContent(elem, ctx.data.formatted);\n    return elem;\n  }\n);\n\nconst expansionColDescriptor = grid.colModel.get(0);\nexpansionColDescriptor.builder = grid.colModel.createBuilder(\n  (ctx) => {\n    const a = document.createElement(\"a\");\n    a.style.cursor = \"pointer\";\n    a.style.color = \"#aaa\";\n    grid.eventLoop.bind(a, \"click\", () => {\n      const row = grid.rowModel.get(grid.view.row.toVirtual(ctx.viewRow));\n      row.expanded = !row.expanded;\n    });\n    return a;\n  },\n  (elem, ctx) => {\n    if (elem) {\n      const row = grid.rowModel.get(ctx.virtualRow);\n      elem.textContent = !row.children ? \"\" : \"▸\";\n    }\n    return elem;\n  }\n);\ngrid.colModel.get(0).width = 30;\n// grid.colModel.get(1).builder = builder;\ngrid.colModel.get(2).builder = builder;\n\nconst headerRow = grid.rowModel.get(0);\nheaderRow.isBuiltActionable = false;\nheaderRow.builder = grid.rowModel.createBuilder(\n  () => {\n    const div = document.createElement(\"div\");\n    div.innerHTML =\n      '<div><div></div><div style=\"color:#777;text-transform: capitalize;\"></div></div>';\n    return div.firstChild as HTMLElement;\n  },\n  (builtElem, ctx) => {\n    if (ctx.virtualCol === 0) {\n      return builtElem;\n    }\n    if (builtElem) {\n      builtElem.children[0].textContent = ctx.data.formatted;\n      builtElem.children[1].textContent = \"header\" + ctx.virtualCol;\n    }\n    return builtElem;\n  },\n  true\n);\n\nheaderRow.height = 40;\n","import { IColDescriptor, IRowDescriptor } from '../abstract-row-col-model';\nimport { ColModel } from '../col-model';\nimport createGrid, { Grid, IGridOpts } from '../core';\nimport { RowModel } from '../row-model';\nimport createSimpleDataModel, { ISimpleDataModel } from '../simple-data-model';\n\nexport interface ISimpleGrid extends Grid {\n    dataModel: ISimpleDataModel;\n    rowModel: ISimpleRowModel;\n    colModel: ISimpleColModel;\n}\n\nexport interface ISimpleGridRow extends IRowDescriptor {\n    dataRow: number;\n    dataLayer?: number;\n}\nexport interface ISimpleGridCol extends IColDescriptor {\n    dataCol: number;\n}\n\nexport interface ISimpleRowModel extends RowModel {\n    row: (idx: number) => ISimpleGridRow;\n    get(idx: number): ISimpleGridRow;\n    create(): ISimpleGridRow;\n}\n\nexport interface ISimpleColModel extends ColModel {\n    col: (idx: number) => ISimpleGridCol;\n    get(idx: number): ISimpleGridCol;\n    create(): ISimpleGridCol;\n}\n\nexport function create(\n    numRows: number,\n    numCols: number,\n    varyHeights?: number[],\n    varyWidths?: number[],\n    fixedRows?: number,\n    fixedCols?: number,\n    preSetupFn?: (grid: Grid) => void,\n    headerRows?: number,\n    headerCols?: number,\n    opts?: IGridOpts\n) {\n\n    const grid = createGrid(opts) as ISimpleGrid;\n    grid.dataModel = createSimpleDataModel(grid);\n\n    if (preSetupFn) {\n        preSetupFn(grid);\n    }\n\n    headerRows = headerRows || 0;\n    headerCols = headerCols || 0;\n\n    if (numRows) {\n        const rows = [];\n        const cols = [];\n        for (let r = 0; r < numRows + headerRows; r++) {\n            const row = grid.rowModel.create() as ISimpleGridRow;\n            const dataRow = r - headerRows;\n            row.dataRow = dataRow;\n            if (r < headerRows) {\n                row.dataRow = r;\n                row.header = true;\n            } else if (fixedRows != undefined && r < fixedRows + headerRows) {\n                row.fixed = true;\n            }\n            if (Array.isArray(varyHeights)) {\n                row.height = varyHeights[r % varyHeights.length];\n            }\n            rows.push(row);\n            if (numCols) {\n                for (let c = 0; c < numCols + headerCols || 0; c++) {\n                    const dataCol = c - headerCols;\n                    if (r === 0) {\n                        const col = grid.colModel.create() as ISimpleGridCol;\n                        col.dataCol = dataCol;\n                        if (c < headerCols) {\n                            col.dataCol = c;\n                            col.header = true;\n                        } else if (fixedCols != undefined && c < fixedCols + headerCols) {\n                            col.fixed = true;\n                        }\n                        if (varyWidths) {\n                            col.width = Array.isArray(varyWidths) ?\n                                varyWidths[c % varyWidths.length] :\n                                Math.random() * 10 + 101;\n\n                        }\n                        cols.push(col);\n                    }\n                    if (c < headerCols || r < headerRows) {\n                        grid.dataModel.setHeader(r, c, [r + '', c + '']);\n                    } else {\n                        grid.dataModel.set(dataRow, dataCol, [dataRow, dataCol]);\n                    }\n                }\n            }\n        }\n        grid.rowModel.add(rows);\n        grid.colModel.add(cols);\n    }\n\n    return grid;\n}\n\nexport default create;","import { Grid } from '../core';\nimport { IDataModel, IGridDataChange, IGridDataResult } from '../data-model';\nimport makeDirtyClean from '../dirty-clean';\nimport { ISimpleGrid } from '../simple-grid';\n\nexport interface ISimpleDataModel extends IDataModel {\n  setHeader(virtualRow: number, virtualCol: number, datum: string[]): void;\n}\n\nexport function create(_grid: Grid) {\n  const grid = _grid as ISimpleGrid;\n  type InternalData = Pick<IGridDataResult<string[]>, 'value'>;\n  type DataRow = InternalData[];\n  const cellData: DataRow[] = [];\n  const headerData: DataRow[] = [];\n  let sortedCol: number | undefined;\n  let ascending = false;\n  const dirtyClean = makeDirtyClean(grid);\n  const internalSet = (data: DataRow[], r: number, c: number, datum: string[]) => {\n    if (!data[r]) {\n      data[r] = [];\n    }\n    data[r][c] = {\n      value: datum\n    };\n    dirtyClean.setDirty();\n  };\n\n  const api: ISimpleDataModel = {\n    isDirty: dirtyClean.isDirty,\n    setDirty: dirtyClean.setDirty,\n    handleCachedDataChange: dirtyClean.setDirty,\n    set(rowOrData: number | Array<IGridDataChange<any>>, c?: number, datum?: string | string[]) {\n      let data: Array<IGridDataChange<any>>;\n      if (!Array.isArray(rowOrData)) {\n        if (typeof datum === 'string') {\n          datum = datum.replace('[rR]', '').replace('[cC]', '').split(' ');\n        }\n        data = [{\n          row: rowOrData,\n          col: c as number,\n          value: datum\n\n        }];\n      } else {\n        data = rowOrData;\n      }\n      data.forEach((change) => {\n        internalSet(cellData, change.row, change.col, change.value);\n      });\n    },\n    setHeader(r: number, c: number, datum: string[]) {\n      internalSet(headerData, r, c, datum);\n    },\n    get(r: number, c: number, _isCopy?: boolean) {\n      const rowDescriptor = grid.rowModel.row(r);\n      if (!rowDescriptor) {\n        return {\n          value: undefined,\n          formatted: ''\n        };\n      }\n      const dataRow = cellData[rowDescriptor.dataRow];\n      const datum = dataRow && dataRow[grid.colModel.col(c).dataCol];\n      const value = datum && datum.value;\n      const formatted = !Array.isArray(value) ?\n        value :\n        (rowDescriptor.dataLayer ? ' s' + rowDescriptor.dataLayer + ' ' : '') + 'r' + value[0] + ' c' + value[1]\n        ;\n\n      return {\n        value,\n        formatted: formatted || ''\n      };\n    },\n    getHeader(r: number, c: number) {\n      const dataRow = headerData[grid.rowModel.get(r).dataRow];\n\n      const datum = dataRow && dataRow[grid.colModel.get(c).dataCol];\n      const value = datum && datum.value;\n      return {\n        value,\n        formatted: value && 'hr' + value[0] + ' hc' + value[1] || ''\n      };\n    },\n\n    toggleSort(c: number) {\n      let retVal = -1;\n      const compareMethod = (val1: string, val2: string) => {\n        return val1 < (val2) ? retVal : -1 * retVal;\n      };\n      if (c === sortedCol) {\n        if (ascending) {\n          retVal = 1;\n        }\n        ascending = !ascending;\n      } else {\n        sortedCol = c;\n        ascending = true;\n      }\n      cellData.sort((dataRow1, dataRow2) => {\n        if (!dataRow1 || !dataRow1[c]) {\n          return retVal;\n        }\n        if (!dataRow2 || !dataRow2[c]) {\n          return retVal * -1;\n        }\n        return compareMethod(dataRow1[c].value[1], dataRow2[c].value[1]);\n      });\n      dirtyClean.setDirty();\n    }\n  };\n\n  return api;\n}\n\nexport default create;"],"sourceRoot":""}